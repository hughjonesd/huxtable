name: setup-dependencies

on:
  workflow_call:
    inputs:
      os:
        description: 'Runner operating system'
        required: true
        type: string
      r-version:
        description: 'R version to set up'
        required: true
        type: string
      rspm:
        description: 'RStudio Package Manager repository URL'
        required: false
        type: string
      extra-packages:
        description: 'Additional CRAN packages to install'
        required: false
        default: ''
        type: string
      run-command:
        description: 'R command to run after setup'
        required: true
        type: string
      cache-version:
        description: 'Cache version for R packages'
        required: false
        default: '1'
        type: string
      upload-check:
        description: 'Upload check results on failure'
        required: false
        default: false
        type: boolean
jobs:
  setup:
    runs-on: ${{ inputs.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ inputs.rspm }}
      _R_CHECK_CRAN_INCOMING_REMOTE_: false
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ inputs.r-version }}
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-tinytex@v2
      - run: tlmgr update --self
        env:
          CTAN_REPO: https://mirror.las.iastate.edu/tex-archive/systems/texlive/tlnet/
        shell: bash
      - run: tlmgr install adjustbox ulem wrapfig threeparttable fontspec
        env:
          CTAN_REPO: https://mirror.las.iastate.edu/tex-archive/systems/texlive/tlnet/
        shell: bash
      - run: tlmgr install placeins
        env:
          CTAN_REPO: https://mirror.las.iastate.edu/tex-archive/systems/texlive/tlnet/
        shell: bash
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), '.github/depends.Rds', version = 2)
          writeLines(sprintf('R-%i.%i', getRversion()$major, getRversion()$minor), '.github/R-version')
        shell: Rscript {0}
      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-${{ inputs.cache-version }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-${{ inputs.cache-version }}-
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
        shell: bash
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          if (nzchar('${{ inputs.extra-packages }}')) remotes::install_cran(strsplit('${{ inputs.extra-packages }}', ' +')[[1]])
        shell: Rscript {0}
      - name: Run command
        run: ${{ inputs.run-command }}
        shell: Rscript {0}
      - name: Upload check results
        if: ${{ inputs.upload-check && failure() }}
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ inputs.r-version }}-results
          path: check
