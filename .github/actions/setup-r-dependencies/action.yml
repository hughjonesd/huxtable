name: 'Setup R dependencies'
description: 'Install R, pandoc, and cache dependencies'
inputs:
  r-version:
    description: 'R version to set up'
    required: true
  extra-packages:
    description: 'Additional CRAN packages to install'
    required: false
    default: ''
  cache-version:
    description: 'Cache version for R packages'
    required: false
    default: '1'
runs:
  using: 'composite'
  steps:
    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ inputs.r-version }}
    - uses: r-lib/actions/setup-pandoc@v2
    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), '.github/depends.Rds', version = 2)
        writeLines(sprintf('R-%i.%i', getRversion()$major, getRversion()$minor), '.github/R-version')
      shell: Rscript {0}
    - name: Cache R packages
      if: runner.os != 'Windows'
      uses: actions/cache@v4
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-${{ inputs.cache-version }}-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-${{ inputs.cache-version }}-
    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        while read -r cmd
        do
          eval sudo $cmd
        done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
      shell: bash
    - name: Install dependencies
      run: |
        remotes::install_deps(dependencies = TRUE)
        if (nzchar('${{ inputs.extra-packages }}')) remotes::install_cran(strsplit('${{ inputs.extra-packages }}', ' +')[[1]])
      shell: Rscript {0}
