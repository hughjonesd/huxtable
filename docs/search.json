[{"path":[]},{"path":"/AGENTS.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Instructions to llm agents","text":"Read design.md get overview huxtable’s architecture. Read agent-notes.md read notes previous llms.","code":""},{"path":"/AGENTS.html","id":"writing-code-tests-and-docs","dir":"","previous_headings":"","what":"Writing code, tests and docs","title":"Instructions to llm agents","text":"Use short branch names. Start “feature”, “bugfix”, “refactor” “chore”. Don’t change API without asking first. find user-visible bug, consider writing test . Title test “Bugfix: …” put relevant existing test file. use confirm ’ve fixed bug. write new function, give Roxygen documentation. ’s internal, use @noRd tag, keep simple developer-focused. Similarly, edit existing internal function, take chance document . understand architecture huxtable, update design.md. general notes might useful future llms working project, write agent-notes.md. Don’t forget add suggested changes PR. ’ve written user-visible Roxygen, run devtools::document(). can ignore errors due missing packages (“flextable”, “lmtest”) unless ’re working particular parts system. , just install missing packages.","code":""},{"path":"/AGENTS.html","id":"testing-your-work","dir":"","previous_headings":"","what":"Testing your work","title":"Instructions to llm agents","text":"end task, ’ve made changes, run tests tests/testthat make sure everything still working. errors due code, fix completing. don’t run every test; particular test-yy-end--end.R test-zz-fuzz.R may take long time may want skip , even just run single test file ’re confident. (Github run full suite tests later.) make big architectural changes, run almost tests. can filter fuzz tests using: devtools::test(filter = \"^(?!.*fuzz)\", perl = TRUE).","code":""},{"path":"/AGENTS.html","id":"installing-extra-components","dir":"","previous_headings":"","what":"Installing extra components","title":"Instructions to llm agents","text":"can install quarto, typst, latex running ./install-*.sh files home directory. installed automatically save setup time. Install need test relevant features. typst documentation available easy--read format https://github.com/typst/typst/tree/main/docs. may useful clone repository /workspace. packages Suggests: DESCRIPTION file installed. can install need . , tests break suggested package installed, bug probably fix using skip_if_not_installed() - separate PR possible. need install big, well-known packages like dplyr, try install via apt-get ---install-recommends install r-cran-dplyr using install.packages() R. want build vignettes, ’ll need R.rsp package. Alternatively, don’t build vignettes build package, passing ---build-vignettes flag devtools::build().","code":""},{"path":"/AGENTS.html","id":"documenting-your-work","dir":"","previous_headings":"","what":"Documenting your work","title":"Instructions to llm agents","text":"make important user-visible changes, add item NEWS.md. Follow formatting existing entries. Run devtools::document() afterwards, news copied help file ?huxtable-news. update NEWS.md unimportant changes, like tweaks documentation. update NEWS.md bugfixes feature introduced release. .e. don’t mention bugfixes unless bug already visible users previous version package.","code":""},{"path":"/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md","title":"CLAUDE.md","text":"file provides guidance Claude Code (claude.ai/code) working code repository.","code":""},{"path":"/CLAUDE.html","id":"section","dir":"","previous_headings":"","what":"CLAUDE.md","title":"CLAUDE.md","text":"behave: - Dial sycophancy. don’t need (e.g.) constantly tell “perfect”, open possibility ’m wrong code R. Feel free challenge assumptions.","code":""},{"path":"/CLAUDE.html","id":"project-overview","dir":"","previous_headings":"","what":"Project Overview","title":"CLAUDE.md","text":"Huxtable R package creating styled tables multiple output formats (HTML, LaTeX, RTF, Word, Excel, PowerPoint). provides modern interface manipulate borders, size, position, captions, colors, text styles number formatting, table cells can span multiple rows/columns.","code":""},{"path":[]},{"path":"/CLAUDE.html","id":"testing","dir":"","previous_headings":"Development Commands","what":"Testing","title":"CLAUDE.md","text":"Run tests: devtools::test() Run tests except fuzz tests: devtools::test(filter = \"^(?!.*fuzz)\", perl = TRUE) Run single test file: devtools::test(filter = \"test-file-name\") Test files tests/testthat/","code":""},{"path":"/CLAUDE.html","id":"building-and-checking","dir":"","previous_headings":"Development Commands","what":"Building and Checking","title":"CLAUDE.md","text":"Build package: devtools::build() Build without vignettes: devtools::build(build_opts = \"---build-vignettes\") Run R CMD check: devtools::check(document = FALSE, remote = TRUE) Generate documentation: devtools::document()","code":""},{"path":"/CLAUDE.html","id":"coverage","dir":"","previous_headings":"Development Commands","what":"Coverage","title":"CLAUDE.md","text":"Run coverage analysis: see run-covr.R script","code":""},{"path":"/CLAUDE.html","id":"release-process","dir":"","previous_headings":"Development Commands","what":"Release Process","title":"CLAUDE.md","text":"Full CRAN release workflow: see build-cran.R script Includes vignette building, reverse dependency checks, cross-platform testing","code":""},{"path":[]},{"path":"/CLAUDE.html","id":"core-object-structure","dir":"","previous_headings":"Architecture Overview","what":"Core Object Structure","title":"CLAUDE.md","text":"Main constructor: huxtable() (aliased hux()) R/creation.R Internal constructor: new_huxtable() R/creation-internal.R Huxtable objects data frames matrix/vector attributes formatting properties Properties include cell, column, row, table-level attributes stored huxtable_env$huxtable_default_attrs","code":""},{"path":"/CLAUDE.html","id":"key-component-files","dir":"","previous_headings":"Architecture Overview","what":"Key Component Files","title":"CLAUDE.md","text":"Property system: R/property-helpers.R - defines supported properties helper functions Content processing: R/clean-contents.R - handles number formatting, markdown rendering, escaping R/html.R - HTML table generation R/latex.R - LaTeX output floating environments R/typst.R - Typst format support R/rtf.R - RTF format R/md.R - Markdown output Integration: R/knitr.R - knitr/RMarkdown integration format detection R/subset-extract.R - subsetting operations R/merge.R - cell merging R/bind-insert.R - row/column operations Quick functions: R/quick-functions.R - one-liner output functions Regression tables: R/huxreg.R - automated regression table creation","code":""},{"path":"/CLAUDE.html","id":"property-management","dir":"","previous_headings":"Architecture Overview","what":"Property Management","title":"CLAUDE.md","text":"Properties organized four categories: - Cell properties (alignment, borders, padding, colors, text formatting) - Column properties (width, header designation) - Row properties (height) - Table properties (caption, position, width) Property getters/setters use consistent interface mapping functions bulk operations.","code":""},{"path":"/CLAUDE.html","id":"output-pipeline","dir":"","previous_headings":"Architecture Overview","what":"Output Pipeline","title":"CLAUDE.md","text":"Content cleaning via clean_contents() (number formatting, markdown, escaping) Format-specific rendering (HTML, LaTeX, etc.) Integration document systems (knitr, RMarkdown, Quarto)","code":""},{"path":[]},{"path":"/CLAUDE.html","id":"code-organization","dir":"","previous_headings":"Development Guidelines","what":"Code Organization","title":"CLAUDE.md","text":"Functions grouped responsibility separate R files Property-related functions follow naming conventions (get_*, set_*) Test files mirror R file organization test- prefix","code":""},{"path":"/CLAUDE.html","id":"testing-requirements","dir":"","previous_headings":"Development Guidelines","what":"Testing Requirements","title":"CLAUDE.md","text":"Write tests user-visible bugs “Bugfix: …” titles Place tests relevant existing test file Use skip_if_not_installed() optional dependencies Files test-yy-end--end.R test-zz-fuzz.R may take longer run","code":""},{"path":"/CLAUDE.html","id":"documentation-standards","dir":"","previous_headings":"Development Guidelines","what":"Documentation Standards","title":"CLAUDE.md","text":"New functions require Roxygen documentation Internal functions use @noRd tag User-visible changes require NEWS.md entries Run devtools::document() documentation changes","code":""},{"path":"/CLAUDE.html","id":"branch-naming","dir":"","previous_headings":"Development Guidelines","what":"Branch Naming","title":"CLAUDE.md","text":"Use short branch names starting : “feature”, “bugfix”, “refactor”, “chore”","code":""},{"path":"/CLAUDE.html","id":"important-notes","dir":"","previous_headings":"Development Guidelines","what":"Important Notes","title":"CLAUDE.md","text":"Don’t change API without asking first Update design.md architectural insights Update agent-notes.md general development notes Install optional packages needed DESCRIPTION Suggests packages (flextable, lmtest) may missing - install working features AGENTS.md written OpenAI Codex mind, everything accurate.","code":""},{"path":"/CLAUDE.html","id":"key-files-to-reference","dir":"","previous_headings":"","what":"Key Files to Reference","title":"CLAUDE.md","text":"design.md - detailed architecture overview agent-notes.md - notes previous development work AGENTS.md - specific instructions LLM agents README.md - user-facing documentation DESCRIPTION - package metadata dependencies","code":""},{"path":"/CLAUDE.html","id":"additional-tools","dir":"","previous_headings":"","what":"Additional Tools","title":"CLAUDE.md","text":"Typst documentation: https://github.com/typst/typst/tree/main/docs can set environment variable NOT_CRAN avoid skip_on_cran(), tink","code":""},{"path":"/TODO.html","id":null,"dir":"","previous_headings":"","what":"TODO","title":"TODO","text":"(5.0) means API change, consider version 5.0","code":""},{"path":"/TODO.html","id":"priority-changes","dir":"","previous_headings":"","what":"Priority changes","title":"TODO","text":"border styles: TeX Bug: single horizontal borders “start” late double vertical border joins Bug: HTML borders aren’t precollapsed, ? (Check status.) Factor shared code quick_* functions helper reduce duplication. Fixing border properties. left_border, left_border_style et al. (left_padding et al.) set one two lists 3 matrices. stored attributes lr_borders tb_borders left_ right_ borders nrow x (ncol+1) top bottom borders (nrow +1) x ncol 3 matrices reference border thickness, style colour left_border<- et al. accept “bdr” object (list 3) set appropriately. objects run always (now!) copying merging attributes","code":""},{"path":"/TODO.html","id":"post-50-changes","dir":"","previous_headings":"","what":"Post 5.0 changes","title":"TODO","text":"Subsetting huxtables respect rowspan. example: gives “Price” heading, thought hidden! something like output.class.format() using S3 double dispatch? , maybe simpler, just output(x, format)… output S3 generic. inputs left_border()<- function friends. functions redesigned write two arrays borders. Also attributes stored cells rewritten copy/subset! happens [.huxtable, [<-.huxtable, delete_props merge_props, called methods; set_attr_dimnames. span changes longer affect borders, since wouldn’t disturb array cells. top_border(ht)[x + 1,] bottom_border(ht)[x,] overwrite ; similarly left right borders. reimplement final(), stripe everywhere like last_col()? work tidyselect-rc-spec branch. One problem eval_select doesn’t work logicals. Another, maybe deeper one conflict set_bold(1:3, c(gear, mpg)) set_bold(1:3, some_vector) logical numeric character. ’s similarly hackish approach CSS using :create imaginary border. one need thing vertical borders? (Actuallly pretty much currently works LaTeX.) HTML (FF), 4 “outer” corners different colours split diagonally; corners, horizontal borders priority except top row. .e. ’s unreliable mess! transparent colours HTML, RTF, docx?","code":"j2 <- jams %>% merge_cells(1, 1:2) %>% set_all_borders() j2[2]"},{"path":"/TODO.html","id":"future-thoughts","dir":"","previous_headings":"","what":"Future thoughts","title":"TODO","text":"general, properties unset, pick dynamically “good defaults”, rather setting predictable default. better general solution autoformat, maybe retired…. Get rid max_width to_screen, to_md. ’s huge hassle code, uses ? though problem keep options(screen), fact argument. Drop shadows? :-) looks like Tikz job TeX… Separate table format representation output table creation. Create “textable” package handles representation just basic as_textable methods data frames etc. representation probably list rows, columns, cells, subcomponents - content just another subcomponent maybe R6 Output formats: allow different engines different output formats (engines options, e.g. use_cline vs use_hhline) e.g. tikz (see “matrix” package tikz manual) maybe separate output formats different packages? Fix problem different classes padding, col_widths etc. (5.0) Bring back is_a_number Make everything list-matrix introduce explicit units character representation Including e.g. pct() can still pct(.5, .25, .25) Units can LaTeX HTML representation course depends context, maybe function like format(unit, context) context might ‘HTML-width’ something still use characters (“5pt”, “10%”) API, internally converted presumably units (errors?) package relevant easiest thing probably widths always character multiple units. autoconvert numbers percentages input. Border API rework (5.0) different set commands stored internally vert/horiz arrays always precollapsed definition maybe single class borders e.g. `set_borders(ht, 1:2, 1:2, border(“”, 1, “red”, “solid”)) first arg lrtb, , outer, vert, horiz, inner similarly padding: `set_padding(ht, 1:2, 1:2, pad(“”, 2)) Text class also? (5.0) set_text(ht, text(10, 'black', 'italic', 'cmss')) one also e.g. escaped(“λ\\lambda”) autoset escape_contents hux$foo <- 1:5 (foo new column) copy properties like cbind? (5.0) Changes shadowed cell redirected shadowing cell (5.0), generally affect merged cell (e.g. borders work relevant area, assuming two merged cells) fits “merge_cells” idea aware accidents e.g. border set row, one merged cell picks (now!) e.g. June, set huxtable.add_colnames TRUE default (5.0). headers property? (5.0) header rows columns addressed using 3 argument set_ syntax; e.g. headers() function returning matrix headers copied (default?) subset huxtables arbitrary rows columns can headers; presumably “relevant” header next one left/top (except RTL languages?) maybe headers might numeric level rather simple TRUE FALSE. different styles different levels. use tidyselect::vars_select columns set_ interface (5.0) Advantage: consistent dplyr, allows e.g. set_bold(ht, 1, :b, TRUE) Downside: can’t use logical vectors columns (without strong trickery); misleading can’t e.g. set_bold(ht, 1, , b, c, TRUE) One possibility allow . ’d take nargs (now) change nargs == 4 nargs >= 4. downside ’s clear division rows columns. See new-colspec-ideas.md file thoughts","code":""},{"path":"/TODO.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs","title":"TODO","text":"use raw content p/m/b, content wraps, padding fails (left pads top line, right pads bottom) use mbox p/m/b content doesn’t wrap, cells don’t expand use l/c/r, table position goes wonky cells expand; worse, background colors can messed previous cells expected table expand! need respect valign (p/m/b wrapped cells). valign nowrap cell? cells expand match nowrap width default first issue happen often, fix obvious user (wider table!)","code":""},{"path":"/TODO.html","id":"possibles","dir":"","previous_headings":"","what":"Possibles","title":"TODO","text":"table-wide row/col-wide settings automatically apply new cells? e.g. ht %>% set_bold(TRUE) %>% insert_row(\"Blah\", \"blah\"), new row bold TRUE? different way thinking copying stuff new rows, might natural implementation means store table/row/col/cell-level properties separately, overlay pull . copying get messy fast. instead copying mean properties set e.g. everywhere row copied new column. new rows header row different? <- syntax, can’t tell subset applied , right? opendocument text/spreadsheet libreoffice? point. Guess lot demand. as_datatable DT::renderDT()? Useful want add slick features DT work format* functions number_format formatStyle can deal bold, text_color, background_color, font_size et al. also styleInterval styleEqual fun look familiarity? Easy change ? Look perl’s Latex::Table autouses ‘p{5cm}’ column cols > 30 chars cell Use purrr rlang features, depend packages anyway Use cli to_screen? maybe get ideas code. also double borders. col_to_headers take column, sort unique values, replace column rowspan-merged header? might relate headers flag, allow header rows middle data perhaps method data frames (outputs huxtable) maybe allow multiple columns Rotate whole table using “rotating” package (PDF) HTML (simple CSS rotation table element, probably)? Better centring LaTeX tables handling width. Maybe push Replace latex_float float use CSS float property table (deals text flow)? label, means different things; also different values, set float() code wouldn’t work HTML TeX… Tricky. course many things don’t work identically HTML TeX. wrapfig package defines lets text wrap around. doesn’t play nicely floats anyway, one option single float() TeX possibilities. Alternatively e.g. wraparound(), keep latex_float() separate. can combine options HTML float (left/right) wrapfig float. rescale numeric row_height col_width subsetting, now rbind/cbind? Rename clean_contents export ? Conceivably, people might want override individual cell contents raw HTML/TeX/plain text. still wouldn’t affect properties. use double-line feature handle multiple border widths? .e. top line background, bottom line border? sure can change colours halfway though facilities re-writing table existing document. ’d need way identify table (perhaps automatic id table-level property, automatically set random number) might also want overwrite contents without affecting style. (certain aspects style? E.g. bold significance stars, may data dependent.) may separate package. collapsed_border_xxx return left, right, top, bottom rather vert, horiz? collapsing, might want provide lrtb borders special-case single horizontal lines across whole table? make similar work way address particular subset matrix, e.g. ht %>% area(1:3, 4:6) %>% set_italic(TRUE) %>% set_border_color(‘red’) presumably returns ht attribute appropriately set, analogous groups tibble also separate package!","code":""},{"path":"/TODO.html","id":"put-off-or-abandoned","dir":"","previous_headings":"","what":"Put off or abandoned","title":"TODO","text":"cell spacing? allows natural gaps borders; see e.g. economist forecaster tables. alternative small empty cells, ’s hack just hard TeX table descriptive statistics using skimr: think even good idea people shouldn’t just DIY skim_to_wide? Yeah, maybe Methods R packages? janitor::tabyl just data frame, useful information available tibble::glimpse prints stuff returns original Use arydshln LaTeX? Seems incompatible hhline latex row height \\textheight numeric, % table height. Hard fix. inserting one hux another, row heights/col widths may longer make sense, implicit proportions. S4 classes work cbind data frames? Probably , hella complex requires reworking internals: https://stackoverflow.com/questions/47967264/dispatch--rbind--cbind---data-frame Implement dplyr::bind_rows bind_cols? aren’t methods.","code":""},{"path":[]},{"path":"/agent-notes.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Agent notes","text":"file llms record understanding code. Write notes bullet points. end note, add revision number referring . possible, update existing note adding . Don’t use simply record every change ’ve made code. architectural notes useful agents working whole codebase.","code":""},{"path":"/agent-notes.html","id":"typst-export","dir":"","previous_headings":"","what":"Typst export","title":"Agent notes","text":"to_typst() builds cell strings row--row previously left empty rows cells shadowed merges. Filter row_strings header_rows_strings nzchar() assembling table avoid stray commas. rev b07e9e37. Typst export sets stroke: none tables avoid default borders. 86529fa Typst export outputs labels using <label> #figure block cross-referencing. rev 088f1fe0 MarkdownTypstTranslator handles bold, italic, links, images, headings, strikethrough, inline code, lists via render_markdown(\"...\", \"typst\"). rev 45b775da to_typst() now uses clean_contents(..., output_type = \"typst\") markdown cells output Typst markup instead TeX. rev d233e674 typst_cell_text() wraps rotated cells #rotate(angle)[...] Typst output now supports cell rotation. rev dda496d2","code":""},{"path":"/articles/design-principles.html","id":"design-principles","dir":"Articles","previous_headings":"","what":"Design principles","title":"Design Principles, Comparisons and Limitations","text":"wrote package wanted simple way create tables LaTeX documents. time, wanted able output HTML Markdown use RStudio. , wanted able edit tables intuitively using standard R features. typical use case creating tables regression outputs, also wanted able represent arbitrary data, like table descriptive statistics plain text. idea behind huxtable store data normal data frame, along properties describe display data, cell, column, row table level. Operations data frame work normal, also affect display properties. , data can output appropriate format. moment, formats LaTeX, HTML, Markdown, Word/Excel/Powerpoint, RTF -screen pretty printing. added. Another design choice separate functions per feature. Many existing packages use single function large number options. instance, print.xtable xtable package 34 options, texreg texreg package 41. one function per feature make life easier end user. also lead clearer code: function starts valid huxtable, changes one thing, returns valid huxtable. output formats different, decisions made package support. background HTML. reflected huxtable properties, like per-cell borders padding. package tries keep output reasonably similar LaTeX HTML, inevitably differences limitations. Markdown -screen output, obviously, basic properties supported. package makes attempt output beautiful HTML LaTeX source code. fact, case LaTeX, ’s pretty ugly. approach “takes get job done”.","code":""},{"path":"/articles/design-principles.html","id":"comparing-huxtable-with-other-packages","dir":"Articles","previous_headings":"","what":"Comparing Huxtable With Other Packages","title":"Design Principles, Comparisons and Limitations","text":"first wrote vignette many competing packages create LaTeX HTML tables. still , opinion, field sensible modern choices narrowed four: huxtable; flextable; gt; kableExtra. ’s think : huxtable widest range outputs, including HTML, LaTeX, RTF, markdown Word (via flextable). customizable. model drawn HTML, can tricky outputting LaTeX. aims give fine-grained control formatting, cell level wherever possible. David Gohel’s flextable package started way producing Word Powerpoint tables. can also output markdown tables use rmarkdown documents. Recently gained ability create PDFs using pagedown package. Rather outputting LaTeX, uses paged HTML. view fabulous idea, since LaTeX 1980s leftover needs die. , need LaTeX, won’t help. hand, huxtable uses flextable produce Word output, need Word, might well go source. RStudio’s gt package powerful big name behind . yet produces HTML, PDFs agenda. aims convenience control, included functions many standard formatting options. kableExtra simple set tweaks knitr::kable() function. huge fan internal design, produces nice output helpful website. original table competing packages historical reference, updated.","code":""},{"path":"/articles/huxreg.html","id":"regression-tables-with-huxreg","dir":"Articles","previous_headings":"","what":"Regression tables with huxreg","title":"Regression Tables with huxreg","text":"Huxtable includes function huxreg build table regressions. call huxreg list models. models can class tidy method defined broom package. method return list regression coefficients names term, estimate, std.error p.value. covers standard regression packages. Let’s start running regressions predict diamond’s price. Now, use huxreg display regression output side side. basic output includes estimates, standard errors summary statistics. variable names hard read. can change providing named vector variables coefs argument. , since output huxreg just huxtable, just edit contents directly. course, aren’t limited just changing names. can also make table prettier. Let’s put footnote italic, add caption, highlight cell background significant coefficients. just standard huxtable commands. Linear regressions diamond prices default, standard errors shown coefficient estimates. display column right, use error_pos = \"right\": give column headings column span 2. display standard errors cell estimates, use error_pos = \"\": can change default column headings naming model arguments: display particular row summary statistics, use statistics parameter. character vector. Valid values anything returned models broom::glance: Another value can use \"nobs\", returns number observations regression. statistics vector names, used row headings: default, huxreg displays significance stars. can alter symbols used significance levels stars parameter, set stars = NULL turn significance stars completely. aren’t limited displaying standard errors estimates. prefer, can display t statistics p values, using error_format option. column tidy can used putting curly brackets: also changed footnote, using note. note contains string \"{stars}\" replaced description significance stars used. don’t want footnote, just set note = NULL. Alternatively, can display confidence intervals. Use ci_level set confidence level interval, use {conf.low} {conf.high} error_format: change number formatting, set number_format parameter. works number_format property huxtable - numeric, numbers rounded many decimal places; character, taken format base R sprintf function. huxreg tries smart format summary statistics like nobs integers. Lastly, want bold significant coefficients, set parameter bold_signif maximum significance level:","code":"data(diamonds, package = \"ggplot2\") diamonds <- diamonds[1:100,]  lm1 <- lm(price ~ carat + depth, diamonds) lm2 <- lm(price ~ depth + factor(color, ordered = FALSE), diamonds) lm3 <- lm(log(price) ~ carat + depth, diamonds) huxreg(lm1, lm2, lm3) color_names <- grep(\"factor\", names(coef(lm2)), value = TRUE) names(color_names) <- gsub(\".*)(.)\", \"Color: \\\\1\", color_names)  huxreg(lm1, lm2, lm3, coefs = c(\"Carat\" = \"carat\", \"Depth\" = \"depth\", color_names)) diamond_regs <- huxreg(lm1, lm2, lm3) diamond_regs[seq(8, 18, 2), 1] <- paste(\"Color:\", LETTERS[5:10])  # prints the same as above suppressPackageStartupMessages(library(dplyr))  diamond_regs |>        map_background_color(-1, -1, by_regex(         \"\\\\*\" = \"yellow\"       )) |>        set_italic(final(1), 1) |>        set_caption(\"Linear regressions of diamond prices\") huxreg(lm1, lm3, error_pos = \"right\") huxreg(lm1, lm3, error_pos = \"same\") huxreg(\"Price\" = lm1, \"Log price\" = lm3) gl <- as_hux(broom::glance(lm1))  gl |>        restack_down(cols = 3, on_remainder = \"fill\") |>        set_bold(odds, everywhere) huxreg(lm1, lm3, statistics = c(\"N. obs.\" = \"nobs\",        \"R squared\" = \"r.squared\", \"F statistic\" = \"statistic\",       \"P value\" = \"p.value\")) huxreg(lm1, lm3, stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01)) # a little boastful? # Another useful column: p.value huxreg(         lm1, lm3,          error_format = \"[{statistic}]\",          note         = \"{stars}. T statistics in brackets.\"       ) huxreg(lm1, lm3, ci_level = .99, error_format = \"({conf.low} -- {conf.high})\") huxreg(lm1, lm3, number_format = 2) huxreg(lm1, lm3, bold_signif = 0.05)"},{"path":"/articles/huxreg.html","id":"altering-data","dir":"Articles","previous_headings":"","what":"Altering data","title":"Regression Tables with huxreg","text":"Sometimes, want report different statistics model. example, might want use robust standard errors. One way pass tidy-able test object huxreg. function coeftest “lmtest” package tidy methods defined: possible, can compute statistics add model using tidy_override function: can override statistics returned tidy glance. want completely replace output tidy, use tidy_replace() function. example, ’s print different coefficients multinomial model.","code":"library(lmtest) ## Loading required package: zoo ##  ## Attaching package: 'zoo' ## The following objects are masked from 'package:base': ##  ##     as.Date, as.Date.numeric library(sandwich) lm_robust <- coeftest(lm1, vcov = vcovHC, save = TRUE) huxreg(\"Normal SEs\" = lm1, \"Robust SEs\" = lm_robust) lm_fixed <- tidy_override(lm1, p.value = c(0.5, 0.2, 0.06)) huxreg(\"Normal p values\" = lm1, \"Supplied p values\" = lm_fixed) mnl <- nnet::multinom(gear ~ mpg, mtcars) ## # weights:  9 (4 variable) ## initial  value 35.155593  ## iter  10 value 23.131901 ## final  value 23.129234  ## converged tidied <- broom::tidy(mnl) models <- list() models[[\"4 gears\"]] <- tidy_replace(mnl, tidied[tidied$y.level == 4, ]) models[[\"5 gears\"]] <- tidy_replace(mnl, tidied[tidied$y.level == 5, ]) huxreg(models, statistics = \"AIC\")"},{"path":[]},{"path":"/articles/huxtable.html","id":"about-this-document","dir":"Articles","previous_headings":"Introduction","what":"About this document","title":"Introduction to Huxtable","text":"introductory vignette R package ‘huxtable’, version 5.7.0. current version available web HTML PDF format.","code":""},{"path":"/articles/huxtable.html","id":"huxtable","dir":"Articles","previous_headings":"Introduction","what":"Huxtable","title":"Introduction to Huxtable","text":"Huxtable package creating text tables. powerful, easy use. Huxtable’s features include: Export LaTeX, HTML, Microsoft Word, Microsoft Excel, Microsoft Powerpoint, RTF Markdown Easy integration knitr rmarkdown documents Formatted -screen display Multirow multicolumn cells Fine-grained control cell background, spacing, alignment, size borders Control text font, style, size, colour, alignment, number format rotation Table manipulation using standard R subsetting, dplyr functions like filter select Easy conditional formatting based table contents Quick table themes Automatic creation regression output tables huxreg function cover many features .","code":""},{"path":"/articles/huxtable.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Introduction to Huxtable","text":"can install huxtable within R:","code":"install.packages(\"huxtable\")"},{"path":"/articles/huxtable.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Introduction to Huxtable","text":"huxtable R object representing table text. already know R can represent table data data frame. example, mydata data frame, mydata[1, 2] represents data row 1, column 2. huxtable just data frame extra properties. , myhux huxtable, myhux[1, 2] represents data row 1 column 2, . cell also properties - example, font size text, colour cell border. create huxtable, use function huxtable, hux short. Let’s suppose want print table jams sale. two columns, representing kind jam, price: can convert data frame huxtable as_hux. look huxtable R, print simple representation data. Notice ’ve added column names data. ’re going print , need part actual table. data start row 2 huxtable, column names row 1. print huxtable LaTeX HTML, just call print_latex print_html. knitr documents, like one, can simply evaluate huxtable:","code":"library(huxtable)   jams <- hux(         Type  = c(\"Strawberry\", \"Raspberry\", \"Plum\"),         Price = c(1.90, 2.10, 1.80)       ) data(mtcars) car_ht <- as_hux(mtcars) print_screen(jams)     # on the R command line, you can just type \"jams\" ##                               Type           Price   ##                               Strawberry       1.9   ##                               Raspberry        2.1   ##                               Plum             1.8   ##  ## Column names: Type, Price jams"},{"path":"/articles/huxtable.html","id":"huxtable-properties","dir":"Articles","previous_headings":"Getting started","what":"Huxtable properties","title":"Introduction to Huxtable","text":"default output plain table. Let’s make smarter. ’ll: make table headings bold; draw border first row; tweak table width spacing; change number formatting; add caption. Pots jam sale functions set one properties huxtable. ’s start set_.... functions return modified huxtable. can chain together using magrittr pipe. Really, functions evaluate : . Let’s go line line. jams |> set_all_padding(10) sets four properties every cell huxtable: left_padding, right_padding, top_padding bottom_padding property. called set_left_padding(10) , convenient shortcut. Cell padding amount space side table cell. ’re familiar HTML, ’ll know works. set_outer_padding(jams, 0) sets padding around outside huxtable 0. , shortcut. ’s like setting left_padding cells left side huxtable, top_padding top, . set_number_format(jams, 2) changes numbers within cells displayed. work just numeric data, numbers found cell. Setting number_format property 2 means numbers 2 decimal places. set_bold(jams, row = 1, col = everywhere) sets bold property. time don’t set cells – cells row 1 columns, .e. everywhere. set_bold() default value TRUE, call just short set_bold(jams, row = 1, col = everywhere, TRUE). set_bottom_border(jams, row = 1, col = everywhere) sets bottom_border property. ’s set cells row 1 columns. bottom_border property width border points. , ’ve set default value 0.4. far, properties cell properties. next line sets table property applies whole table: width. last line, set_caption(...), sets another table property: table caption. way, ’ve used tidyverse style set properties, chaining calls together pipe. can also set properties directly. ’s set calls exactly : way setting properties using functions like names(x) <- c(\"Name 1\", \"Name 2\", ...) base R. can write change first name vector. Similarly, huxtable, can write set bold property first row cells. , assignment style little verbose dplyr style, don’t get convenient shortcuts like everywhere. can use whichever prefer. sum , set cell properties huxtable like : like : property name huxtable property. first form sets cell property specific rows columns. second form sets cells. Table-level properties always set like since always apply whole table. well cell properties table properties, also row properties column properties. table shows complete list properties. Huxtable properties","code":"library(dplyr)   jams |>        set_all_padding(4) |>        set_outer_padding(0) |>        set_number_format(2) |>        set_bold(row = 1, col = everywhere) |>        set_bottom_border(row = 1, col = everywhere) |>        set_width(0.4) |>        set_caption(\"Pots of jam for sale\") jams <- set_all_padding(jams, 4) jams <- set_outer_padding(jam, 0) # set all padding: left_padding(jams) <- 4 right_padding(jams) <- 4 top_padding(jams) <- 4 bottom_padding(jams) <- 4  # set outer padding: left_padding(jams)[1:nrow(jams), 1] <- 0 top_padding(jams)[1, 1:ncol(jams)] <- 0 right_padding(jams)[1:nrow(jams), ncol(jams)] <- 0 bottom_padding(jams)[nrow(jams), 1:ncol(jams)] <- 0  number_format(jams) <- 2 bold(jams)[1, 1:ncol(jams)] <- TRUE bottom_border(jams)[1, 1:ncol(jams)] <- 0.4 width(jams) <- 0.4 caption(jams) <- \"Pots of jam for sale\" names(x)[1] <- \"Name\" bold(jams)[1, 1:ncol(jams)] <- TRUE ht <- set_property(ht, row = rows, col = cols, value) ht <- set_property(ht, value) ht <- set_property(ht, value)"},{"path":"/articles/huxtable.html","id":"selecting-rows-and-columns","dir":"Articles","previous_headings":"Getting started","what":"Selecting rows and columns","title":"Introduction to Huxtable","text":"call set_property(ht, row = rows, col = cols, value), can specify rows cols several different ways. (’ll skip argument names now .) can use numbers: use logical indices: use characters column names: methods familiar base R. just can use subsetting data frame. fact, can use methods assignment style: set_ functions, extra methods: can use tidyselect functions like matches() starts_with() select columns: also huxtable-specific selectors. everywhere sets property rows, columns. final(n) sets property last n rows columns.","code":"# Set the italic property on row 1, column 1: jams |> set_italic(1, 1) # Set the italic property on column 1 of every row matching \"berry\": is_berry <- grepl(\"berry\", jams$Type) jams |> set_italic(is_berry, 1) # Set the italic property on row 1 of the column named \"Type\": jams |> set_italic(1, \"Type\") italic(jams)[1, \"Type\"] <- TRUE # the same as: jams <- jams |> set_italic(1, \"Type\") # Set the italic property on row 1 of every column whose name starts with \"T\": jams |>        set_italic(1, starts_with(\"T\")) # Set the italic property on row 1 of all columns: jams |> set_italic(1, everywhere)  # Set the italic property on all rows of column 1: jams |> set_italic(everywhere, 1) jams |> set_italic(final(2), everywhere) # same as: jams |> set_italic(3:4, 1:2)"},{"path":[]},{"path":"/articles/huxtable.html","id":"formatting-cell-text","dir":"Articles","previous_headings":"Editing huxtables","what":"Formatting cell text","title":"Introduction to Huxtable","text":"useful ways change cells displayed. bold property makes whole cell bold, italic property makes cell italic. ’ve seen . text_color property changes color text. Pots jam sale can use valid R color name, HTML hex color like #FF0000. background_color property changes background color. ’s one way apply subtle horizontal stripe table: Pots jam sale uses another huxtable-specific shortcut: evens specifies even-numbered rows columns. (odds specifies odd-numbered rows columns.) want format selected text within cells, can use markdown setting markdown property. set_markdown_contents() sets markdown property cell contents together: Pots jam sale Type jam Price jam 2.10 Sale! 1.50 default, huxtable escape special characters cells. display special characters LaTeX maths, set escape_contents property FALSE: Pots jam sale","code":"jams |>        set_text_color(2:3, 1, \"purple\") jams |>        set_background_color(evens, everywhere, \"grey95\") jams |>        set_markdown_contents(1, 1, \"*Type* of jam\") |>        set_markdown_contents(1, 2, \"*Price* of jam\") |>        set_markdown_contents(3, 2, \"~~2.10~~ **Sale!** 1.50\") new_row <- if (is_latex) c(\"Imaginary jam\", \"$e^{-i\\\\pi}$\") else               c(\"Copyright jam\", \"&copy;\")  jams |>       insert_row(new_row, after = 4) |>       set_escape_contents(5, 2, FALSE)"},{"path":"/articles/huxtable.html","id":"aligning-text-and-numbers","dir":"Articles","previous_headings":"Editing huxtables","what":"Aligning text and numbers","title":"Introduction to Huxtable","text":"can align cells left, right center using align property: Pots jam sale may want align numbers decimal points line . , set align character representing decimal point locale – typically \".\" \",\". always give perfect results. LaTeX output, one approach align cells using siunitx TeX package. can setting options(huxtable.latex_siunitx_align = TRUE).","code":"jams |>       set_align(1, everywhere, \"center\") numbers <- hux(Numbers = c(100, 3.14, 0.0002)) numbers |>       set_align(-1, 1, \".\") |>       theme_basic()"},{"path":"/articles/huxtable.html","id":"borders","dir":"Articles","previous_headings":"Editing huxtables","what":"Borders","title":"Introduction to Huxtable","text":"huxtable cell 4 borders, left, top, right bottom. borders “collapsed”, CSS parlance: row 1’s bottom border row 2’s top border, setting one automatically sets . border thickness, style (“solid”, “double”, “dotted” “dashed”) colour. set properties together, can use brdr() object: Pots jam sale , can set component individually: Pots jam sale set borders around cell, use set_all_borders(). ’s corporate look jams: Pots jam sale shortcuts include: set_tb_borders() set top bottom borders; set_lr_borders() set left right borders; set_outer_borders() set borders around group cells. output formats handle kinds borders equally well. particular, LaTeX currently handles “solid” “double” borders – “dotted” “dashed”.","code":"jams |>        set_right_border(everywhere, 1, brdr(3, \"double\", \"grey\")) jams |>        set_right_border(everywhere, 1, 3) |>        set_right_border_style(everywhere, 1, \"double\") |>        set_right_border_color(everywhere, 1, \"grey\") jams |>        set_background_color(evens, everywhere, \"grey80\") |>        set_background_color(odds, everywhere, \"grey90\") |>        set_all_borders(brdr(0.4, \"solid\", \"white\")) |>        set_outer_padding(4)"},{"path":"/articles/huxtable.html","id":"changing-and-adding-content","dir":"Articles","previous_headings":"Editing huxtables","what":"Changing and adding content","title":"Introduction to Huxtable","text":"can treat huxtable just like data frame. example, ’s change text particular cell: can change whole column like : Notice since “Price” label part huxtable, include data. can add new column way. Pots jam sale Notice new column bold heading, borders number formatting two. add data huxtable, default, copies cell properties nearest neighbour. Similarly, can add new row huxtable rbind, cell properties copied previous row: Pots jam sale Sometimes, like insert rows columns middle table. can rbind, convenient: Pots jam sale Huxtable useful shortcut called insert_column() . Pots jam sale argument says second object inserted. can column name number. ’s also insert_row() function. prefer using dplyr edit contents, many dplyr functions work huxtable. Pots jam sale Notice changing Type column changed whole column, including heading. want work underlying data, ’s often best creating huxtable. example, ’s might create jams table ordered price: ’s easier arrange Price add “Price” heading column. Alternatively, can use as_hux(..., add_colnames = FALSE), add column names later add_colnames() function.","code":"jams[3, 1] <- \"Snozberry\" # Summer sale! jams$Price <- c(\"Price\", 1.50, 1.60, 1.50) options(error=recover) jams$Sugar <- c(\"Sugar content\", \"40%\", \"50%\", \"30%\") jams rbind(jams, c(\"Gooseberry\", 2.1, \"55%\")) best_before <- c(\"Best before\", c(\"Aug 2022\", \"Sept 2022\", \"June 2022\"))  cbind(jams[, 1], best_before, jams[, -1]) jams |>        insert_column(best_before, after = \"Type\") |>        set_number_format(everywhere, 2, 0) # correct the formatting for dates jams |>        mutate(         Type = toupper(Type)       ) |>        select(Type, Price) jams_data <- data.frame(         Type = c(\"Strawberry\", \"Raspberry\", \"Plum\"),         Price = c(1.90, 2.10, 1.80)       )  jams_ordered <- jams_data |>        arrange(Price) |>        as_hux() |>        set_bold(1, everywhere) # et cetera... # Same result as above  jams_data |>        as_hux(add_colnames = FALSE) |>        arrange(Price) |>        add_colnames()"},{"path":"/articles/huxtable.html","id":"changing-the-layout","dir":"Articles","previous_headings":"","what":"Changing the layout","title":"Introduction to Huxtable","text":"larger tables, may need control layout carefully. ’s selected rows iris dataset: ’ve used theme_basic() quickly provide acceptable look. ’ll see themes later. column names rather long. use extra header row shorten . Let’s take piece piece. set_contents() shortcut change contents, use within pipes. ’s equivalent saying iris_hux[1, 2:5] <- c(\"Length\", ...). insert_row() inserts new row top. merge_cells(1, 2:3) merges cells row 1, columns 2 3. now become single cell. know HTML, equivalent setting colspan column 2 2. merge_cells(1, 4:5) row 1, columns 4 5. Lastly, set_align() centres cells first row set_tb_padding() fixes vertical padding, keep cells close row . looks better, rather long. (used 150 rows iris data!) One solution reorganize table layout. data management, cardinal sin data two columns, can make table easier read. wide, ’ll deal second. restack_across() function reorganizes table fit fewer rows (columns). ’s similar restack_down() function fits table rows fewer columns. understand , bit color help: Original table Restacked across Restacked ","code":"iris_hux <- iris |>        group_by(Species) |>        select(Species, Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) |>        slice(1:5) |>        as_hux() |>       theme_basic() |>        set_tb_padding(2)  iris_hux iris_hux <- iris_hux |>    set_contents(1, 2:5, c(\"Length\", \"Width\", \"Length\", \"Width\")) |>    insert_row(\"\", \"Sepal\", \"\", \"Petal\", \"\", after = 0) |>    merge_cells(1, 2:3) |>    merge_cells(1, 4:5) |>    set_align(1, everywhere, \"center\") |>    set_tb_padding(1, everywhere, 0) |>    set_bold(1, everywhere)    iris_hux iris_hux_wide <- iris_hux |>        set_header_rows(1:2, TRUE) |>        restack_across(rows = 7) |>        set_bottom_border(final(1), everywhere)  iris_hux_wide lego_hux <- as_hux(matrix(1:16, 4, 4)) |>        set_background_color(1:2, 1:2, \"red\") |>        set_background_color(1:2, 3:4, \"yellow\") |>        set_background_color(3:4, 1:2, \"darkgreen\") |>        set_background_color(3:4, 3:4, \"blue\") |>        set_text_color(3:4, 1:4, \"white\") |>        set_all_borders(brdr(2, \"solid\", \"white\"))  lego_hux |> set_caption(\"Original table\") lego_hux |>        restack_across(rows = 2) |>        set_caption(\"Restacked across\") lego_hux |>        restack_down(cols = 2) |>        set_caption(\"Restacked down\")"},{"path":"/articles/huxtable.html","id":"table-position-and-column-width","dir":"Articles","previous_headings":"Changing the layout","what":"Table position and column width","title":"Introduction to Huxtable","text":"new iris huxtable now shorter, ’s wide. can control table-level width property. can also set width individual columns column property col_width. might want table left-aligned page, using position property. width col_width can either numbers, units recognized HTML LaTeX. ’s best specify col_width set numbers. treated proportions total table width. small table, may want text wrap around . can specifying \"wrapleft\" \"wrapright\" position. table right uses set_position(\"wrapright\"), set_width(0.35) “compact” theme, minimizes cell padding keep table small. Table wrapping works HTML LaTeX. ’s option text wrapped around sides table. just painful readers.","code":"iris_hux_wide |>        set_width(0.8) |>        set_font_size(8) |>        set_lr_padding(2) |>        set_col_width(rep(c(0.4, 0.2, 0.2, 0.2, 0.2)/3, 3)) |>        set_position(\"left\")"},{"path":"/articles/huxtable.html","id":"headers","dir":"Articles","previous_headings":"Changing the layout","what":"Headers","title":"Introduction to Huxtable","text":"’ll notice restacked iris huxtable repeated header rows appropriately. happen, set header_rows property TRUE rows 1-2. row property. Row properties set like: , header rows displayed differently. certain themes display differently. can also style headers using style_headers() function: set first two rows headers, first column header column. style_headers() applies rows columns. Alternatively, use style_header_rows() style_header_cols() treat header rows columns differently. arguments list properties property values.","code":"set_row_property(ht, row, value) iris_hux <- iris_hux |>        set_header_rows(1:2, TRUE) |>        set_header_cols(1, TRUE) |>        style_headers(bold = TRUE, text_color = \"grey40\")  iris_hux"},{"path":"/articles/huxtable.html","id":"splitting-tables","dir":"Articles","previous_headings":"Changing the layout","what":"Splitting tables","title":"Introduction to Huxtable","text":"haven’t got room restack, alternative approach split original table separate tables. can split_across() split_down(). functions take single huxtable return list huxtables. Like restack functions, take account headers default. Setosa Irises Versicolor Irises Virginica Irises","code":"list_of_iris <- split_across(iris_hux, c(7, 12)) list_of_iris[[1]] |> set_caption(\"Setosa Irises\") list_of_iris[[2]] |> set_caption(\"Versicolor Irises\") list_of_iris[[3]] |> set_caption(\"Virginica Irises\")"},{"path":"/articles/huxtable.html","id":"themes","dir":"Articles","previous_headings":"","what":"Themes","title":"Introduction to Huxtable","text":"Huxtable comes predefined themes formatting. table huxtable properties used theme_bright(). options include theme_basic() randomized theme_mondrian(): Pots jam sale “themes” vignette shows available themes. Themes simply apply set styles huxtable.","code":"theme_mondrian(jams)"},{"path":"/articles/huxtable.html","id":"conditional-formatting","dir":"Articles","previous_headings":"","what":"Conditional formatting","title":"Introduction to Huxtable","text":"want apply different formatting different cells, can use mapping functions. example, ’s another way create striped table: Pots jam sale , apply text color iris data pick lowest highest values column: by_rows by_ranges mapping functions. by_rows applies different properties different rows sequence. by_colorspace takes cell numbers input maps colors. use mapping function, write map_property(ht, row, col, fn), property cell property want map. ht huxtable, fn mapping function starting . row col optional row column specifiers, just set_xxx. ’s one example. set properties cells match string, use by_regex function. Pots jam sale information mapping functions article.","code":"jams |> map_background_color(by_rows(\"grey90\", \"grey95\")) iris_hux |>        map_text_color(-(1:2), -1,          by_colorspace(\"darkred\", \"grey50\", \"darkgreen\", colwise = TRUE)       ) jams |> map_text_color(by_regex(\"berry\" = \"red4\", \"navy\"))"},{"path":[]},{"path":"/articles/huxtable.html","id":"pretty-printing-data-frames","dir":"Articles","previous_headings":"Output to different formats","what":"Pretty-printing data frames","title":"Introduction to Huxtable","text":"load huxtable within knitr document, automatically format data frames : don’t want , can turn setting huxtable.knit_print_df option:","code":"head(iris) options(huxtable.knit_print_df = FALSE)  head(iris) # back to normal ##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1          5.1         3.5          1.4         0.2  setosa ## 2          4.9         3.0          1.4         0.2  setosa ## 3          4.7         3.2          1.3         0.2  setosa ## 4          4.6         3.1          1.5         0.2  setosa ## 5          5.0         3.6          1.4         0.2  setosa ## 6          5.4         3.9          1.7         0.4  setosa"},{"path":"/articles/huxtable.html","id":"using-huxtables-in-knitr-and-rmarkdown","dir":"Articles","previous_headings":"Output to different formats","what":"Using huxtables in knitr and rmarkdown","title":"Introduction to Huxtable","text":"use knitr rmarkdown RStudio, huxtable objects automatically display appropriate format (HTML, LaTeX, RTF). Huxtable needs LaTeX packages LaTeX output. function report_latex_dependencies() print set usepackage{...} statements. use Sweave knitr without rmarkdown, can use function LaTeX preamble, load packages need. want create Word Powerpoint documents, install flextable package CRAN. Huxtables can automatically printed Word documents. can convert flextable objects include Word Powerpoint documents. Similarly, print tables Excel spreadsheet, install openxlsx package See ?as_flextable ?as_Workbook details. can print huxtable screen typing name command line. Borders, column row spans cell alignment shown. crayon package installed, terminal R IDE supports , border, text background colours also displayed. need output another format, file issue request Github.","code":"print_screen(jams) ##                               Pots of jam for sale                               ##                        Type         Price   Sugar content   ##                      ────────────────────────────────────── ##                        Strawberry    1.90          40.00%   ##                        Raspberry     2.10          50.00%   ##                        Plum          1.80          30.00%   ##  ## Column names: Type, Price, Sugar"},{"path":"/articles/huxtable.html","id":"quick-output-commands","dir":"Articles","previous_headings":"Output to different formats","what":"Quick output commands","title":"Introduction to Huxtable","text":"Sometimes quickly want get data document. can use huxtable functions starting quick_: quick_pdf() creates PDF. quick_docx() creates Word document. quick_html() creates HTML web page. quick_xlsx() creates Excel spreadsheet. quick_pptx() creates Powerpoint presentation. quick_rtf() creates RTF document. quick_latex() creates LaTeX file. quick_typst_pdf/png/svg() create PDFs, PNG images SVG images using typst system. called one huxtable objects (objects can turned huxtable, data frames). new document appropriate type created opened. default file current directory, name like e.g. huxtable-output.pdf. file already exists, ’ll asked confirmation.","code":"quick_pdf(iris_hux)  quick_pdf(iris_hux, file = \"iris.pdf\")"},{"path":"/articles/huxtable.html","id":"useful-output-options","dir":"Articles","previous_headings":"Output to different formats","what":"Useful output options","title":"Introduction to Huxtable","text":"See ?\"huxtable-options\" full list huxtable options. particular: options(\"huxtable.knit_print_df\"): TRUE, prints data frames using huxtable. options(\"huxtable.latex_use_fontspec\"): TRUE, uses LaTeX “fontspec” package lets use fonts TeX HTML. need use xetex xelatex engine output. options(\"huxtable.long_minus\"). TRUE, prints long minus signs numbers, e.g. −3.5 rather -3.5. options(\"huxtable.latex_siunitx_align\"). TRUE, uses \\tablenum macro “siunitx” package align numbers decimal point.","code":""},{"path":"/articles/huxtable.html","id":"creating-a-regression-table","dir":"Articles","previous_headings":"","what":"Creating a regression table","title":"Introduction to Huxtable","text":"common reason print table report statistical results. huxreg() function creates table set regressions. information see “huxreg” vignette.","code":"lm1 <- lm(mpg ~ cyl, mtcars) lm2 <- lm(mpg ~ hp, mtcars) lm3 <- lm(mpg ~ cyl + hp, mtcars)  huxreg(lm1, lm2, lm3)"},{"path":"/articles/huxtable.html","id":"getting-more-information","dir":"Articles","previous_headings":"","what":"Getting more information","title":"Introduction to Huxtable","text":"Huxtable complete set help files. installed package, readable online. run trouble, consult ?\"huxtable-FAQ\". help file useful bug report seek help. NEWS file lists changes recent versions. huxtable website links information .","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Hugh-Jones. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hugh-Jones D (2025). huxtable: Easily Create Style Tables LaTeX, HTML Formats. R package version 5.7.0, https://hughjonesd.github.io/huxtable/.","code":"@Manual{,   title = {huxtable: Easily Create and Style Tables for LaTeX, HTML and Other Formats},   author = {David Hugh-Jones},   year = {2025},   note = {R package version 5.7.0},   url = {https://hughjonesd.github.io/huxtable/}, }"},{"path":[]},{"path":"/design.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Huxtable Architecture","text":"Huxtable R package creating displaying richly formatted tables. codebase organized primarily R/ directory, functions grouped responsibility (object creation, property manipulation, output rendering, etc.). Tests live tests/testthat/ additional materials (documentation, vignettes) reside top level.","code":""},{"path":"/design.html","id":"object-creation-and-representation","dir":"","previous_headings":"","what":"Object creation and representation","title":"Huxtable Architecture","text":"user-level constructor huxtable() (aliased hux()) builds data frame converts huxtable as_huxtable() (calls new_huxtable). constructor handles options like automatically adding column names, row names, column auto-formatting【F:R/creation.R†L52-L72】. new_huxtable() sets core object: data frame matrix vector attributes every cell, column, row, table property, using defaults stored huxtable_env$huxtable_default_attrs【F:R/creation-internal.R†L8-L46】 【F:R/property-helpers.R†L9-L85】. attributes hold formatting details (alignment, borders, padding, etc.) populated default values object creation.","code":""},{"path":"/design.html","id":"property-helpers-and-defaults","dir":"","previous_headings":"","what":"Property helpers and defaults","title":"Huxtable Architecture","text":"R/property-helpers.R defines lists supported cell, column, row, table properties set helper functions getting, setting, replacing, mapping attributes【F:R/property-helpers.R†L1-L118】. huxtable_env environment stores default values properties, enabling global default customization consistent initialization.","code":""},{"path":"/design.html","id":"rendering-pipeline","dir":"","previous_headings":"","what":"Rendering pipeline","title":"Huxtable Architecture","text":"Cell contents cleaned formatted rendering clean_contents(), applies number formatting, markdown rendering, escaping, alignment based cell attributes output type 【F:R/clean-contents.R†L1-L37】【F:R/clean-contents.R†L39-L114】.","code":""},{"path":"/design.html","id":"html-output","dir":"","previous_headings":"Rendering pipeline","what":"HTML output","title":"Huxtable Architecture","text":"to_html() assembles HTML table. builds opening <table> tag caption, column widths, cell markup, row wrappers using helper functions build_table_style(), build_colgroup(), build_cell_html(), build_row_html()【F:R/html.R†L35-L46】 【F:R/html.R†L49-L120】.","code":""},{"path":"/design.html","id":"latex-output","dir":"","previous_headings":"Rendering pipeline","what":"LaTeX output","title":"Huxtable Architecture","text":"to_latex() generates LaTeX code first constructing tabular section, wrapping appropriate floating environment caption, size adjustments, commands borders padding【F:R/latex.R†L17-L102】.","code":""},{"path":"/design.html","id":"integration-with-r-markdown","dir":"","previous_headings":"","what":"Integration with R Markdown","title":"Huxtable Architecture","text":"huxtable printed knitr/Rmarkdown context, knit_print.huxtable() invoked. detects desired output format (latex, html, rtf, etc.) via guess_knitr_output_format() dispatches corresponding renderer (to_latex, to_html, to_md, etc.). LaTeX HTML, returned markup passed knitr -, possibly additional dependencies LaTeX packages【F:R/knitr.R†L18-L60】.","code":""},{"path":[]},{"path":"/index.html","id":"simple-table","dir":"","previous_headings":"Quick Examples","what":"Simple table","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"","code":"ht <- hux(         Employee = c(\"John Smith\", \"Jane Doe\", \"David Hugh-Jones\"),         Salary = c(50000, 50000, 40000),         add_colnames = TRUE       )  bold(ht)[1,]           <- TRUE bottom_border(ht)[1,]  <- 0.4 align(ht)[,2]          <- \"right\" right_padding(ht)      <- 10 left_padding(ht)       <- 10 width(ht)              <- 0.35 number_format(ht)      <- 2  ht"},{"path":"/index.html","id":"pipe-interface","dir":"","previous_headings":"Quick Examples","what":"Pipe interface","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"","code":"library(magrittr) ht <- hux(         Employee = c(\"John Smith\", \"Jane Doe\", \"David Hugh-Jones\"),         Salary = c(50000, 50000, 40000)       )  ht |>       set_bold(1, everywhere)             |>       set_bottom_border(1, everywhere)    |>       set_align(everywhere, 2, \"right\")   |>       set_lr_padding(10)                  |>       set_width(0.35)                     |>       set_number_format(2)"},{"path":"/index.html","id":"conditional-formatting","dir":"","previous_headings":"Quick Examples","what":"Conditional formatting","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"","code":"mtcars[1:5, 1:5] |>       as_huxtable(add_rownames = \"Model\") |>       set_bold(1, everywhere, TRUE) |>       set_all_borders(1) |>       map_text_color(everywhere, \"mpg\", by_colorspace(\"navy\", \"red\", \"yellow\")) |>       map_background_color(everywhere, \"hp\", by_quantiles(0.8, c(\"white\", \"yellow\"))) |>       map_italic(everywhere, \"Model\", by_regex(\"Merc.*\" = TRUE))"},{"path":"/index.html","id":"table-of-regressions","dir":"","previous_headings":"Quick Examples","what":"Table of regressions","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"","code":"data(diamonds, package = \"ggplot2\")  lm1 <- lm(log(price) ~ carat, diamonds) lm2 <- lm(log(price) ~ depth, diamonds) lm3 <- lm(log(price) ~ carat + depth, diamonds)  huxreg(lm1, lm2, lm3, statistics = c(\"N\" = \"nobs\", \"R2\" = \"r.squared\"))"},{"path":"/index.html","id":"quick-document-output","dir":"","previous_headings":"Quick Examples","what":"Quick document output","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"","code":"quick_pdf(mtcars) quick_docx(mtcars) quick_html(mtcars) quick_xlsx(mtcars) # Files are produced in the current working directory."},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"R-Universe: CRAN: Development version github:","code":"install.packages(\"huxtable\", repos = c(   \"https://hughjonesd.r-universe.dev\",   \"https://cloud.r-project.org\" )) install.packages(\"huxtable\") library(devtools) install_github(\"hughjonesd/huxtable\")"},{"path":"/index.html","id":"learning-more","dir":"","previous_headings":"","what":"Learning more","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"Check vignette.","code":""},{"path":"/index.html","id":"the-name","dir":"","previous_headings":"","what":"The name","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"Huxtable stand “Happy User Xtable”, prefer, “Hyped Xtable”, Germans maybe “Html Und teX Table”.","code":""},{"path":"/index.html","id":"trivia","dir":"","previous_headings":"","what":"Trivia","title":"Easily Create and Style Tables for LaTeX, HTML and Other Formats","text":"logo randomly generated huxtable, using hux_logo(). web page background uses Piet Mondrian’s Composition .","code":""},{"path":"/reference/add_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Add column or row names — add_colnames","title":"Add column or row names — add_colnames","text":"Add first row column names, first column row names, huxtable.","code":""},{"path":"/reference/add_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add column or row names — add_colnames","text":"","code":"add_colnames(ht, rowname = NULL, ...)  add_rownames(ht, colname = \"rownames\", preserve_rownames = TRUE, ...)"},{"path":"/reference/add_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add column or row names — add_colnames","text":"ht huxtable. rowname Optional row name new row column names. ... Arguments passed methods. colname Column name new column row names. preserve_rownames Preserve existing row names.","code":""},{"path":"/reference/add_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add column or row names — add_colnames","text":"modified object.","code":""},{"path":"/reference/add_colnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add column or row names — add_colnames","text":"Note add_colnames change mode columns character. Also note move rows one: row 1 now row 2, column names now row 1. add_colnames preserves column names. add_rownames preserves asked .","code":""},{"path":"/reference/add_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add column or row names — add_colnames","text":"","code":"ht <- huxtable(   First = rnorm(5),   Second = rnorm(5),   add_rownames = FALSE ) add_rownames(ht) #>                            1          First   Second   #>                            1.1     -1.4        1.15    #>                            2        0.255     -1.82    #>                            3       -2.44      -0.247   #>                            4       -0.00557   -0.244   #>                            5        0.622     -0.283   #>  #> Column names: rownames, First, Second add_colnames(ht) #>                                First      Second    #>                                   First    Second   #>                                -1.4         1.15    #>                                 0.255      -1.82    #>                                -2.44       -0.247   #>                                -0.00557    -0.244   #>                                 0.622      -0.283   #>  #> Column names: First, Second  # Out by 1: add_rownames(add_colnames(ht)) #>                            1       First      Second   #>                            1.2        First   Second   #>                            1.1     -1.4        1.15    #>                            2        0.255     -1.82    #>                            3       -2.44      -0.247   #>                            4       -0.00557   -0.244   #>                            5        0.622     -0.283   #>  #> Column names: rownames, First, Second  # Better: add_colnames(add_rownames(ht)) #>                           rownames   First      Second   #>                           1             First   Second   #>                           1.1        -1.4        1.15    #>                           2           0.255     -1.82    #>                           3          -2.44      -0.247   #>                           4          -0.00557   -0.244   #>                           5           0.622     -0.283   #>  #> Column names: rownames, First, Second  # Alternatively: add_colnames(add_rownames(ht, \"\")) #>                                    First      Second   #>                            1          First   Second   #>                            1.1     -1.4        1.15    #>                            2        0.255     -1.82    #>                            3       -2.44      -0.247   #>                            4       -0.00557   -0.244   #>                            5        0.622     -0.283   #>  #> Column names: , First, Second"},{"path":"/reference/add_footnote.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a row with a footnote — add_footnote","title":"Add a row with a footnote — add_footnote","text":"adds single row bottom. first cell contains footnote; spans table columns optional border .","code":""},{"path":"/reference/add_footnote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a row with a footnote — add_footnote","text":"","code":"add_footnote(ht, text, border = 0.8, number_format = NA, ...)"},{"path":"/reference/add_footnote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a row with a footnote — add_footnote","text":"ht huxtable. text Text footnote. border Width footnote's top border. Set 0 border, NULL leave border unchanged. number_format Number format footnote cell. ... properties, passed set_cell_properties() footnote cell.","code":""},{"path":"/reference/add_footnote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a row with a footnote — add_footnote","text":"modified huxtable","code":""},{"path":"/reference/add_footnote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a row with a footnote — add_footnote","text":"","code":"jams <- add_footnote(   jams,   \"* subject to availability\" ) jams #>                          Type                    Price   #>                          Strawberry               1.90   #>                          Raspberry                2.10   #>                          Plum                     1.80   #>                        ───────────────────────────────── #>                          * subject to availability       #>  #> Column names: Type, Price"},{"path":"/reference/add_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert one huxtable into another — add_rows","title":"Insert one huxtable into another — add_rows","text":"functions combine two huxtables similar objects return result.","code":""},{"path":"/reference/add_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert one huxtable into another — add_rows","text":"","code":"add_rows(x, y, after = nrow(x), copy_cell_props = TRUE)  add_columns(x, y, after = ncol(x), copy_cell_props = TRUE)"},{"path":"/reference/add_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert one huxtable into another — add_rows","text":"x, y Huxtables objects can converted as_hux Row column y inserted. Can 0. Can row column name. default adds y end x. copy_cell_props Logical. Passed rbind.huxtable() cbind.huxtable().","code":""},{"path":"/reference/add_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert one huxtable into another — add_rows","text":"huxtable.","code":""},{"path":"/reference/add_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Insert one huxtable into another — add_rows","text":"Arguments ... can include copy_cell_props.","code":""},{"path":[]},{"path":"/reference/add_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert one huxtable into another — add_rows","text":"","code":"ht <- hux(\"Gooseberry\", 2.15) add_rows(jams, ht) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>                               Gooseberry      2.15   #>  #> Column names: Type, Price add_rows(jams, ht, after = 1) #>                               Type           Price   #>                               Gooseberry      2.15   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price  mx <- matrix(   c(     \"Sugar\", \"50%\", \"60%\", \"40%\",     \"Weight (g)\", 300, 250, 300   ),   4, 2 ) add_columns(jams, mx) #>                     Type         Price    Sugar   Weight (g)   #>                     Strawberry    1.90   50.00%       300.00   #>                     Raspberry     2.10   60.00%       250.00   #>                     Plum          1.80   40.00%       300.00   #>  #> Column names: Type, Price, , .1"},{"path":"/reference/align.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the horizontal alignment of cell content — align","title":"Set the horizontal alignment of cell content — align","text":"Values may \"left\", \"center\", \"right\", NA single character. value single character (e.g. decimal point), cell aligned character.","code":""},{"path":"/reference/align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the horizontal alignment of cell content — align","text":"","code":"align(ht)  align(ht) <- value  set_align(ht, row, col, value)  map_align(ht, row, col, fn)"},{"path":"/reference/align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the horizontal alignment of cell content — align","text":"ht huxtable. value character vector matrix. Set NA reset default, \"left\". row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/align.html","id":"aligning-on-a-decimal-point","dir":"Reference","previous_headings":"","what":"Aligning on a decimal point","title":"Set the horizontal alignment of cell content — align","text":"align cells decimal point, set align \".\" single character (e.g. \",\" European languages). default, huxtable aligns cells padding spaces. mechanics improved LaTeX version 5.3.0, still perfect. Using fixed-width font may help. options(\"huxtable.latex_siunitx_align\") set TRUE, LaTeX output, numbers cells surrounded \\\\tablenum{}. See siunitx documentation details. Note may side-effects, example 1e3 becomes 1 x 10^3. use non-default decimal points, set align(ht) number_format(). See example.","code":""},{"path":"/reference/align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the horizontal alignment of cell content — align","text":"","code":"numbers <- c(1, 1.5, 1.03, 10, 10.01) number_hux <- as_hux(matrix(numbers, 5, 5)) number_format(number_hux) <- \"%.4g\" number_format(number_hux)[, 5] <- fmt_pretty(   decimal.mark = \",\",   big.mark = \"\" )  number_hux <- map_align(   number_hux,   by_cols(\"left\", \"center\", \"right\", \".\", \",\") )  alignments <- c(   \"left\",   \"centre\",   \"right\",   \"decimal (.)\",   \"decimal (,)\" ) number_hux <- rbind(   alignments,   number_hux )  align(number_hux) #>   V1     V2       V3      V4     V5     #>   \"left\" \"left\"   \"left\"  \"left\" \"left\" #> 1 \"left\" \"center\" \"right\" \".\"    \",\"    #> 2 \"left\" \"center\" \"right\" \".\"    \",\"    #> 3 \"left\" \"center\" \"right\" \".\"    \",\"    #> 4 \"left\" \"center\" \"right\" \".\"    \",\"    #> 5 \"left\" \"center\" \"right\" \".\"    \",\"    number_hux #>                left    centre   right   decimal (.)   decimal (,)   #>                1         1          1          1             1      #>                1.5      1.5       1.5          1.5           1,5    #>                1.03     1.03     1.03          1.03          1,03   #>                10        10        10         10            10      #>                10.01   10.01    10.01         10.01         10,01   #>  #> Column names: V1, V2, V3, V4, V5"},{"path":"/reference/as_Workbook.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a huxtable for Excel — as_Workbook","title":"Convert a huxtable for Excel — as_Workbook","text":"openxlsx package installed, Huxtables can converted openxlsx::openxlsx() Worbook objects, use Excel documents.","code":""},{"path":"/reference/as_Workbook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a huxtable for Excel — as_Workbook","text":"","code":"as_Workbook(ht, ...)  # S3 method for class 'huxtable' as_Workbook(   ht,   Workbook = NULL,   sheet = \"Sheet 1\",   write_caption = TRUE,   start_row = 1,   start_col = 1,   ... )"},{"path":"/reference/as_Workbook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a huxtable for Excel — as_Workbook","text":"ht huxtable. ... used. Workbook existing Workbook object. default, new workbook created. sheet Name worksheet huxtable created. worksheet created exist already. write_caption TRUE, print caption row table. start_row, start_col Number. Write data starting given row column.","code":""},{"path":"/reference/as_Workbook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a huxtable for Excel — as_Workbook","text":"object class Workbook.","code":""},{"path":"/reference/as_Workbook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a huxtable for Excel — as_Workbook","text":"Use openxlsx::saveWorkbook() save resulting object Excel file. Properties supported following exceptions: Non-numeric column widths row heights, table width height. Decimal padding. Cell padding. Table position. Caption width. Huxtable tries guess appropriate widths height rows columns; numeric width() height() treated scaling factors. Contents stored numbers whole column \"numeric\", .e. can converted .numeric()). Otherwise, stored text.","code":""},{"path":"/reference/as_Workbook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a huxtable for Excel — as_Workbook","text":"","code":"wb <- as_Workbook(jams)  if (FALSE) { # \\dontrun{ openxlsx::saveWorkbook(   wb,   \"my-excel-file.xlsx\" ) } # }  # multiple sheets in a single workbook: wb <- openxlsx::createWorkbook() wb <- as_Workbook(jams,   Workbook = wb, sheet = \"sheet1\" ) wb <- as_Workbook(   hux(\"Another\", \"huxtable\"),   Workbook = wb,   sheet = \"sheet2\" )"},{"path":"/reference/as_flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a huxtable for Word/Powerpoint — as_flextable","title":"Convert a huxtable for Word/Powerpoint — as_flextable","text":"Huxtables can converted flextable::flextable() objects, use Word Powerpoint documents.","code":""},{"path":"/reference/as_flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a huxtable for Word/Powerpoint — as_flextable","text":"","code":"as_flextable(x, ...)  # S3 method for class 'huxtable' as_flextable(x, colnames_to_header = FALSE, ...)"},{"path":"/reference/as_flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a huxtable for Word/Powerpoint — as_flextable","text":"x huxtable. ... used. colnames_to_header Use huxtable column names header. FALSE, flextable contain body header.","code":""},{"path":"/reference/as_flextable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a huxtable for Word/Powerpoint — as_flextable","text":"object class flextable.","code":""},{"path":"/reference/as_flextable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a huxtable for Word/Powerpoint — as_flextable","text":"recent versions \"flextable\" Pandoc, huxtables can automatically outputted rmarkdown word_document /powerpoint_presentation documents. (Powerpoint presentations require pandoc version >= 2.4.0.) Properties supported, following exceptions: Rotation 0, 90 270 supported. Non-numeric widths heights supported. Table heights treated proportion 9 inches; table widths treated proportion 6 inches. e.g. height(ht) <- 0.5 give height 4.5 inches. Table wrap table position supported. Border style \"double\" supported becomes \"solid\". Captions supported recent versions flextable, caption_pos() caption_width().","code":""},{"path":"/reference/as_flextable.html","id":"challenge","dir":"Reference","previous_headings":"","what":"Challenge","title":"Convert a huxtable for Word/Powerpoint — as_flextable","text":"Try say as_flextable.huxtable ten times without pausing.","code":""},{"path":"/reference/as_flextable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a huxtable for Word/Powerpoint — as_flextable","text":"","code":"ht <- hux(a = 1:3, b = 1:3) ft <- as_flextable(ht) if (FALSE) { # \\dontrun{ my_doc <- officer::read_docx() my_doc <- flextable::body_add_flextable(   my_doc, ft ) print(my_doc,   target =     \"path/to/my_doc.docx\" ) } # }"},{"path":"/reference/as_huxtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to huxtables — as_huxtable","title":"Convert objects to huxtables — as_huxtable","text":"as_huxtable as_hux converts object huxtable. Conversion methods exist data frames tibbles, tables, ftables, matrices () vectors.","code":""},{"path":"/reference/as_huxtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to huxtables — as_huxtable","text":"","code":"as_huxtable(x, ...)  as_hux(x, ...)  # Default S3 method as_huxtable(   x,   add_colnames = getOption(\"huxtable.add_colnames\", TRUE),   add_rownames = FALSE,   autoformat = getOption(\"huxtable.autoformat\", TRUE),   ... )  # S3 method for class 'grouped_df' as_huxtable(x, ..., groups_to_headers = FALSE)  is_huxtable(x)  is_hux(x)"},{"path":"/reference/as_huxtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to huxtables — as_huxtable","text":"x Object convert. ... Arguments passed huxtable(). add_colnames TRUE, add first row column names huxtable. add_rownames TRUE character string, add first column row names huxtable. string gives name new column (\"rownames\" TRUE). autoformat TRUE, automatically format columns type. See . groups_to_headers Logical. Convert groups header rows?","code":""},{"path":"/reference/as_huxtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert objects to huxtables — as_huxtable","text":"object class \"huxtable\".","code":""},{"path":"/reference/as_huxtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert objects to huxtables — as_huxtable","text":"is_hux[table] tests object huxtable. table objects, add_colnames add_rownames TRUE default. matrix objects, FALSE. classes use options(\"huxtable.add_colnames\"), TRUE default; add_rownames FALSE. dplyr::grouped_df() objects, groups converted header rows groups_to_headers TRUE.","code":""},{"path":"/reference/as_huxtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert objects to huxtables — as_huxtable","text":"","code":"dfr <- data.frame(   a = 1:5,   b = letters[1:5],   stringsAsFactors = FALSE ) as_huxtable(dfr) #>                                      a   b         #>                                      1   a         #>                                      2   b         #>                                      3   c         #>                                      4   d         #>                                      5   e         #>  #> Column names: a, b mx <- matrix(letters[1:12], 4, 3) as_huxtable(mx, add_colnames = FALSE) #>                              a       e       i       #>                              b       f       j       #>                              c       g       k       #>                              d       h       l       #>  #> Column names: V1, V2, V3 library(stats) tbl <- table(   Wool    = warpbreaks$wool,   Tension = warpbreaks$tension ) as_huxtable(tbl) # adds row and column names by default #>                                      L      M   H      #>                               A      9      9   9      #>                               B      9      9   9      #>  #> Column names: rownames, L, M, H  # adding rownames: as_hux(mtcars[1:3, ],   add_colnames = TRUE,   add_rownames = \"Car\" ) #>                      Car    mpg   cyl   disp    hp   drat     wt   #>                    Mazda   21       6    160   110   3.9    2.62   #>                      RX4                                           #>                    Mazda   21       6    160   110   3.9    2.88   #>                  RX4 Wag                                           #>                   Datsun   22.8     4    108    93   3.85   2.32   #>                      710                                           #>  #> Column names: Car, mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> 7/12 columns shown.  if (requireNamespace(\"dplyr\")) {   iris_grp <- dplyr::group_by(iris[c(1:4, 51:54, 101:104), ], Species)   as_hux(iris_grp, groups_to_headers = TRUE) } #>             Sepal.Length   Sepal.Width   Petal.Length   Petal.Width   #>             Species: setosa                                           #>                      5.1           3.5            1.4           0.2   #>                      4.9           3              1.4           0.2   #>                      4.7           3.2            1.3           0.2   #>                      4.6           3.1            1.5           0.2   #>             Species: versicolor                                       #>                      7             3.2            4.7           1.4   #>                      6.4           3.2            4.5           1.5   #>                      6.9           3.1            4.9           1.5   #>                      5.5           2.3            4             1.3   #>             Species: virginica                                        #>                      6.3           3.3            6             2.5   #>                      5.8           2.7            5.1           1.9   #>                      7.1           3              5.9           2.1   #>                      6.3           2.9            5.6           1.8   #>  #> Column names: Sepal.Length, Sepal.Width, Petal.Length, Petal.Width"},{"path":"/reference/background_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cell background color — background_color","title":"Set cell background color — background_color","text":"Colors can format understood R: color name like \"darkred\" HTML string like \"#FF0000\" result function like rgb(1, 0, 0) grey(0.5)","code":""},{"path":"/reference/background_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cell background color — background_color","text":"","code":"background_color(ht)  background_color(ht) <- value  set_background_color(ht, row, col, value)  map_background_color(ht, row, col, fn)"},{"path":"/reference/background_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cell background color — background_color","text":"ht huxtable. value character vector matrix. Set NA reset default, NA_character_. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/background_color.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set cell background color — background_color","text":"Transparent colors guaranteed work present.","code":""},{"path":[]},{"path":"/reference/background_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set cell background color — background_color","text":"","code":"background_color(jams) <- grey(0.7) background_color(jams) #>     Type      Price     #> 1   \"#B3B3B3\" \"#B3B3B3\" #> 1.1 \"#B3B3B3\" \"#B3B3B3\" #> 2   \"#B3B3B3\" \"#B3B3B3\" #> 3   \"#B3B3B3\" \"#B3B3B3\"  set_background_color(jams, \"yellow\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price set_background_color(jams, 2:3, 1, \"yellow\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price map_background_color(jams, by_rows(\"yellow\", grey(0.7))) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/bold.html","id":null,"dir":"Reference","previous_headings":"","what":"Make cell text bold or italic — bold","title":"Make cell text bold or italic — bold","text":"Make cell text bold italic","code":""},{"path":"/reference/bold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make cell text bold or italic — bold","text":"","code":"bold(ht)  bold(ht) <- value  set_bold(ht, row, col, value = TRUE)  map_bold(ht, row, col, fn)  italic(ht)  italic(ht) <- value  set_italic(ht, row, col, value = TRUE)  map_italic(ht, row, col, fn)"},{"path":"/reference/bold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make cell text bold or italic — bold","text":"ht huxtable. value logical vector matrix. Set NA reset default, FALSE. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":[]},{"path":"/reference/bold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make cell text bold or italic — bold","text":"","code":"bold(jams) <- TRUE bold(jams) #>     Type Price #> 1   TRUE  TRUE #> 1.1 TRUE  TRUE #> 2   TRUE  TRUE #> 3   TRUE  TRUE  set_bold(jams, FALSE) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price set_bold(   jams,   2:3, 1, FALSE ) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price map_bold(   jams,   by_rows(FALSE, TRUE) ) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/border-colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Set border colors — left_border_color","title":"Set border colors — left_border_color","text":"functions set border colors.","code":""},{"path":"/reference/border-colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set border colors — left_border_color","text":"","code":"left_border_color(ht)  right_border_color(ht)  top_border_color(ht)  bottom_border_color(ht)  left_border_color(ht) <- value  right_border_color(ht) <- value  top_border_color(ht) <- value  bottom_border_color(ht) <- value  set_left_border_color(ht, row, col, value)  set_right_border_color(ht, row, col, value)  set_top_border_color(ht, row, col, value)  set_bottom_border_color(ht, row, col, value)  map_left_border_color(ht, row, col, fn)  map_right_border_color(ht, row, col, fn)  map_top_border_color(ht, row, col, fn)  map_bottom_border_color(ht, row, col, fn)"},{"path":"/reference/border-colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set border colors — left_border_color","text":"ht huxtable. value valid R color, e.g. \"red\", \"#FF0000\". Set NA reset default, NA_character_. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/border-colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set border colors — left_border_color","text":"Borders always \"collapsed\": right_border_color(ht)[, 1] left_border_color(ht)[, 2], setting one sets .","code":""},{"path":"/reference/border-colors.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Set border colors — left_border_color","text":"Transparent borders alpha channel set guaranteed work.","code":""},{"path":[]},{"path":"/reference/border-colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set border colors — left_border_color","text":"","code":"jams <- set_all_borders(jams) bottom_border_color(jams)[1, ] <- \"red\" jams #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price  set_bottom_border_color(jams, \"blue\") #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price"},{"path":"/reference/border-styles.html","id":null,"dir":"Reference","previous_headings":"","what":"Set border styles — left_border_style","title":"Set border styles — left_border_style","text":"functions set border styles.","code":""},{"path":"/reference/border-styles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set border styles — left_border_style","text":"","code":"left_border_style(ht)  right_border_style(ht)  top_border_style(ht)  bottom_border_style(ht)  left_border_style(ht) <- value  right_border_style(ht) <- value  top_border_style(ht) <- value  bottom_border_style(ht) <- value  set_left_border_style(ht, row, col, value)  set_right_border_style(ht, row, col, value)  set_top_border_style(ht, row, col, value)  set_bottom_border_style(ht, row, col, value)  map_left_border_style(ht, row, col, fn)  map_right_border_style(ht, row, col, fn)  map_top_border_style(ht, row, col, fn)  map_bottom_border_style(ht, row, col, fn)"},{"path":"/reference/border-styles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set border styles — left_border_style","text":"ht huxtable. value One \"solid\", \"double\", \"dashed\" \"dotted\". Set NA reset default, \"solid\". row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/border-styles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set border styles — left_border_style","text":"Borders always \"collapsed\": right_border_style(ht)[, 1] left_border_style(ht)[, 2], setting one sets .","code":""},{"path":"/reference/border-styles.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Set border styles — left_border_style","text":"HTML, need set width least 3 get double border. \"solid\" \"double\" styles currently implemented LaTeX.","code":""},{"path":[]},{"path":"/reference/border-styles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set border styles — left_border_style","text":"","code":"jams <- set_all_borders(jams) bottom_border_style(jams)[1, ] <- \"dotted\" jams #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├┈┈┈┈┈┈┈┈┈┈┈┈┼┈┈┈┈┈┈┈┈┈┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price  set_bottom_border_style(jams, \"double\") #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├════════════┼═════════┤ #>                             │ Strawberry │    1.90 │ #>                             ├════════════┼═════════┤ #>                             │ Raspberry  │    2.10 │ #>                             ├════════════┼═════════┤ #>                             │ Plum       │    1.80 │ #>                             └════════════┴═════════┘ #>  #> Column names: Type, Price"},{"path":"/reference/borders.html","id":null,"dir":"Reference","previous_headings":"","what":"Set borders — left_border","title":"Set borders — left_border","text":"functions set borders cells.","code":""},{"path":"/reference/borders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set borders — left_border","text":"","code":"left_border(ht)  right_border(ht)  top_border(ht)  bottom_border(ht)  left_border(ht) <- value  right_border(ht) <- value  top_border(ht) <- value  bottom_border(ht) <- value  set_left_border(ht, row, col, value = 0.4)  set_right_border(ht, row, col, value = 0.4)  set_top_border(ht, row, col, value = 0.4)  set_bottom_border(ht, row, col, value = 0.4)  map_left_border(ht, row, col, fn)  map_right_border(ht, row, col, fn)  map_top_border(ht, row, col, fn)  map_bottom_border(ht, row, col, fn)"},{"path":"/reference/borders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set borders — left_border","text":"ht huxtable. value numeric thickness brdr() object. Set NA reset default, 0. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/borders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set borders — left_border","text":"Borders always \"collapsed\": right_border(ht)[, 1] left_border(ht)[, 2], setting one sets . Setting left_border(ht) <- number sets border thickness. can set multiple properties using brdr(). Currently LaTeX, non-zero border widths given line must .","code":""},{"path":"/reference/borders.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Set borders — left_border","text":"HTML, need set width least 3 get double border. \"solid\" \"double\" styles currently implemented LaTeX, non-zero horizontal border widths given line must .","code":""},{"path":[]},{"path":"/reference/borders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set borders — left_border","text":"","code":"bottom_border(jams)[1, ] <- 0.4 jams #>                               Type           Price   #>                             ──────────────────────── #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price  bottom_border(jams)[1, ] <- brdr(0.4, \"solid\", \"blue\") jams #>                               Type           Price   #>                             ──────────────────────── #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price  set_bottom_border(jams, brdr(0.4, \"solid\", \"green\")) #>                               Type           Price   #>                             ──────────────────────── #>                               Strawberry      1.90   #>                             ──────────────────────── #>                               Raspberry       2.10   #>                             ──────────────────────── #>                               Plum            1.80   #>                             ──────────────────────── #>  #> Column names: Type, Price"},{"path":"/reference/brdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a border object — brdr","title":"Create a border object — brdr","text":"brdr() objects can passed set_top_border() friends. set multiple border properties simultaneously.","code":""},{"path":"/reference/brdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a border object — brdr","text":"","code":"brdr(thickness = 0.4, style = \"solid\", color = NA_character_)"},{"path":"/reference/brdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a border object — brdr","text":"thickness Thickness border points. style \"solid\" (default), \"double\", \"dashed\" \"dotted\". color String representing valid color (either color name hexadecimalstring like \"#00FF00\").","code":""},{"path":"/reference/brdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a border object — brdr","text":"object class \"brdr\".","code":""},{"path":"/reference/brdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a border object — brdr","text":"","code":"set_bottom_border(jams, brdr(1, \"solid\", \"red\")) #>                               Type           Price   #>                             ──────────────────────── #>                               Strawberry      1.90   #>                             ──────────────────────── #>                               Raspberry       2.10   #>                             ──────────────────────── #>                               Plum            1.80   #>                             ──────────────────────── #>  #> Column names: Type, Price"},{"path":"/reference/brdr_thickness.html","id":null,"dir":"Reference","previous_headings":"","what":"Get thickness of a brdr() object — brdr_thickness","title":"Get thickness of a brdr() object — brdr_thickness","text":"Get thickness brdr() object","code":""},{"path":"/reference/brdr_thickness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get thickness of a brdr() object — brdr_thickness","text":"","code":"brdr_thickness(x)"},{"path":"/reference/brdr_thickness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get thickness of a brdr() object — brdr_thickness","text":"x brdr() object.","code":""},{"path":"/reference/brdr_thickness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get thickness of a brdr() object — brdr_thickness","text":"number numeric matrix.","code":""},{"path":"/reference/brdr_thickness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get thickness of a brdr() object — brdr_thickness","text":"","code":"brdr_thickness(left_border(jams)) #>     Type Price #> 1      0     0 #> 1.1    0     0 #> 2      0     0 #> 3      0     0 brdr_thickness(brdr(1, \"solid\", \"red\")) #> [1] 1"},{"path":"/reference/by_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Map cell contents to properties using case_when — by_cases","title":"Map cell contents to properties using case_when — by_cases","text":"function uses dplyr::case_when() set cell properties.","code":""},{"path":"/reference/by_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map cell contents to properties using case_when — by_cases","text":"","code":"by_cases(..., ignore_na = TRUE)"},{"path":"/reference/by_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map cell contents to properties using case_when — by_cases","text":"... list two-sided formulas interpreted case_when. ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default.","code":""},{"path":"/reference/by_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map cell contents to properties using case_when — by_cases","text":"function use map_*** functions.","code":""},{"path":"/reference/by_cases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map cell contents to properties using case_when — by_cases","text":"Within formulas, variable . refer content ht[rows, cols], conversion vector. case_when returns NA formula LHS matched. avoid , set default last formula: TRUE ~ default. case_when deal brdr() objects, use by_cases().","code":""},{"path":[]},{"path":"/reference/by_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map cell contents to properties using case_when — by_cases","text":"","code":"if (!requireNamespace(\"dplyr\")) {   stop(\"Please install the 'dplyr' package to run this example\") }  ht <- hux(runif(5), letters[1:5])  map_background_color(ht, by_cases(   . == \"a\" ~ \"red\",   . %in% letters ~ \"green\",   . < 0.5 ~ \"pink\" )) #>                                  0.29    a         #>                                  0.678   b         #>                                  0.735   c         #>                                  0.196   d         #>                                  0.981   e"},{"path":"/reference/by_colorspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Map numeric cell contents smoothly to colors — by_colorspace","title":"Map numeric cell contents smoothly to colors — by_colorspace","text":"by_colorspace() can used set background, border text colors, visually differentiating high low values.","code":""},{"path":"/reference/by_colorspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map numeric cell contents smoothly to colors — by_colorspace","text":"","code":"by_colorspace(   ...,   range = NULL,   na_color = NA,   ignore_na = TRUE,   colwise = FALSE )"},{"path":"/reference/by_colorspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map numeric cell contents smoothly to colors — by_colorspace","text":"... Colors range Numeric endpoints. NULL, determined data. na_color Color return NA values. Can NA . ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default. colwise Logical. Calculate breaks separately within column?","code":""},{"path":"/reference/by_colorspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map numeric cell contents smoothly to colors — by_colorspace","text":"function use map_*** functions.","code":""},{"path":"/reference/by_colorspace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map numeric cell contents smoothly to colors — by_colorspace","text":"by_colorspace requires \"scales\" package.","code":""},{"path":[]},{"path":"/reference/by_colorspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map numeric cell contents smoothly to colors — by_colorspace","text":"","code":"if (!requireNamespace(\"scales\")) {   stop(\"Please install the \\\"scales\\\" package to run this example\") } #> Loading required namespace: scales ht <- as_hux(matrix(rnorm(25), 5, 5)) map_background_color(   ht,   by_colorspace(\"red\", \"yellow\", \"blue\") ) #>                  0.648    -0.171      0.724     0.77    -0.872    #>                  0.0758    1.63       2.35      0.563    0.107    #>                  0.492    -0.783     -0.281    -0.374   -0.587    #>                 -0.754    -0.00289   -0.481    -0.601   -0.328    #>                  0.349     0.413      0.0792   -0.424   -0.0854   #>  #> Column names: V1, V2, V3, V4, V5 map_background_color(   ht,   by_colorspace(\"red\", \"yellow\", \"blue\",     colwise = TRUE   ) ) #>                  0.648    -0.171      0.724     0.77    -0.872    #>                  0.0758    1.63       2.35      0.563    0.107    #>                  0.492    -0.783     -0.281    -0.374   -0.587    #>                 -0.754    -0.00289   -0.481    -0.601   -0.328    #>                  0.349     0.413      0.0792   -0.424   -0.0854   #>  #> Column names: V1, V2, V3, V4, V5"},{"path":"/reference/by_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Map cell contents to cell properties using a function or scale — by_function","title":"Map cell contents to cell properties using a function or scale — by_function","text":"creates simple wrapper around function use map_xxx. Useful functions include scales palettes scales package.","code":""},{"path":"/reference/by_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map cell contents to cell properties using a function or scale — by_function","text":"","code":"by_function(inner_fn, ignore_na = TRUE)"},{"path":"/reference/by_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map cell contents to cell properties using a function or scale — by_function","text":"inner_fn one-argument function maps cell values property values. ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default.","code":""},{"path":"/reference/by_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map cell contents to cell properties using a function or scale — by_function","text":"function use map_*** functions.","code":""},{"path":"/reference/by_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map cell contents to cell properties using a function or scale — by_function","text":"argument inner_fn .matrix(ht[row, col]). aware matrix conversion affects mode cell data.","code":""},{"path":[]},{"path":"/reference/by_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map cell contents to cell properties using a function or scale — by_function","text":"","code":"ht <- as_hux(matrix(runif(20), 5, 4))  map_background_color(   ht,   by_function(grey) ) #>                         0.0201   0.528   0.92     0.997   #>                         0.377    0.601   0.401    0.149   #>                         0.56     0.261   0.213    0.519   #>                         0.857    0.29    0.672    0.846   #>                         0.385    0.48    0.0586   0.718   #>  #> Column names: V1, V2, V3, V4  if (requireNamespace(\"scales\")) {   map_text_color(ht, by_function(     scales::seq_gradient_pal()   )) } #>                         0.0201   0.528   0.92     0.997   #>                         0.377    0.601   0.401    0.149   #>                         0.56     0.261   0.213    0.519   #>                         0.857    0.29    0.672    0.846   #>                         0.385    0.48    0.0586   0.718   #>  #> Column names: V1, V2, V3, V4"},{"path":"/reference/by_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Map numeric quantiles to cell properties — by_quantiles","title":"Map numeric quantiles to cell properties — by_quantiles","text":"functions split cell values quantiles. Non-numeric cells ignored.","code":""},{"path":"/reference/by_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map numeric quantiles to cell properties — by_quantiles","text":"","code":"by_quantiles(   quantiles,   values,   right = FALSE,   extend = TRUE,   ignore_na = TRUE,   colwise = FALSE )  by_equal_groups(n, values, ignore_na = TRUE, colwise = FALSE)"},{"path":"/reference/by_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map numeric quantiles to cell properties — by_quantiles","text":"quantiles Vector quantiles. values Vector values. length(values) one greater length(quantiles), one less extend = FALSE. right TRUE, intervals closed right, .e. values exactly equal break, go lower group. Otherwise, intervals closed left, equal values go higher group. FALSE default. extend Extend breaks c(-Inf, breaks, Inf), .e. include numbers outermost breaks. TRUE default. ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default. colwise Logical. Calculate breaks separately within column? n Number equal-sized groups. length(values) equal n.","code":""},{"path":"/reference/by_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map numeric quantiles to cell properties — by_quantiles","text":"function use map_*** functions.","code":""},{"path":"/reference/by_quantiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map numeric quantiles to cell properties — by_quantiles","text":"by_equal_groups(n, values) splits data n equal-sized groups (.e. shortcut by_quantiles(seq(1/n, 1 - 1/n, 1/n), values)).","code":""},{"path":[]},{"path":"/reference/by_quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map numeric quantiles to cell properties — by_quantiles","text":"","code":"ht <- hux(rnorm(5), rnorm(5))  map_background_color(   ht,   by_quantiles(     c(0.2, 0.8),     c(\"red\", \"yellow\", \"green\")   ) ) #>                                -0.702      0.437   #>                                 0.973      0.413   #>                                -0.0768     0.976   #>                                 0.893      1.15    #>                                -0.778      1.22     map_background_color(   ht,   by_quantiles(     c(0.2, 0.8),     c(\"red\", \"yellow\", \"green\"),     colwise = TRUE   ) ) #>                                -0.702      0.437   #>                                 0.973      0.413   #>                                -0.0768     0.976   #>                                 0.893      1.15    #>                                -0.778      1.22     map_background_color(   ht,   by_equal_groups(     3,     c(\"red\", \"yellow\", \"green\")   ) ) #>                                -0.702      0.437   #>                                 0.973      0.413   #>                                -0.0768     0.976   #>                                 0.893      1.15    #>                                -0.778      1.22 "},{"path":"/reference/by_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Map numeric ranges to cell properties — by_ranges","title":"Map numeric ranges to cell properties — by_ranges","text":"by_ranges() sets property values cells falling within different numeric ranges.","code":""},{"path":"/reference/by_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map numeric ranges to cell properties — by_ranges","text":"","code":"by_ranges(breaks, values, right = FALSE, extend = TRUE, ignore_na = TRUE)"},{"path":"/reference/by_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map numeric ranges to cell properties — by_ranges","text":"breaks vector numbers increasing order. values vector property values. length(values) one greater length(breaks) extend = TRUE, one less extend = FALSE. right TRUE, intervals closed right, .e. values exactly equal break, go lower group. Otherwise, intervals closed left, equal values go higher group. FALSE default. extend Extend breaks c(-Inf, breaks, Inf), .e. include numbers outermost breaks. TRUE default. ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default.","code":""},{"path":"/reference/by_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map numeric ranges to cell properties — by_ranges","text":"function use map_*** functions.","code":""},{"path":"/reference/by_ranges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map numeric ranges to cell properties — by_ranges","text":"Non-numeric cells return NA. effects depend ignore_na.","code":""},{"path":[]},{"path":"/reference/by_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map numeric ranges to cell properties — by_ranges","text":"","code":"ht <- huxtable(c(1, 3, 5)) map_background_color(   ht,   by_ranges(     c(2, 4),     c(\"red\", \"yellow\", \"blue\")   ) ) #>                                               1   #>                                               3   #>                                               5    map_background_color(   ht,   by_ranges(     c(2, 4),     \"pink\",     extend = FALSE   ) ) #>                                               1   #>                                               3   #>                                               5    map_background_color(   ht,   by_ranges(     c(1, 5),     c(\"red\", \"yellow\", \"green\"),     right = TRUE   ) ) #>                                               1   #>                                               3   #>                                               5   map_background_color(   ht,   by_ranges(     c(1, 5),     c(\"red\", \"yellow\", \"green\"),     right = FALSE   ) ) #>                                               1   #>                                               3   #>                                               5"},{"path":"/reference/by_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Map cells matching a string or regex to cell properties — by_regex","title":"Map cells matching a string or regex to cell properties — by_regex","text":"by_regex() sets properties cells match regular expression.","code":""},{"path":"/reference/by_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map cells matching a string or regex to cell properties — by_regex","text":"","code":"by_regex(..., .grepl_args = list(), ignore_na = TRUE)"},{"path":"/reference/by_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map cells matching a string or regex to cell properties — by_regex","text":"... list name-value pairs. names regular expressions. single unnamed argument, default value unmatched cells. one unnamed argument error. .grepl_args list arguments pass grepl(). Useful options include fixed, perl ignore.case. ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default.","code":""},{"path":"/reference/by_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map cells matching a string or regex to cell properties — by_regex","text":"function use map_*** functions.","code":""},{"path":[]},{"path":"/reference/by_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map cells matching a string or regex to cell properties — by_regex","text":"","code":"ht <- hux(c(\"The cat sat\", \"on the\", \"mat\"))  map_bold(ht, by_regex(\"at\" = TRUE)) #>                                  The cat sat      #>                                  on the           #>                                  mat              map_bold(ht, by_regex(\"a.*a\" = TRUE)) #>                                  The cat sat      #>                                  on the           #>                                  mat               map_bold(ht, by_regex(   \"the\" = TRUE,   .grepl_args = list(     ignore.case = TRUE   ) )) #>                                  The cat sat      #>                                  on the           #>                                  mat"},{"path":"/reference/by_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cell properties by row or column — by_rows","title":"Set cell properties by row or column — by_rows","text":"by_rows by_cols set properties horizontal vertical \"stripes\".","code":""},{"path":"/reference/by_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cell properties by row or column — by_rows","text":"","code":"by_rows(..., from = 1, ignore_na = TRUE)  by_cols(..., from = 1, ignore_na = TRUE)"},{"path":"/reference/by_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cell properties by row or column — by_rows","text":"... One cell property values. Numeric. Row column start . ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default.","code":""},{"path":"/reference/by_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set cell properties by row or column — by_rows","text":"function use map_*** functions.","code":""},{"path":[]},{"path":"/reference/by_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set cell properties by row or column — by_rows","text":"","code":"ht <- as_hux(matrix(rnorm(25), 5, 5)) map_background_color(   ht,   by_rows(\"green\", \"grey\") ) #>                   0.00048   -0.679    0.194   -1.78    -0.432   #>                   0.755      0.738   -0.691   -0.716   -0.668   #>                   0.342     -0.861    1.34     0.911    1.39    #>                   0.168      0.421    2.74    -0.772    0.912   #>                   1.4        1.45    -0.944   -0.782    0.205   #>  #> Column names: V1, V2, V3, V4, V5 map_background_color(   ht,   by_cols(\"green\", \"grey\") ) #>                   0.00048   -0.679    0.194   -1.78    -0.432   #>                   0.755      0.738   -0.691   -0.716   -0.668   #>                   0.342     -0.861    1.34     0.911    1.39    #>                   0.168      0.421    2.74    -0.772    0.912   #>                   1.4        1.45    -0.944   -0.782    0.205   #>  #> Column names: V1, V2, V3, V4, V5"},{"path":"/reference/by_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Map specific cell values to cell properties — by_values","title":"Map specific cell values to cell properties — by_values","text":"Use by_values() set properties cells specific, pre-determined contents.","code":""},{"path":"/reference/by_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map specific cell values to cell properties — by_values","text":"","code":"by_values(..., ignore_na = TRUE)"},{"path":"/reference/by_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map specific cell values to cell properties — by_values","text":"... Name-value pairs like name = value. Cells contents equal name property set value. single unnamed argument, default value unmatched cells. one unnamed argument error. ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default.","code":""},{"path":"/reference/by_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map specific cell values to cell properties — by_values","text":"function use map_*** functions.","code":""},{"path":[]},{"path":"/reference/by_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map specific cell values to cell properties — by_values","text":"","code":"ht <- hux(letters[1:3]) map_background_color(   ht,   by_values(a = \"red\", c = \"yellow\") ) #>                                  a                #>                                  b                #>                                  c                map_background_color(   ht,   by_values(a = \"red\", c = \"yellow\", \"green\") ) #>                                  a                #>                                  b                #>                                  c"},{"path":"/reference/caption.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the table caption — caption","title":"Set the table caption — caption","text":"default, captions displayed table. can change caption_pos().","code":""},{"path":"/reference/caption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the table caption — caption","text":"","code":"caption(ht)  caption(ht) <- value  set_caption(ht, value)"},{"path":"/reference/caption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the table caption — caption","text":"ht huxtable. value string. Set NA reset default, NA_character_.","code":""},{"path":"/reference/caption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the table caption — caption","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":"/reference/caption.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the table caption — caption","text":"Captions escaped. See example workaround.","code":""},{"path":[]},{"path":"/reference/caption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the table caption — caption","text":"","code":"set_caption(jams, \"Pots of jam for sale\") #>                               Pots of jam for sale                               #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price # escape caption characters: caption(jams) <- sanitize(   \"Make $$$ with jam\",   type = \"latex\" )"},{"path":"/reference/caption_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Position the table's caption — caption_pos","title":"Position the table's caption — caption_pos","text":"caption_pos \"top\" \"bottom\", horizontal position (\"left\", \"center\" \"right\") determined huxtable\"s position().","code":""},{"path":"/reference/caption_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Position the table's caption — caption_pos","text":"","code":"caption_pos(ht)  caption_pos(ht) <- value  set_caption_pos(ht, value)"},{"path":"/reference/caption_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Position the table's caption — caption_pos","text":"ht huxtable. value String: \"top\", \"bottom\", \"topleft\", \"topcenter\", \"topright\", \"bottomleft\", \"bottomcenter\" \"bottomright\". Set NA reset default, \"top\".","code":""},{"path":"/reference/caption_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Position the table's caption — caption_pos","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":[]},{"path":"/reference/caption_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Position the table's caption — caption_pos","text":"","code":"caption(jams) <- \"Jam for sale\" jams #>                                   Jam for sale                                   #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price set_caption_pos(jams, \"bottom\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>                                   Jam for sale                                   #>  #> Column names: Type, Price"},{"path":"/reference/caption_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the width of the table caption — caption_width","title":"Set the width of the table caption — caption_width","text":"numeric widths interpreted proportion text width LaTeX, width containing element HTML. character width must valid LaTeX CSS dimension. default, NA, makes caption width table.","code":""},{"path":"/reference/caption_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the width of the table caption — caption_width","text":"","code":"caption_width(ht)  caption_width(ht) <- value  set_caption_width(ht, value)"},{"path":"/reference/caption_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the width of the table caption — caption_width","text":"ht huxtable. value Number string. Set NA reset default, NA_real_.","code":""},{"path":"/reference/caption_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the width of the table caption — caption_width","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":[]},{"path":"/reference/caption_width.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the width of the table caption — caption_width","text":"","code":"set_caption_width(jams, 0.5) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/cbind.huxtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine rows or columns — cbind.huxtable","title":"Combine rows or columns — cbind.huxtable","text":"methods called one argument cbind/rbind huxtable. well combining cell contents, copy table, row, column /cell properties returned result.","code":""},{"path":"/reference/cbind.huxtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine rows or columns — cbind.huxtable","text":"","code":"# S3 method for class 'huxtable' cbind(..., deparse.level = 1, copy_cell_props = TRUE)  # S3 method for class 'huxtable' rbind(..., deparse.level = 1, copy_cell_props = TRUE)"},{"path":"/reference/cbind.huxtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine rows or columns — cbind.huxtable","text":"... Vectors, matrices, huxtables. deparse.level Unused. copy_cell_props Cell properties copy neighbours (see ).","code":""},{"path":"/reference/cbind.huxtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine rows or columns — cbind.huxtable","text":"huxtable.","code":""},{"path":"/reference/cbind.huxtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine rows or columns — cbind.huxtable","text":"Table properties taken first argument huxtable. row properties (cbind) column properties (rbind). inputs huxtables, copy_cell_props isTRUE, cell properties copied non-huxtables. Objects left get priority right . copy_cell_props FALSE, cells non-huxtable objects get default properties. bind huxtables data frames, since R method dispatch always call data frame method instead huxtable-specific code. solution, see add_columns().","code":""},{"path":"/reference/cbind.huxtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine rows or columns — cbind.huxtable","text":"","code":"sugar <- c(\"Sugar\", \"40%\", \"35%\", \"50%\") jams <- set_bold(jams, 1, everywhere) cbind(jams, sugar) #>                           Type         Price    Sugar   #>                           Strawberry    1.90   40.00%   #>                           Raspberry     2.10   35.00%   #>                           Plum          1.80   50.00%   #>  #> Column names: Type, Price, cbind(jams, sugar,   copy_cell_props = FALSE ) #>                            Type         Price   Sugar   #>                            Strawberry    1.90   40%     #>                            Raspberry     2.10   35%     #>                            Plum          1.80   50%     #>  #> Column names: Type, Price,  jams <- set_text_color(   jams,   everywhere, 1, \"red\" ) rbind(jams, c(\"Damson\", 2.30)) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>                               Damson          2.30   #>  #> Column names: Type, Price rbind(jams, c(\"Damson\", 2.30),   copy_cell_props = FALSE ) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>                               Damson       2.3       #>  #> Column names: Type, Price"},{"path":"/reference/col_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the width of table columns — col_width","title":"Set the width of table columns — col_width","text":"Numeric column widths treated proportions table width. Character widths must valid CSS LaTeX dimensions.","code":""},{"path":"/reference/col_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the width of table columns — col_width","text":"","code":"col_width(ht)  col_width(ht) <- value  set_col_width(ht, col, value)"},{"path":"/reference/col_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the width of table columns — col_width","text":"ht huxtable. value Numeric character vector. Set NA reset default, NA. col column specifier. See rowspecs details.","code":""},{"path":"/reference/col_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the width of table columns — col_width","text":"col_width() returns col_width property. set_col_width() returns modified huxtable.","code":""},{"path":"/reference/col_width.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the width of table columns — col_width","text":"LaTeX, specify column width, set wrap FALSE cells overrun, may problems table position background colours cells. workaround adjust width, cells longer overrun.","code":""},{"path":[]},{"path":"/reference/col_width.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the width of table columns — col_width","text":"","code":"col_width(jams) <- c(.2, .8) col_width(jams) #>  Type Price  #>   0.2   0.8   jams$Notes <- c(   \"Notes\",   \"This year's finest\", \"\", \"\" ) jams #>                            Type                Price   #>                            Strawberry           1.90   #>                            Raspberry            2.10   #>                            Plum                 1.80   #>  #> Column names: Type, Price, Notes #>  #> 2/3 columns shown. set_col_width(jams, c(.4, .5, .1)) #>                              Type            Price   #>                              Strawberry       1.90   #>                              Raspberry        2.10   #>                              Plum             1.80   #>  #> Column names: Type, Price, Notes #>  #> 2/3 columns shown."},{"path":"/reference/column_to_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a column to header rows — column_to_header","title":"Convert a column to header rows — column_to_header","text":"Convert column header rows","code":""},{"path":"/reference/column_to_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a column to header rows — column_to_header","text":"","code":"column_to_header(   ht,   col,   ...,   glue = \"{value}\",   start_col = 1,   ignore_headers = TRUE,   set_headers = TRUE )"},{"path":"/reference/column_to_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a column to header rows — column_to_header","text":"ht huxtable. col column specifier single column. ... Properties set new rows glue Glue string. \"{value}\" replaced column value. start_col Integer. New header text start column. ignore_headers Logical. Ignore existing headers? set_headers Logical. Set new rows headers?","code":""},{"path":"/reference/column_to_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a column to header rows — column_to_header","text":"","code":"column_to_header(jams, \"Type\") #>                                           Price   #>                                  Strawberry       #>                                            1.90   #>                                  Raspberry        #>                                            2.10   #>                                  Plum             #>                                            1.80   #>  #> Column names: Price column_to_header(jams, \"Type\", text_color = \"red\") #>                                           Price   #>                                  Strawberry       #>                                            1.90   #>                                  Raspberry        #>                                            2.10   #>                                  Plum             #>                                            1.80   #>  #> Column names: Price column_to_header(jams, \"Price\",   number_format = 2,   italic = TRUE,   glue = \"Price: {value}\" ) #>                                  Type             #>                                  Price: 1.90      #>                                  Strawberry       #>                                  Price: 2.10      #>                                  Raspberry        #>                                  Price: 1.80      #>                                  Plum             #>  #> Column names: Type  iris_hux <- as_hux(iris[c(1:4, 51:54, 101:104), ]) column_to_header(iris_hux, \"Species\",   markdown = TRUE,   glue = \"Species: **{value}**\" ) #>             Sepal.Length   Sepal.Width   Petal.Length   Petal.Width   #>             Species: setosa                                           #>                      5.1           3.5            1.4           0.2   #>                      4.9           3              1.4           0.2   #>                      4.7           3.2            1.3           0.2   #>                      4.6           3.1            1.5           0.2   #>             Species: versicolor                                       #>                      7             3.2            4.7           1.4   #>                      6.4           3.2            4.5           1.5   #>                      6.9           3.1            4.9           1.5   #>                      5.5           2.3            4             1.3   #>             Species: virginica                                        #>                      6.3           3.3            6             2.5   #>                      5.8           2.7            5.1           1.9   #>                      7.1           3              5.9           2.1   #>                      6.3           2.9            5.6           1.8   #>  #> Column names: Sepal.Length, Sepal.Width, Petal.Length, Petal.Width"},{"path":"/reference/description-colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of color format — description-colors","title":"Description of color format — description-colors","text":"Colors can format understood R: color name like \"darkred\" HTML string like \"#FF0000\" result function like rgb(1, 0, 0) grey(0.5)","code":""},{"path":"/reference/dplyr-verbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Use dplyr verbs with huxtable objects — mutate.huxtable","title":"Use dplyr verbs with huxtable objects — mutate.huxtable","text":"Huxtable can used dplyr verbs dplyr::select(), dplyr::rename(), dplyr::relocate(), dplyr::slice(), dplyr::arrange(), dplyr::mutate() dplyr::transmute(). return huxtables. verbs like dplyr::summarise() simply return data frames normal; dplyr::pull() return vector. mutate extra option, detailed .","code":""},{"path":"/reference/dplyr-verbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use dplyr verbs with huxtable objects — mutate.huxtable","text":"","code":"mutate.huxtable(.data, ..., copy_cell_props = TRUE)"},{"path":"/reference/dplyr-verbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use dplyr verbs with huxtable objects — mutate.huxtable","text":".data huxtable. ... Arguments passed dplyr::mutate(). copy_cell_props Logical: copy cell column properties existing columns.","code":""},{"path":"/reference/dplyr-verbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use dplyr verbs with huxtable objects — mutate.huxtable","text":"mutate creates new columns, argument copy_cell_props missing TRUE, cell column properties copied existing columns left, . Otherwise, standard defaults. Row table properties, properties cells existing columns, remain unchanged.","code":""},{"path":"/reference/dplyr-verbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use dplyr verbs with huxtable objects — mutate.huxtable","text":"","code":"ht <- hux(a = 1:5, b = 1:5, c = 1:5, d = 1:5, add_colnames = FALSE) bold(ht)[c(1, 3), ] <- TRUE bold(ht)[, 1] <- TRUE ht2 <- dplyr::select(ht, b:c) ht2 #>                                      1         1   #>                                      2         2   #>                                      3         3   #>                                      4         4   #>                                      5         5   #>  #> Column names: b, c bold(ht2) #>       b     c #> 1  TRUE  TRUE #> 2 FALSE FALSE #> 3  TRUE  TRUE #> 4 FALSE FALSE #> 5 FALSE FALSE ht3 <- dplyr::mutate(ht, x = a + b) ht3 #>                             1     1     1     1     2   #>                             2     2     2     2     4   #>                             3     3     3     3     6   #>                             4     4     4     4     8   #>                             5     5     5     5    10   #>  #> Column names: a, b, c, d, x bold(ht3) #>      a     b     c     d     x #> 1 TRUE  TRUE  TRUE  TRUE  TRUE #> 2 TRUE FALSE FALSE FALSE FALSE #> 3 TRUE  TRUE  TRUE  TRUE  TRUE #> 4 TRUE FALSE FALSE FALSE FALSE #> 5 TRUE FALSE FALSE FALSE FALSE ht4 <- dplyr::mutate(ht,   x = a + b,   copy_cell_props = FALSE ) bold(ht4) #>      a     b     c     d     x #> 1 TRUE  TRUE  TRUE  TRUE FALSE #> 2 TRUE FALSE FALSE FALSE FALSE #> 3 TRUE  TRUE  TRUE  TRUE FALSE #> 4 TRUE FALSE FALSE FALSE FALSE #> 5 TRUE FALSE FALSE FALSE FALSE"},{"path":"/reference/escape_contents.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape or unescape text in cells — escape_contents","title":"Escape or unescape text in cells — escape_contents","text":"Setting escape_contents FALSE allows include raw HTML TeX code cells.","code":""},{"path":"/reference/escape_contents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape or unescape text in cells — escape_contents","text":"","code":"escape_contents(ht)  escape_contents(ht) <- value  set_escape_contents(ht, row, col, value)  map_escape_contents(ht, row, col, fn)"},{"path":"/reference/escape_contents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape or unescape text in cells — escape_contents","text":"ht huxtable. value logical vector matrix. Set NA reset default, TRUE. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/escape_contents.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Escape or unescape text in cells — escape_contents","text":"markdown() TRUE cell, escape_contents property ignored.","code":""},{"path":[]},{"path":"/reference/escape_contents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Escape or unescape text in cells — escape_contents","text":"","code":"ht <- huxtable(   Text   = \"x squared\",   Maths  = \"$x^2$\" ) ht <- set_escape_contents(ht, FALSE) if (FALSE) { # \\dontrun{ quick_pdf(ht) } # }"},{"path":"/reference/extract-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a huxtable — [.huxtable","title":"Subset a huxtable — [.huxtable","text":"Subset huxtable","code":""},{"path":"/reference/extract-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a huxtable — [.huxtable","text":"","code":"# S3 method for class 'huxtable' x[i, j, drop = FALSE]  # S3 method for class 'huxtable' x[i, j] <- value  # S3 method for class 'huxtable' x$name <- value  # S3 method for class 'huxtable' x[[i, j]] <- value"},{"path":"/reference/extract-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a huxtable — [.huxtable","text":"x huxtable. Rows select. j, name Columns select. drop included compatibility [.data.frame. use. value matrix, data frame, huxtable similar object.","code":""},{"path":"/reference/extract-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a huxtable — [.huxtable","text":"[ returns huxtable. $ [[ return data underlying data frame.","code":""},{"path":"/reference/extract-methods.html","id":"replacing-existing-rows-and-columns","dir":"Reference","previous_headings":"","what":"Replacing existing rows and columns","title":"Subset a huxtable — [.huxtable","text":"replacement function [<-, value huxtable, properties copied x. Replacement functions $<- [[<- replace existing data without affecting properties.","code":""},{"path":"/reference/extract-methods.html","id":"adding-new-rows-and-columns","dir":"Reference","previous_headings":"","what":"Adding new rows and columns","title":"Subset a huxtable — [.huxtable","text":"new columns rows created, properties copied last column row x, value value huxtable. methods stricter data frame equivalents places. add new rows column numeric location without specifying intervening rows/columns. New values must appropriate dimensions (vectors interpreted appropriately).","code":""},{"path":"/reference/extract-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a huxtable — [.huxtable","text":"","code":"jams[1:3, ] #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>  #> Column names: Type, Price class(jams[1:3, ]) #> [1] \"huxtable\"   \"data.frame\" jams[, 1] #>                                  Type             #>                                  Strawberry       #>                                  Raspberry        #>                                  Plum             #>  #> Column names: Type jams$Type #> [1] \"Type\"       \"Strawberry\" \"Raspberry\"  \"Plum\"       prices <- huxtable(c(\"Price\", 1.70, 2.00, 2.20)) number_format(prices) <- 2 bold(prices) <- TRUE jams[, 2] <- prices jams #>                               Type         Price     #>                               Strawberry   1.70      #>                               Raspberry    2.00      #>                               Plum         2.20      #>  #> Column names: Type, Price  data(jams) jams$price <- c(\"Price\", 1.70, 2.00, 2.20) jams #>                            Type         Price   Price   #>                            Strawberry   1.70    1.70    #>                            Raspberry    2.00    2.00    #>                            Plum         2.20    2.20    #>  #> Column names: Type, Price, price"},{"path":"/reference/final.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the last n rows or columns — final","title":"Return the last n rows or columns — final","text":"convenience function use row column specifications. context, returns last n row column numbers huxtable.","code":""},{"path":"/reference/final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the last n rows or columns — final","text":"","code":"final(n = 1)"},{"path":"/reference/final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the last n rows or columns — final","text":"n Number rows return.","code":""},{"path":"/reference/final.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return the last n rows or columns — final","text":"Technically, final returns two-argument function - see rowspecs details.","code":""},{"path":"/reference/final.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the last n rows or columns — final","text":"","code":"set_bold(jams, final(2), final(1), TRUE) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/fmt-numbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Description for fmt_ functions — fmt-numbers","title":"Description for fmt_ functions — fmt-numbers","text":"fmt_ functions designed work number_format().","code":""},{"path":"/reference/fmt-numbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Description for fmt_ functions — fmt-numbers","text":"object can pass number_format().","code":""},{"path":"/reference/fmt_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Format numbers as percent — fmt_percent","title":"Format numbers as percent — fmt_percent","text":"fmt_ functions designed work number_format().","code":""},{"path":"/reference/fmt_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format numbers as percent — fmt_percent","text":"","code":"fmt_percent(digits = 1, format = \"f\", ...)"},{"path":"/reference/fmt_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format numbers as percent — fmt_percent","text":"digits many digits print. format, ... Passed formatC().","code":""},{"path":"/reference/fmt_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format numbers as percent — fmt_percent","text":"object can pass number_format().","code":""},{"path":[]},{"path":"/reference/fmt_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format numbers as percent — fmt_percent","text":"","code":"jams$Sugar <- c(   \"Sugar content\",   0.4, 0.35, 0.45 ) set_number_format(   jams, -1, \"Sugar\",   fmt_percent(1) ) #>                        Type         Price   Sugar content   #>                        Strawberry    1.90           40.0%   #>                        Raspberry     2.10           35.0%   #>                        Plum          1.80           45.0%   #>  #> Column names: Type, Price, Sugar"},{"path":"/reference/fmt_pretty.html","id":null,"dir":"Reference","previous_headings":"","what":"Use prettyNum() to format numbers — fmt_pretty","title":"Use prettyNum() to format numbers — fmt_pretty","text":"Use prettyNum() format numbers","code":""},{"path":"/reference/fmt_pretty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use prettyNum() to format numbers — fmt_pretty","text":"","code":"fmt_pretty(big.mark = \",\", ..., scientific = FALSE)"},{"path":"/reference/fmt_pretty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use prettyNum() to format numbers — fmt_pretty","text":"big.mark, scientific, ... Passed prettyNum().","code":""},{"path":"/reference/fmt_pretty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use prettyNum() to format numbers — fmt_pretty","text":"object can pass number_format().","code":""},{"path":[]},{"path":"/reference/fmt_pretty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use prettyNum() to format numbers — fmt_pretty","text":"","code":"jams$Sales <- c(   \"Sales\", 35000,   55500, 20000 ) set_number_format(   jams, -1, \"Sales\",   fmt_pretty() ) #>                           Type         Price    Sales   #>                           Strawberry    1.90   35,000   #>                           Raspberry     2.10   55,500   #>                           Plum          1.80   20,000   #>  #> Column names: Type, Price, Sales"},{"path":"/reference/font.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the font for cell text — font","title":"Set the font for cell text — font","text":"Set font cell text","code":""},{"path":"/reference/font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the font for cell text — font","text":"","code":"font(ht)  font(ht) <- value  set_font(ht, row, col, value)  map_font(ht, row, col, fn)"},{"path":"/reference/font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the font for cell text — font","text":"ht huxtable. value character vector matrix. Set NA reset default, NA_character_. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/font.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the font for cell text — font","text":"find fonts system, systemfonts::match_font() useful. HTML, can use comma-separated lists font names like \"Times New Roman, Times, Serif\". portable, though. LaTeX HTML use different font names. use font names across document formats, see options(\"huxtable.latex_use_fontspec\") huxtable-options.","code":""},{"path":[]},{"path":"/reference/font.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the font for cell text — font","text":"","code":"font(jams) <- \"times\" font(jams) #>     Type    Price   #> 1   \"times\" \"times\" #> 1.1 \"times\" \"times\" #> 2   \"times\" \"times\" #> 3   \"times\" \"times\"  set_font(jams, \"arial\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price set_font(jams, 2:3, 1, \"arial\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price map_font(jams, by_rows(\"arial\", \"times\")) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/font_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Make text larger or smaller — font_size","title":"Make text larger or smaller — font_size","text":"Font size points.","code":""},{"path":"/reference/font_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make text larger or smaller — font_size","text":"","code":"font_size(ht)  font_size(ht) <- value  set_font_size(ht, row, col, value)  map_font_size(ht, row, col, fn)"},{"path":"/reference/font_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make text larger or smaller — font_size","text":"ht huxtable. value numeric vector. Set NA reset default, NA_real_. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":[]},{"path":"/reference/font_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make text larger or smaller — font_size","text":"","code":"font_size(jams) <- 14 font_size(jams) #>     Type Price #> 1     14    14 #> 1.1   14    14 #> 2     14    14 #> 3     14    14  jams2 <- set_font_size(   jams,   12 ) font_size(jams2) #>     Type Price #> 1     12    12 #> 1.1   12    12 #> 2     12    12 #> 3     12    12  jams3 <- set_font_size(   jams,   2:3, 1, 12 ) font_size(jams3) #>     Type Price #> 1     14    14 #> 1.1   12    14 #> 2     12    14 #> 3     14    14  jams4 <- map_font_size(   jams,   by_rows(     12,     14   ) ) font_size(jams4) #>     Type Price #> 1     12    12 #> 1.1   14    14 #> 2     12    12 #> 3     14    14"},{"path":"/reference/guess_knitr_output_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess knitr output format — guess_knitr_output_format","title":"Guess knitr output format — guess_knitr_output_format","text":"Convenience function tries guess ultimate output knitr rmarkdown.","code":""},{"path":"/reference/guess_knitr_output_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess knitr output format — guess_knitr_output_format","text":"","code":"guess_knitr_output_format()"},{"path":"/reference/guess_knitr_output_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guess knitr output format — guess_knitr_output_format","text":"\"html\", \"latex\", \"typst\", something else. knitr document, returns empty string.","code":""},{"path":"/reference/guess_knitr_output_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guess knitr output format — guess_knitr_output_format","text":"","code":"if (FALSE) { # \\dontrun{ # in a knitr document guess_knitr_output_format() } # }"},{"path":"/reference/header_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark rows or columns as headers — header_cols","title":"Mark rows or columns as headers — header_cols","text":"Arbitrary rows columns can headers: top left table.","code":""},{"path":"/reference/header_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark rows or columns as headers — header_cols","text":"","code":"header_cols(ht)  header_cols(ht) <- value  set_header_cols(ht, col, value)  header_rows(ht)  header_rows(ht) <- value  set_header_rows(ht, row, value)"},{"path":"/reference/header_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark rows or columns as headers — header_cols","text":"ht huxtable. value Logical vector. Set NA reset default, FALSE. col column specifier. See rowspecs details. row row specifier. See rowspecs details.","code":""},{"path":"/reference/header_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark rows or columns as headers — header_cols","text":"default header rows columns shown differently rows, can change style_headers(). Various themes may set properties headers. Lastly, headers treated differently restacking.","code":""},{"path":"/reference/header_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark rows or columns as headers — header_cols","text":"","code":"jams <- set_header_rows(jams, 1, TRUE) jams <- set_header_cols(jams, 1, TRUE) style_headers(jams,   bold       = TRUE,   text_color = \"purple\" ) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/height.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the table height — height","title":"Set the table height — height","text":"height() sets height entire table, row_height() sets height individual rows. numeric height treated proportion containing block (HTML) \\textheight (LaTeX). character height must valid CSS LaTeX dimension.","code":""},{"path":"/reference/height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the table height — height","text":"","code":"height(ht)  height(ht) <- value  set_height(ht, value)"},{"path":"/reference/height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the table height — height","text":"ht huxtable. value number string. Set NA reset default, NA_real_.","code":""},{"path":"/reference/height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the table height — height","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":[]},{"path":"/reference/height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the table height — height","text":"","code":"set_height(jams, 0.4) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/hux_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Huxtable logo — hux_logo","title":"Huxtable logo — hux_logo","text":"Returns randomized huxtable logo, inspired Mondrian.","code":""},{"path":"/reference/hux_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Huxtable logo — hux_logo","text":"","code":"hux_logo(latex = FALSE, html = FALSE)"},{"path":"/reference/hux_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Huxtable logo — hux_logo","text":"latex Style LaTeX. html Style HTML.","code":""},{"path":"/reference/hux_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Huxtable logo — hux_logo","text":"huxtable logo.","code":""},{"path":"/reference/hux_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Huxtable logo — hux_logo","text":"","code":"print_screen(hux_logo()) #>                      ┌─────┬─────┬─────┬─────┬─────┬─────┐ #>                      │  h  │     │  u  │     │     │  x  │ #>                      ├─────┼─────┼─────┼─────┼─────┼─────┤ #>                      │  t  │     │     │     │  a  │  b  │ #>                      ├─────┼─────┼─────┴─────┼─────┼─────┤ #>                      │     │     │           │     │     │ #>                      ├─────┼─────┼─────┬─────┼─────┼─────┤ #>                      │     │     │     │     │     │     │ #>                      ├─────┼─────┼─────┤     ├─────┼─────┤ #>                      │     │     │  l  │     │     │     │ #>                      │     ├─────┴─────┼─────┼─────┼─────┤ #>                      │     │           │  e  │     │     │ #>                      └─────┴───────────┴─────┴─────┴─────┘ #>  #> Column names: V1, V2, V3, V4, V5, V6"},{"path":"/reference/hux_prop_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Shared documentation for huxtable property functions: — hux_prop_params","title":"Shared documentation for huxtable property functions: — hux_prop_params","text":"Shared documentation huxtable property functions:","code":""},{"path":"/reference/hux_prop_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shared documentation for huxtable property functions: — hux_prop_params","text":"ht huxtable. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/hux_prop_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shared documentation for huxtable property functions: — hux_prop_params","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":"/reference/huxreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a huxtable to display model output — huxreg","title":"Create a huxtable to display model output — huxreg","text":"Create huxtable display model output","code":""},{"path":"/reference/huxreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a huxtable to display model output — huxreg","text":"","code":"huxreg(   ...,   error_format = \"({std.error})\",   error_pos = c(\"below\", \"same\", \"right\"),   number_format = \"%.3f\",   align = \".\",   ci_level = NULL,   tidy_args = NULL,   glance_args = NULL,   stars = c(`***` = 0.001, `**` = 0.01, `*` = 0.05),   bold_signif = NULL,   borders = 0.4,   outer_borders = 0.8,   note = if (is.null(stars)) NULL else \"{stars}.\",   statistics = c(N = \"nobs\", R2 = \"r.squared\", \"logLik\", \"AIC\"),   coefs = NULL,   omit_coefs = NULL )"},{"path":"/reference/huxreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a huxtable to display model output — huxreg","text":"... Models, single list models. Names used column headings. error_format display uncertainty estimates. See . error_pos Display uncertainty \"\", \"right\" , \"\" cell estimates. number_format Format numbering. See number_format() details. align Alignment table cells. Set single character align character. ci_level Confidence level intervals. Set NULL calculate confidence intervals. tidy_args List arguments pass generics::tidy(). list without names treated list argument lists, one model. glance_args List arguments pass generics::glance(). list without names treated list argument lists, one model. stars Levels p value stars. Names stars symbols use. Set NULL show stars. bold_signif p values number, cells displayed bold. Use NULL turn behaviour. borders Thickness inner horizontal borders. Set 0 borders. outer_borders Thickness outer (top bottom) horizontal borders. Set 0 borders. note Footnote bottom cell, spans columns. {stars} replaced note significance stars. Set NULL footnote. statistics vector summary statistics display. Set NULL show available statistics. change display names, name statistics vector: c(\"Displayed title\" = \"statistic_name\", ...) coefs vector coefficients display. Overrules omit_coefs. change display names, name coef vector: c(\"Displayed title\" = \"coefficient_name\", ...) omit_coefs Omit coefficients.","code":""},{"path":"/reference/huxreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a huxtable to display model output — huxreg","text":"huxtable object.","code":""},{"path":"/reference/huxreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a huxtable to display model output — huxreg","text":"Models must generics::tidy() method defined, return \"term\", \"estimate\", \"std.error\", \"statistic\" \"p.value\". \"broom\" package provides methods many model objects. tidy method conf.int option, huxreg calculate confidence intervals , using normal approximation. ... names contains single named list, names used column headings. Otherwise column headings automatically created. coef /statistics vectors names, used row headings. different values coef name, corresponding rows merged output. statistics column names generics::glance(). can also use \"nobs\" number observations. statistics NULL columns glance used. use columns, set statistics = character(0). error_format string interpreted glue::glue(). Terms parentheses replaced computed values. can use columns returned tidy: typical columns include statistic, p.value, std.error, well conf.low conf.high set ci_level. example, show confidence intervals, write error_format = \"{conf.low} {conf.high}\".","code":""},{"path":"/reference/huxreg.html","id":"fixing-p-values-manually","dir":"Reference","previous_headings":"","what":"Fixing p values manually","title":"Create a huxtable to display model output — huxreg","text":"wish use e.g. robust standard errors, can pass results e.g. lmtest::coeftest() huxreg, since objects tidy methods. Alternatively, manually insert statistics, see tidy_override().","code":""},{"path":"/reference/huxreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a huxtable to display model output — huxreg","text":"","code":"if (!requireNamespace(\"broom\")) {   stop(\"Please install 'broom' to run this example.\") } #> Loading required namespace: broom  lm1 <- lm(mpg ~ cyl, mtcars) lm2 <- lm(mpg ~ cyl + hp, mtcars) glm1 <- glm(I(mpg > 20) ~ cyl, mtcars,   family = binomial )  huxreg(lm1, lm2, glm1) #>            ───────────────────────────────────────────────────────── #>                                (1)           (2)           (3)       #>                          ─────────────────────────────────────────── #>              (Intercept)    37.885 ***    36.908 ***       64.400    #>                             (2.074)       (2.191)      (17449.774)   #>              cyl            -2.876 ***    -2.265 ***      -10.781    #>                             (0.322)       (0.576)       (2908.296)   #>              hp                           -0.019                     #>                                           (0.015)                    #>                          ─────────────────────────────────────────── #>              N              32            32               32        #>              R2              0.726         0.741                     #>              logLik        -81.653       -80.781           -4.780    #>              AIC           169.306       169.562           13.561    #>            ───────────────────────────────────────────────────────── #>              *** p < 0.001; ** p < 0.01; * p < 0.05.                 #>  #> Column names: names, model1, model2, model3  if (requireNamespace(\"sandwich\") &&   requireNamespace(\"lmtest\")) {   lm_robust <- lmtest::coeftest(lm1,     vcov = sandwich::vcovHC   )   # coeftest() has no \"glance\" method:   huxreg(lm_robust,     statistics = character(0)   ) } #> Loading required namespace: sandwich #> Loading required namespace: lmtest #> Original model not retained as part of coeftest object. #> ℹ For additional model summary information (r.squared, df, etc.), consider #>   passing `glance.coeftest()` an object where the underlying model has been #>   saved, i.e.  `lmtest::coeftest(..., save = TRUE)`. #> This message is displayed once per session. #>                 ─────────────────────────────────────────────── #>                                                  (1)            #>                                        ──────────────────────── #>                   (Intercept)                      37.885 ***   #>                                                    (2.742)      #>                   cyl                              -2.876 ***   #>                                                    (0.389)      #>                 ─────────────────────────────────────────────── #>                   *** p < 0.001; ** p < 0.01; * p < 0.05.       #>  #> Column names: names, model1"},{"path":"/reference/huxtable-FAQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequently Asked Questions, including how to get help — huxtable-FAQ","title":"Frequently Asked Questions, including how to get help — huxtable-FAQ","text":"FAQ common issues.","code":""},{"path":"/reference/huxtable-FAQ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frequently Asked Questions, including how to get help — huxtable-FAQ","text":"get LaTeX error try compile document! installed LaTeX packages need? LaTeX packages different R packages. Run check_latex_dependencies() find missing . install using system's LaTeX management application. can try install_latex_dependencies(). rmarkdown LaTeX formats, also need add LaTeX dependencies manually. Run report_latex_dependencies() add output LaTeX preamble, Rmarkdown formats, add rmarkdown header like :   Huxtable working Rmarkdown beamer_presentation slides. may need set beamer \"fragile\" option, like :   Numbers cells look weird! can change numeric formatting using number_format(). Base R options like scipen usually effect. can use HTML, TeX etc. table? Use escape_contents():   Alternatively might consider using markdown cells, set_markdown_contents(). ran caption(ht) <- \"Something\" got error message:   may loaded another package caption method, e.g. \"xtable\". Try loading huxtable xtable. can get line breaks cells? Just insert line break \"\\n\" cell contents. make sure width() set wrap() TRUE (default). can change font size, font etc. captions? direct commands . use raw HTML/TeX/commands within caption . example bold caption HTML, might something like:   refer tables bookdown? version 4.3.0, handled automatically . Just set label using label(), markdown text e.g.:   refer tables quarto? quarto versions 1.3, compiling HTML formats, simply use quarto cell labels like label: tbl-foo refer via @tbl-foo. quarto versions 1.4 , compiling PDF, quarto cross-referencing longer works. Instead, set labels within huxtable using label() set_label() refer TeX-referencing using \\ref{label}. must also set caption. example:   really need cross-referencing PDF output formats, either downgrade quarto 1.3, use different package, write code emit appropriate references. called library(huxtable) now data.table objects getting printed! Set options(huxtable.knit_print_df = FALSE). can set property arbitrary group cells? use mapping-functions interface, want set property multiple cells rows /columns, use little-known fact R subsetting. subset ht[x] x two-column numeric matrix, row x indexes single (row, column) cell. , example, set background color cells (2,1), (1, 3) (4, 2) huxtable:   Another useful trick sets properties diagonal, using diag():   another problem. bug - .e. something wrong software - feature request, please report https://github.com/hughjonesd/huxtable/issues. Otherwise, ask question StackOverflow https://forum.posit.co. way, people benefit answers get. Can email directly? rather asked public website. email link, may able help.","code":"header-includes:   - \\usepackage{array}   - \\usepackage{caption}   ... et cetera # Slide title {.fragile} jams |>      add_footnote(\"These jams are <i>tasty<\/i>!\") |>      set_escape_contents(final(1), everywhere, FALSE) |>      quick_html() Error in UseMethod(\"caption<-\") : no applicable method for 'caption<-' applied to an object of class \"c('huxtable',   'data.frame')\" set_caption(jams, \"<b>Jam Prices<\/b>\") \\@ref(tab:my-table-label). A reference to Table \\ref{tbl-jams}.  ```{r} label(jams) <- \"tbl-jams\" caption(jams) <- \"Some jams\" jams ``` indices <- matrix(c(2, 1, 1, 3, 4, 2), ncol = 2, byrow = TRUE) background_color(jams)[indices] <- \"orange\" diag(background_color(jams)) <- \"grey\""},{"path":[]},{"path":"/reference/huxtable-FAQ.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Frequently Asked Questions, including how to get help — huxtable-FAQ","text":"Maintainer: David Hugh-Jones davidhughjones@gmail.com","code":""},{"path":"/reference/huxtable-news.html","id":null,"dir":"Reference","previous_headings":"","what":"Changes to the huxtable package — huxtable-news","title":"Changes to the huxtable package — huxtable-news","text":"help page simply gives contents NEWS.md.","code":""},{"path":[]},{"path":"/reference/huxtable-news.html","id":"breaking-changes","dir":"Reference","previous_headings":"","what":"Breaking changes","title":"Changes to the huxtable package — huxtable-news","text":"Functions longer generic, can’t subclass huxtable object. AFAIK nobody ever done ; ’m wrong, please tell . Reworked internals, help OpenAI Codex.","code":""},{"path":"/reference/huxtable-news.html","id":"other-changes","dir":"Reference","previous_headings":"","what":"Other changes","title":"Changes to the huxtable package — huxtable-news","text":"HTML tables now wrap header rows <thead> (using <th> cells) body rows <tbody> header rows top table. Added Typst export via to_typst() print_typst(). Quarto integration available well quick_typst(), quick_typst_pdf(), quick_typst_png(), quick_typst_svg() functions. HTML output now uses CSS classes shared <style> block instead long inline styles. Added as_html() obtaining table htmltools tags. to_screen() now displays double, dashed dotted border styles.","code":""},{"path":[]},{"path":"/reference/huxtable-news.html","id":"breaking-changes-1","dir":"Reference","previous_headings":"","what":"Breaking changes","title":"Changes to the huxtable package — huxtable-news","text":"Removed underscore dplyr verbs (slice_, select_ etc.) long deprecated dplyr .","code":""},{"path":"/reference/huxtable-news.html","id":"other-changes-1","dir":"Reference","previous_headings":"","what":"Other changes","title":"Changes to the huxtable package — huxtable-news","text":"Bugfix: add newline end report_latex_dependencies() output. Thanks @ceresek. can now add multiple huxtables Excel worksheet as_Workbook(). Suggestion @oobd.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--2","dir":"Reference","previous_headings":"","what":"huxtable 5.5.7","title":"Changes to the huxtable package — huxtable-news","text":"Bugfix: fix quarto referencing quarto 1.5 Bugfix: integer overflow large huxtables. Thanks @kpagacz.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--3","dir":"Reference","previous_headings":"","what":"huxtable 5.5.6","title":"Changes to the huxtable package — huxtable-news","text":"Bugfix: quarto cross-referencing giving many warnings.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--4","dir":"Reference","previous_headings":"","what":"huxtable 5.5.5","title":"Changes to the huxtable package — huxtable-news","text":"Bugfix: quarto cross-referencing doesn’t work PDF quarto version 1.4. See ?huxtable-FAQ workarounds. Bugfix: by_cases() wasn’t picking variables caller environment. huxtable 5.5.4 never released due failing reverse dependency check.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--5","dir":"Reference","previous_headings":"","what":"huxtable 5.5.3","title":"Changes to the huxtable package — huxtable-news","text":"Bugfix: disable quarto styling HTML tables. can reenable quarto processing options(huxtable.quarto_process = TRUE). Bugfix: borders weren’t working merged cells Word documents.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--6","dir":"Reference","previous_headings":"","what":"huxtable 5.5.2","title":"Changes to the huxtable package — huxtable-news","text":"Update by_cases() work dplyr 1.1.0. Within by_cases() formulas, . now vector rather matrix dplyr version 1.1.0 detected. Thanks @DavisVaughan. Add package checks quick_* functions. Thanks @reuning.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--7","dir":"Reference","previous_headings":"","what":"huxtable 5.5.1","title":"Changes to the huxtable package — huxtable-news","text":"CSS borders now set explicitly even set 0. Bugfix: shell-quote files quick_* functions. Thanks @ceresek. Bugfix: cope adjustbox version “1.3a” among latex dependencies.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--8","dir":"Reference","previous_headings":"","what":"huxtable 5.5.0","title":"Changes to the huxtable package — huxtable-news","text":"Huxtable work Quarto documents. Quarto labels captions override huxtable-provided ones. Quarto style references like @table-label work quarto labels. Please report bugs! New column_to_header() function converts column header rows. New as_hux() method grouped_df objects optionally converts groups header rows. New convenience functions stripe_rows() stripe_columns(). Add format ... options fmt_percent() allow flexible formatting via formatC(). add_footnote() gets explicit number_format argument NA default. Bugfix: infinite loop wide characters to_screen(). Bugfix: duplicate colnames exporting huxreg(..., error_pos = \"right\") flextable. Bugfix: bookdown-style references weren’t working blogdown.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--9","dir":"Reference","previous_headings":"","what":"huxtable 5.4.0","title":"Changes to the huxtable package — huxtable-news","text":"New behaviour: setting colspan() rowspan() overwrites content cells shadowed.   New option huxtable.latex_siunitx_align allows use LaTeX siunitx package handle decimal point alignment. FALSE default. Bugfix: centre alignment working print_screen(). Bugfix: failure to_md() recent versions stringi package. Bugfix: repeating single row subset, like ht[c(1, 1, 2, 3), ], setting colspan = 2 repeated row. Bugfix: zero-argument subset replacement like ht[] <- ... wasn’t working.","code":"ht <- hux(c(1, 1), c(2, 2), c(3, 3)) ht <- set_all_borders(ht) colspan(ht)[1, 1] <- 3  # old behaviour ht[, c(2, 1, 3)] ##   +--------------------------+ ##   |                  2       | ##   +--------+--------+--------+ ##   |      2 |      1 |      3 | ##   +--------+--------+--------+  # new behaviour ht[, c(2, 1, 3)] ##   +--------------------------+ ##   |                  1       | ##   +--------+--------+--------+ ##   |      2 |      1 |      3 | ##   +--------+--------+--------+"},{"path":"/reference/huxtable-news.html","id":"huxtable--10","dir":"Reference","previous_headings":"","what":"huxtable 5.3.0","title":"Changes to the huxtable package — huxtable-news","text":"Improve decimal alignment LaTeX align(ht) == \".\". may change appearance documents. Allow tidy_override() extend columns tidy glance. Bugfix: #196 ^ giving errors LaTeX.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--11","dir":"Reference","previous_headings":"","what":"huxtable 5.2.0","title":"Changes to the huxtable package — huxtable-news","text":"Add table_environment property can use e.g. \"table*\" TeX. Bugfix: print_screen(h, colnames = FALSE) didn’t print final newline. Bugfix: italic markdown printed underlined TeX. Minor test update compatibility broom.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--12","dir":"Reference","previous_headings":"","what":"huxtable 5.1.1","title":"Changes to the huxtable package — huxtable-news","text":"Minor test update compatibility broom. Fixes R 4.1.0.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--13","dir":"Reference","previous_headings":"","what":"huxtable 5.1.0","title":"Changes to the huxtable package — huxtable-news","text":"as_flextable() now exports markdown cells RTF, Word help optional ftExtra package. Thanks @atusy adding feature. Improvements markdown screen export. now uses optional fansi package. New feature: as_Workbook() gains start_row start_col arguments, write huxtable Excel worksheet starting particular row column. New feature: huxreg() gains glance_args argument pass arguments glance(). New feature: options(huxtable.long_minus = TRUE) try use long minus signs numbers. default FALSE. probably become TRUE future version. Bugfix: insert_row/column(..., = 0) unsetting table properties. Bugfix: unicode characters 32767 incorrectly represented RTF. Thanks @kaigu1990. Bugfix: columns collapsed as_Workbook(). Bugfix: style_cells didn’t work unless huxtable search path. Bugfix: merge_repeated_rows merged NA rows incorrectly. Bugfix: number format set correctly huxreg()’s note. Bugfix: huxreg(), tidy_args threw error first argument tidy() named list. Bugfix: tidy_replace() broken. Clearer error messages tidy_override() extend = FALSE. future, extend probably default TRUE.","code":""},{"path":"/reference/huxtable-news.html","id":"other-news-","dir":"Reference","previous_headings":"","what":"Other news:","title":"Changes to the huxtable package — huxtable-news","text":"Huxtable received first Patreon sponsor! Thanks Ross Mattheis.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--14","dir":"Reference","previous_headings":"","what":"huxtable 5.0.0","title":"Changes to the huxtable package — huxtable-news","text":"Huxtable 5.0.0 brings numerous changes. user-friendly introduction, see https://hughjonesd.github.io/whats-new--huxtable-5.0.0.html.","code":""},{"path":"/reference/huxtable-news.html","id":"breaking-changes-2","dir":"Reference","previous_headings":"","what":"Breaking changes","title":"Changes to the huxtable package — huxtable-news","text":"changes LaTeX output. LaTeX \\tabcolsep now set 0 within huxtable tables, left right padding now take effect even wrap FALSE. default LaTeX table environment now “tabular” unless width set. width set, “tabularx”. wrap matters width set. Otherwise, cell wrapping . \\centerbox macro LaTeX “adjustbox” package used centre tables. improve centring tables wide. may need update LaTeX “adjustbox” package recent version. check_latex_dependencies() can inform . previously signalled, add_colnames now become TRUE default huxtable() as_huxtable(). Set options(huxtable.add_colnames = FALSE) go back old behaviour. Newlines cell contents now respected (LaTeX, long wrap = TRUE width set). Huxtable borders reworked, fixing longstanding bugs adding new features. Borders now automatically collapsed. example:   set border columns jams 0.4, overwriting previous value. line expect. example, following code now probably want:   instead old behaviour:   set_left_border(), set_all_borders() friends use default value 0.4. set default border, write e.g.   new brdr() class encapsulates border thickness, style colour. can set properties writing, e.g.:   left_border(ht) friends return brdr object. access border thickness, write brdr_thickness(left_border(ht)). Various deprecated items removed: 3-argument form set_*. Instead, use map_*. byrow argument set_*. Instead, use map_* by_cols(). error_style pad_decimal arguments huxreg. Use error_format align(hx) <- \".\". (), is_a_number() pad_decimal() functions. Use map_* functions, ! .na(.numeric(x)), align(ht) <- \".\". Default padding increased 6 points. default, width() now unset. default, wrap() now TRUE. every() renamed stripe(), avoid clash purrr::every(). everywhere, evens odds still . little-used ability set copy_cell_props character vector rbind.huxtable cbind.huxtable removed. can still set FALSE. add_rows() add_columns() now always call rbind.huxtable() cbind.huxtable() return huxtable. Huxtable longer supports dplyr versions less 0.7.0 (released mid-2017). set_cell_properties() renamed style_cells(). retained soft-deprecated alias. Various themes tweaked: theme_basic() now bold headers header column default. theme_plain() defaults position = \"centre\". theme_striped() uses grey stripes, white border, subtler headers. theme_article() thinner borders.","code":"jams %>%     set_right_border(everywhere, 1, 1) %>%     set_left_border(everywhere, 2, 0.4) jams %>%     set_rowspan(2, 1, 3) %>%     set_bottom_border(4, everywhere, 1) ##                 Type              Price ##                 Strawberry         1.90 ##                                    2.10 ##                                    1.80 ##               --------------------------- jams %>%     set_rowspan(2, 1, 3) %>%     set_bottom_border(4, everywhere, 1) ##                 Type           Price ##                 Strawberry      1.90 ##                                 2.10 ##                                 1.80 ##                            ----------- as_hux(head(iris)) %>%       set_bottom_border(1, everywhere) as_hux(jams) %>%       set_bottom_border(1, everywhere, brdr(1, \"dotted\", \"darkgreen\"))"},{"path":"/reference/huxtable-news.html","id":"other-changes-2","dir":"Reference","previous_headings":"","what":"Other changes","title":"Changes to the huxtable package — huxtable-news","text":"can now use markdown within table cells. Use set_markdown(ht, rows, cols) turn . use convenience function set_markdown_contents() set cell contents interpreted markdown. Markdown works HTML LaTeX. ’s basic support -screen display. Huxtable now concept header row columns. default, data frame column names headers. set rows headers, use set_header_rows(ht, row_numbers, TRUE). columns, use header_cols() set_header_cols(). New functions style_headers(), style_header_cols(), style_header_rows() set multiple properties headers. themes, header_row/col = TRUE set first row/col header, style header rows/cols. set_bold() set_italic() now use default value TRUE. can write e.g.   Console output R now shows table position caption position. default, huxtable now sets labels current knitr chunk label, one. consistent kable(). bookdown, can e.g.   Set options(huxtable.autolabel = FALSE) turn behaviour. one-argument form [ now works huxtables just data frames. example, ht[2:3] selects columns 2 3. New functions fmt_percent() fmt_pretty() passing number_format():   split_across() split_down() split huxtable list sub-tables. Headers can automatically included. restack_across() restack_down() split huxtable, join back . useful making table fit page. merge_across() merge_down() merge area cells horizontally across rows, vertically columns. New functions set_lr_borders()/_border_colors()/_border_styles()/_padding() set left right borders padding simultaneously. New functions set_tb_borders() etc. set top bottom properties simultaneously. map_ equivalents . set_outer_padding() sets padding around range cells, similarly set_outer_borders(). new table-level property, caption_width(), allows set width caption. default, NA, sets width equal table width. two new themes: theme_compact() theme_bright(). huxreg(), new function tidy_replace() allows replace output tidy(x) entirely. huxtable now sets options(huxtable.knit_print_df = TRUE) attached, loaded. huxtable supports dplyr::relocate(), new dplyr 1.0.0. Improvements as_flextable(). Improvements quick_pptx() (thanks @davidgohel). Bugfixes options(huxtable.use_fontspec = TRUE). Bugfix: add_rownames = \"string\" now works promised. Bugfix: non-ASCII characters now supported RTF.","code":"as_hux(head(iris)) %>%       set_bold(1, everywhere) Some iris species are shown in \\@ref(tab:mytable):  ```r as_hux(iris) ``` jams$Sugar <-c (\"Sugar content\", 0.4, 0.35, 0.45) set_number_format(jams, -1, \"Sugar\", fmt_percent(1))"},{"path":"/reference/huxtable-news.html","id":"other-news","dir":"Reference","previous_headings":"","what":"Other news","title":"Changes to the huxtable package — huxtable-news","text":"New versions gtsummary package as_huxtable() method. Package texreg CRAN includes huxtablereg() function creating table regression outputs.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--15","dir":"Reference","previous_headings":"","what":"huxtable 4.7.1","title":"Changes to the huxtable package — huxtable-news","text":"expss package now supports export huxtables. by_quantiles(), by_equal_groups() by_colorspace() gained colwise argument, calculates quantiles colors separately column. Add caption support as_flextable() (thanks @sjewo).","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--16","dir":"Reference","previous_headings":"","what":"huxtable 4.7.0","title":"Changes to the huxtable package — huxtable-news","text":"Better error messages. New merge_repeated_rows() function: merge repeated rows single cell. New fill colspan/rowspan arguments insert_row()/insert_column(): insert_row(ht, \"blah\", \"\", \"\", \"\", \"\", ...) can written insert_row(ht, \"blah\", fill = \"\"). colspan/rowspan set colspan/rowspan first cell inserted row/column.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--17","dir":"Reference","previous_headings":"","what":"huxtable 4.6.1","title":"Changes to the huxtable package — huxtable-news","text":"Bugfix: right borders wrong place cells merged. Bugfix: chinese characters displaying wrongly to_screen().","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--18","dir":"Reference","previous_headings":"","what":"huxtable 4.6.0","title":"Changes to the huxtable package — huxtable-news","text":"Set options('huxtable.latex_use_fontspec') TRUE use portable font names TeX documents, LaTeX “fontspec” package. Bugfix: attributes copied wrongly subset assignment huxtables. Bugfix: text colors hux_logo(). Bugfix: rbind huxtable matrix wasn’t setting row_height correctly.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--19","dir":"Reference","previous_headings":"","what":"huxtable 4.5.0","title":"Changes to the huxtable package — huxtable-news","text":"Add quick_latex() function. texreg package now includes huxtablereg function, analogous huxreg, outputs huxtable list regressions. available next version texreg.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--20","dir":"Reference","previous_headings":"","what":"huxtable 4.4.0","title":"Changes to the huxtable package — huxtable-news","text":"Huxtables can now printed directly Word documents Powerpoint presentations, thanks flextable package recent versions Pandoc. (Powerpoint printing requires Pandoc >= 2.4.0.) New “wrapleft” “wrapright” options position() allow text wrapping around tables. New set_outer_border_colors() set_outer_border_styles() functions, like set_outer_borders(). Huxtable longer requires broom package, instead using generics package. use huxreg(), still need e.g. broom broom.mixed provide tidy() glance() methods specific models. Bugfix: tidy.tidy_override() glance.tidy_override() work even underlying object tidy() glance() method. Bugfix: huxtables option clash echo = TRUE Rmd pdf_document format. Bugfix: caption() height() weren’t playing nicely. Bugfix: mutate(..., copy_cell_props = FALSE) adding column named copy_cell_props. Bugfix: check_latex_dependencies install_latex_dependencies gave misleading errors. Enhancement: stars NULL huxreg, don’t print note default. Enhancement: use tinytex available, allowing autoinstallation latex packages.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--21","dir":"Reference","previous_headings":"","what":"huxtable 4.3.0","title":"Changes to the huxtable package — huxtable-news","text":"work TeX. Tables now compile raw_attributes set. New map_xxx functions set properties variably cell values. Functions mapping properties variably: by_rows, by_values, by_ranges, by_quantiles etc. Correct bookdown labels now automatically created. New grey, blue, green orange themes. New “themes” vignette. New tidy_override function override p values etc. huxreg. New set_contents function change huxtable contents within dplyr pipes. Enhancement: left- right-aligned captions now set table LaTeX, using “threeparttable” package. need install using e.g. install_latex_dependencies() tlmgr already system. Enhancement: huxtable() friends, add_rownames = \"Colname\" now sets name new column. Improvements vignettes help files. Bugfix: to_md hang bold/italic cells.","code":""},{"path":"/reference/huxtable-news.html","id":"deprecated","dir":"Reference","previous_headings":"","what":"Deprecated","title":"Changes to the huxtable package — huxtable-news","text":"3 argument form set_xxx functions deprecated, function. Use map_xxx instead. Argument byrow soft-deprecated. Use by_cols() instead.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--22","dir":"Reference","previous_headings":"","what":"huxtable 4.2.1","title":"Changes to the huxtable package — huxtable-news","text":"Bugfix: wrap=TRUE caused squeezed text RTF.","code":""},{"path":"/reference/huxtable-news.html","id":"important","dir":"Reference","previous_headings":"","what":"Important","title":"Changes to the huxtable package — huxtable-news","text":"TeX code getting escaped pandoc. avoid , possible, huxtable now adds fenced code blocks round latex tables (see https://pandoc.org/MANUAL.html#extension-raw_attribute). must add md_extensions: +raw_attribute YAML header work, need recent (> 2.0.0) version Pandoc.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--23","dir":"Reference","previous_headings":"","what":"huxtable 4.2.0","title":"Changes to the huxtable package — huxtable-news","text":"speedups: LaTeX 2-3x faster, as_Workbook 2-3x faster. Simplify LaTeX output using LaTeX commands. RTF support: new print_rtf, to_rtf quick_rtf functions. New border_style properties set “solid”, “double”, “dotted” “dashed” borders. (present, LaTeX allows “solid” “double”.) New merge_cells function, alternative interface colspan rowspan. New quick_pptx function print data frames huxtables Powerpoint. New install_latex_dependencies check_latex_dependencies utility functions. add_rows add_columns now accept data frames arguments. New theme_mondrian theme :-D Enhancement: print_md now handles bold italic cells. Enhancement: quick_pdf new width height options change paper size. Use CSS writing-mode possible text rotation. Note may break non-LTR languages. affects , please file issue. Bugfix: LaTeX didn’t compile height caption set. Bugfix: print_screen print_md hang wide huxtable. Tweaks documentation.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--24","dir":"Reference","previous_headings":"","what":"huxtable 4.1.0","title":"Changes to the huxtable package — huxtable-news","text":"dplyr, knitr, rmarkdown packages moved “Suggests:”, lowering dependency load considerably. functionality still present. huxtable gives informative warning needed package installed. Code rewrites better performance maintainability: HTML 10x faster, LaTeX 4x faster. Documentation improvements. New tribble_hux function wrapping tibble::tribble() readable data input. New add_rows add_columns functions insert one rows middle huxtable. New option “huxtable.knitr_output_format” override default output format knitr documents. Numeric row heights column widths rescaled 1 huxtables cbinded/rbinded. LaTeX: points borders cross, priority given horizontal border color. Bugfix: property accessors wrong environment. Thanks Iñaki Úcar. Bugfix: row heights column widths weren’t copied cbind/rbind. Bugfixes 0-row 0-column huxtables: Output works, usually warning. cbind rbind work. Bugfix: HTML cols printed ‘width: NA’. Bugfix: width, col_width etc. can reset number setting string. (undocumented) ability mix numeric non-numeric values padding /border widths removed. want number, set number string. Bugfix: HTML tables position “right” weren’t right-aligned. Nicer error messages rbinding objects different numbers rows. Vignette improvements. is_a_number deprecated. … cool new randomized hux_logo() ;-)","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--25","dir":"Reference","previous_headings":"","what":"huxtable 4.0.1","title":"Changes to the huxtable package — huxtable-news","text":"Improved formatting Excel output. New format method returns result to_html, to_latex etc. appropriate. Bugfix: to_html printing e.g. “left-border: NA;” cell CSS. Bugfix: set_all_* working huxtable attached. Bugfix: as_Workbook failing non-numeric width. Bugfix: hux_logo using multiple fonts, fails Excel output. Bugfix: as_flextable borders working cells colspan > 1. Documentation bugfixes. Compatibility broom 5.0.0 - thanks @alexpghayes","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--26","dir":"Reference","previous_headings":"","what":"huxtable 4.0.0","title":"Changes to the huxtable package — huxtable-news","text":"New theme_plain theme. default value add_colnames going become TRUE. present remains FALSE. Set options(\"huxtable.add_colnames\") TRUE FALSE set default avoid warnings future. quick_* functions now automatically open documents used interactively. Use open = FALSE avoid. Tweak top bottom margins HTML tables. pad_decimal deprecated favour align(ht) <- \".\". huxreg continues warning statistics unavailable models.","code":""},{"path":"/reference/huxtable-news.html","id":"breaking-changes-3","dir":"Reference","previous_headings":"","what":"Breaking changes","title":"Changes to the huxtable package — huxtable-news","text":"huxtable now provides knit_print.data.frame methods. means bare data frames pretty-printed via huxtable package loaded. Set options(\"huxtable.knit_print_df\") FALSE don’t want . default data frames printed using theme_plain theme. Set options(“huxtable.knit_print_df_theme”) different one-argument function want use different theme. new autoformat argument lets huxtable() as_huxtable() automatically choose alignment number format based column type. Set options(\"huxtable.autoformat\") FALSE turn feature default. default value number_format changed “%5.3g” “%.3g”, longer space-pads numbers. as_flextable now print column names header. matches standard huxtable behaviour whereby headers “just another row/column”. get old behaviour, use colnames_to_header = TRUE.","code":""},{"path":"/reference/huxtable-news.html","id":"bugfixes","dir":"Reference","previous_headings":"","what":"Bugfixes","title":"Changes to the huxtable package — huxtable-news","text":"Bugfix: Date datetime columns converted numbers add_colnames. LaTeX bugfix: background colors printing extra space. huxreg never using built-confidence intervals. Screen bugfixes: set max_width screen width (thanks @jacob-long) misaligned decimal points Various bugfixes number_format, huxreg, as_hux.table, as_flextable.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--27","dir":"Reference","previous_headings":"","what":"huxtable 3.0.0","title":"Changes to the huxtable package — huxtable-news","text":"Output Excel workbooks using openxlsx package. New quick_xlsx function. dplyr select helpers now work inside set_* column specifications: e.g. set_bold(ht, 1:3, matches(“ab”), TRUE) Column names can now used argument insert_column. quick_* functions: file argument explicitly specified, confirm overwrites manually, fail called non-interactively. Add pointless quote marks Description Title… don’t make rules. Don’t apply number_format negative exponents (e.g. 1.12e-3). New tidy_args argument huxreg allows per-model customization call tidy.","code":""},{"path":"/reference/huxtable-news.html","id":"breaking-changes-4","dir":"Reference","previous_headings":"","what":"Breaking changes","title":"Changes to the huxtable package — huxtable-news","text":"quick_xxx functions without explicit file argument throw error called non-interactively, prompt overwriting files called interactively.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--28","dir":"Reference","previous_headings":"","what":"huxtable 2.0.2","title":"Changes to the huxtable package — huxtable-news","text":"Don’t apply number_format exponents scientific notation. Turn tests CRAN, fail elsewhere.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--29","dir":"Reference","previous_headings":"","what":"huxtable 2.0.1","title":"Changes to the huxtable package — huxtable-news","text":"Fix quick_pdf error moving output across filesystems.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--30","dir":"Reference","previous_headings":"","what":"huxtable 2.0.0","title":"Changes to the huxtable package — huxtable-news","text":"New quick_html, quick_pdf quick_docx functions print table-like objects new document. to_screen shows colnames non-zero-length column names.","code":""},{"path":"/reference/huxtable-news.html","id":"breaking-changes-5","dir":"Reference","previous_headings":"","what":"Breaking changes","title":"Changes to the huxtable package — huxtable-news","text":"number_format now applies number-like substrings cells. means can include e.g. significance stars cell still use number_format format content. number_format NA, numbers unchanged. Default value number_format changed “%5.2f” “%5.3g”, plays nicer integers may surprise using scientific format large numbers.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--31","dir":"Reference","previous_headings":"","what":"huxtable 1.2.0","title":"Changes to the huxtable package — huxtable-news","text":"New outer_borders argument huxreg. changes default behaviour slightly. New border argument add_footnote choose width footnote’s top border. Added guard assertions many exported functions. Bugfix: captions colnames wrapped to_screen respect max_width.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--32","dir":"Reference","previous_headings":"","what":"huxtable 1.1.0","title":"Changes to the huxtable package — huxtable-news","text":"ugly autocreated column names. Allow huxtable invalid empty column names general. LaTeX now much faster large tables. set_outer_borders now accepts row/column arguments set_ functions. Better handling LaTeX horizontal borders don’t cross entire table. (varying positive border widths….) Bugfix: flextable didn’t like huxreg’s syntactically invalid column names. Accept, silently change, English spelling ‘centre’ align, position caption_pos.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--33","dir":"Reference","previous_headings":"","what":"huxtable 1.0.0","title":"Changes to the huxtable package — huxtable-news","text":"LaTeX implements different thicknesses vertical horizontal borders (one horizontal thickness per row). LaTeX border colors now collapse nicely: set colors override unset ones. React gracefully lack p values huxreg. New set_outer_borders function set borders round rectangle cells. to_screen to_md now respect wrap col_widths properties. Screen markdown wrap respect word boundaries. to_screen to_md gain min_width argument; to_md gains logical header argument; to_screen gains compact argument replacing blank = NULL. screen colour bold support, crayon package installed. New huxtable.color_screen option. Move ReporteRs officer flextable. RJava horror. New error_format argument huxreg flexible control uncertainty estimates. Infrastructure improvements: slightly less ugly code screen.R LaTeX.R.","code":""},{"path":"/reference/huxtable-news.html","id":"breaking-changes-6","dir":"Reference","previous_headings":"","what":"Breaking changes","title":"Changes to the huxtable package — huxtable-news","text":"Removed options collapse, borders, blank colname_color to_screen/print_screen. as_FlexTable deprecated calls as_flextable warning. header_rows footer_rows arguments ignored. need feature, tell . HTML border sizes now set points, pixels. huxreg: ci_level NULL default. Set number calculate confidence intervals. error_style deprecated warning favour error_format. Use {stars} %stars% display significance levels note argument. borders becomes number specifying border width. Set 0 borders.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--34","dir":"Reference","previous_headings":"","what":"huxtable 0.3.1","title":"Changes to the huxtable package — huxtable-news","text":"New convenience functions insert_row insert_column. latex_float property allows change positioning LaTeX. (Semantic versioning fail: 0.4.0.)","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--35","dir":"Reference","previous_headings":"","what":"huxtable 0.3.0","title":"Changes to the huxtable package — huxtable-news","text":"New borders argument huxreg, gives borders sensible places. Allow flexible caption positioning caption_pos. New set_default_properties function set default properties new huxtables. Fix compatibility dplyr 0.6.0.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--36","dir":"Reference","previous_headings":"","what":"huxtable 0.2.2","title":"Changes to the huxtable package — huxtable-news","text":"Fix bug lead wrong significance stars huxreg.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--37","dir":"Reference","previous_headings":"","what":"huxtable 0.2.1","title":"Changes to the huxtable package — huxtable-news","text":"Compatibility dplyr 0.6.0. Use ~ decimal padding LaTeX.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--38","dir":"Reference","previous_headings":"","what":"huxtable 0.2.0","title":"Changes to the huxtable package — huxtable-news","text":"New huxreg function convert list models huxtable. New set_* interface allowing column ranges, expressions la subset, filling values row. Replacement methods $<-, [<- [[<- now work better. New function set_cell_properties set multiple properties cells. evens, odds, everywhere, every(n, ), final(n), (cond): convenience functions select rows, columns cells. Export Word/Powerpoint via ReporteRs. Huxtable now supports dplyr verbs like filter select. Exported function guess_knitr_output_format. Ability set border colors. Prevent overlapping row/colspans. Expanded introduction new vignette huxreg. Numerous bugs fixed replaced new, advanced bugs.","code":""},{"path":"/reference/huxtable-news.html","id":"breaking-changes-7","dir":"Reference","previous_headings":"","what":"Breaking changes","title":"Changes to the huxtable package — huxtable-news","text":"theme_minimal renamed theme_basic avoid name clash ggplot2.","code":""},{"path":"/reference/huxtable-news.html","id":"huxtable--39","dir":"Reference","previous_headings":"","what":"huxtable 0.1.0","title":"Changes to the huxtable package — huxtable-news","text":"Added NEWS.md file track changes package. First CRAN release.","code":""},{"path":[]},{"path":"/reference/huxtable-news.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Changes to the huxtable package — huxtable-news","text":"Maintainer: David Hugh-Jones davidhughjones@gmail.com","code":""},{"path":"/reference/huxtable-options.html","id":null,"dir":"Reference","previous_headings":"","what":"Package options — huxtable-options","title":"Package options — huxtable-options","text":"Huxtable several options.","code":""},{"path":"/reference/huxtable-options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package options — huxtable-options","text":"options(\"huxtable.add_colnames\") sets default value add_colnames huxtable() as_huxtable(). version 5.0.0, defaults TRUE. options(\"huxtable.print\") sets print method huxtable objects. See print.huxtable(). options(\"huxtable.knitr_output_format\") overrides default output format huxtable objects printed knitr. Set \"html\", \"latex\", \"md\" \"screen\". NULL (default), huxtable guesses format using guess_knitr_output_format(). options(\"huxtable.autolabel\"). TRUE, (default) automatically sets label() knitr chunk label, one. options(\"huxtable.color_screen\"). TRUE package crayon available, huxtables printed color screen. options(\"huxtable.bookdown\"). Set TRUE within bookdown document automatically print bookdown-style labels. unset, huxtable try guess bookdown document. options(\"huxtable.knit_print_df\"). TRUE, data frames knitr pretty-printed using huxtable. option defaults TRUE huxtable attached search path using library(); huxtable merely loaded (e.g. imported another package). options(\"huxtable.knit_print_df_theme\"). function applied data frames printing knitr. function take one argument (data frame) return huxtable. Defaults theme_plain(). options(\"huxtable.autoformat\") sets default value autoformat huxtable() as_huxtable(). defaults TRUE. options(\"huxtable.latex_use_fontspec\"). TRUE, use \"fontspec\" package, allows use font names TeX HTML. requires xetex xelatex engine, can set using .rmd header option. Note quick_pdf() may use pdflatex. default FALSE. options(\"huxtable.long_minus\"). TRUE, prints long minus signs numbers. default FALSE. LaTeX output, option overridden options(\"huxtable.latex_siunitx_align\"). options(\"huxtable.latex_siunitx_align\"). TRUE, uses \\tablenum macro \"siunitx\" package align numbers align(ht) \".\" similar. See align() details. default FALSE. options(\"huxtable.quarto_process\"). TRUE, enables quarto processing HTML tables. overrides huxtable styles, may allow quarto things, e.g. process citations correctly. default FALSE. options(\"huxtable.autoformat_number_format\") options(\"huxtable.autoformat_align\") lists. list names base R classes. huxtable() autoformat = TRUE set number_format() align() data columns according corresponding list values. example, center-align Date objects set \"huxtable.autoformat_align\" something like list(..., Date = \"center\", ...).","code":""},{"path":[]},{"path":"/reference/huxtable-options.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package options — huxtable-options","text":"Maintainer: David Hugh-Jones davidhughjones@gmail.com","code":""},{"path":"/reference/huxtable-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick introduction to huxtable — huxtable-package","title":"Quick introduction to huxtable — huxtable-package","text":"Huxtable package creating HTML LaTeX tables. provides similar functionality xtable, simpler interface.","code":""},{"path":"/reference/huxtable-package.html","id":"quick-start","dir":"Reference","previous_headings":"","what":"Quick start","title":"Quick introduction to huxtable — huxtable-package","text":"create huxtable object, use huxtable() as_huxtable():   can set properties affect huxtable displayed:   can use tidyverse style pipe operator:   information, see website read vignette vignette(\"huxtable\"). See huxtable-FAQ frequently asked questions, including ways get help. report bug, suggest enhancement, visit github.","code":"library(huxtable)  employees <- huxtable(          Names    = c(\"Hadley\", \"Yihui\", \"Dirk\"),          Salaries = c(1e5, 1e5, 1e5),          add_colnames = TRUE        )  car_hux <- as_hux(mtcars) # make the first row bold:  bold(employees)[1, ] <- TRUE   # change the font size everywhere:  font_size(employees) <- 10 library(magrittr) employees <- employees %>%       set_font_size(10) %>%       set_bold(1, everywhere, TRUE)"},{"path":[]},{"path":"/reference/huxtable-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quick introduction to huxtable — huxtable-package","text":"Maintainer: David Hugh-Jones davidhughjones@gmail.com","code":""},{"path":"/reference/huxtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a huxtable — huxtable","title":"Create a huxtable — huxtable","text":"huxtable, hux, creates huxtable object.","code":""},{"path":"/reference/huxtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a huxtable — huxtable","text":"","code":"huxtable(   ...,   add_colnames = getOption(\"huxtable.add_colnames\", TRUE),   add_rownames = FALSE,   autoformat = getOption(\"huxtable.autoformat\", TRUE) )  hux(   ...,   add_colnames = getOption(\"huxtable.add_colnames\", TRUE),   add_rownames = FALSE,   autoformat = getOption(\"huxtable.autoformat\", TRUE) )  tribble_hux(   ...,   add_colnames = getOption(\"huxtable.add_colnames\", TRUE),   autoformat = getOption(\"huxtable.autoformat\", TRUE) )"},{"path":"/reference/huxtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a huxtable — huxtable","text":"... huxtable, named list values data.frame(). tribble_hux, data values tibble::tribble(). add_colnames TRUE, add first row column names huxtable. add_rownames TRUE character string, add first column row names huxtable. string gives name new column (\"rownames\" TRUE). autoformat TRUE, automatically format columns type. See .","code":""},{"path":"/reference/huxtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a huxtable — huxtable","text":"object class huxtable.","code":""},{"path":"/reference/huxtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a huxtable — huxtable","text":"use add_colnames add_rownames, aware shift rows columns along one: old row/column 1 now row/column 2, etc. add_colnames defaults TRUE. can set default globally setting options(\"huxtable.add_colnames\") TRUE FALSE. tribble_hux simple wrapper around tibble::tribble() lets create data readable format. requires \"tibble\" package installed.","code":""},{"path":"/reference/huxtable.html","id":"automatic-formatting","dir":"Reference","previous_headings":"","what":"Automatic formatting","title":"Create a huxtable — huxtable","text":"autoformat TRUE, columns number_format() align() properties set automatically, follows: Integer columns number_format set 0. numeric columns number_format set \"%.3g\". columns number_format set NA (formatting). Integer, Date date-time (.e. POSIXct POSIXlt) columns right-aligned. numeric columns aligned options(\"OutDec\"), usually \".\". columns left aligned. can change defaults editing options(\"huxtable.autoformat_number_format\") options(\"huxtable.autoformat_align\"). See huxtable-package details. Automatic alignment also applies column headers add_colnames TRUE; headers columns aligned decimal point right-aligned. Automatic number formatting apply column headers.","code":""},{"path":[]},{"path":"/reference/huxtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a huxtable — huxtable","text":"","code":"ht <- huxtable(   column1 = 1:5,   column2 = letters[1:5] ) ht #>                                column1   column2   #>                                      1   a         #>                                      2   b         #>                                      3   c         #>                                      4   d         #>                                      5   e         #>  #> Column names: column1, column2 tribble_hux(   ~Name, ~Salary,   \"John Smith\", 50000,   \"Jane Doe\", 50000,   \"David Hugh-Jones\", 50000,   add_colnames = TRUE ) #>                            Name                Salary   #>                            John Smith           5e+04   #>                            Jane Doe             5e+04   #>                            David Hugh-Jones     5e+04   #>  #> Column names: Name, Salary"},{"path":"/reference/insert_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert a row or column — insert_column","title":"Insert a row or column — insert_column","text":"convenience functions wrap cbind rbind huxtables, insert single row column.","code":""},{"path":"/reference/insert_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert a row or column — insert_column","text":"","code":"insert_column(   ht,   ...,   after = 0,   fill = NULL,   rowspan = 1,   copy_cell_props = TRUE )  insert_row(   ht,   ...,   after = 0,   fill = NULL,   colspan = 1,   copy_cell_props = TRUE )"},{"path":"/reference/insert_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert a row or column — insert_column","text":"ht huxtable. ... Cell contents. Insert row/column position. 0 (default) inserts first row/column. fill String. ... contains fewer elements columns/rows fill, remaining cells filled . rowspan, colspan Scalar integer. Sets rowspan colspan first cell . default NULL throws error elements. copy_cell_props Copy cell properties previous row column (> 0). See cbind.huxtable().","code":""},{"path":"/reference/insert_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert a row or column — insert_column","text":"modified huxtable","code":""},{"path":"/reference/insert_column.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Insert a row or column — insert_column","text":"insert_column , can use column name . Even colspan rowspan greater 1, must still provide values hidden cells. Use fill = \"\" .","code":""},{"path":[]},{"path":"/reference/insert_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert a row or column — insert_column","text":"","code":"insert_row(jams,   c(\"Gooseberry\", 2.15),   after = 1 ) #>                               Type           Price   #>                               Gooseberry      2.15   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price  insert_column(jams,   c(\"Sugar\", \"50%\", \"60%\", \"40%\"),   after = \"Price\" ) #>                           Type         Price    Sugar   #>                           Strawberry    1.90   50.00%   #>                           Raspberry     2.10   60.00%   #>                           Plum          1.80   40.00%   #>  #> Column names: Type, Price,  insert_column(jams,   \"Sugar\",   after = \"Price\",   fill = \"50%\" ) #>                           Type         Price    Sugar   #>                           Strawberry    1.90   50.00%   #>                           Raspberry     2.10   50.00%   #>                           Plum          1.80   50.00%   #>  #> Column names: Type, Price,  # don't forget to use `fill`: insert_row(jams,   \"Jams and prices\",   fill = \"\",   colspan = 2 ) #>                               Jams and prices        #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/jams.html","id":null,"dir":"Reference","previous_headings":"","what":"Prices of 3 jams — jams","title":"Prices of 3 jams — jams","text":"huxtable jams.","code":""},{"path":"/reference/jams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prices of 3 jams — jams","text":"","code":"jams"},{"path":"/reference/jams.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prices of 3 jams — jams","text":"huxtable 4 rows 2 columns (\"Type\" \"Price\").","code":""},{"path":"/reference/knit_print.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Print data frames in knitr using huxtable — knit_print.data.frame","title":"Print data frames in knitr using huxtable — knit_print.data.frame","text":"Print data frames knitr using huxtable","code":""},{"path":"/reference/knit_print.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print data frames in knitr using huxtable — knit_print.data.frame","text":"","code":"knit_print.data.frame(x, options, ...)"},{"path":"/reference/knit_print.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print data frames in knitr using huxtable — knit_print.data.frame","text":"x huxtable. options used. ... used.","code":""},{"path":"/reference/knit_print.data.frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print data frames in knitr using huxtable — knit_print.data.frame","text":"huxtable defines knit_print method data.frames. converts data frame huxtable, add_colnames = TRUE, themes using theme_plain() prints . also tries set intelligent defaults, e.g. wrapping long columns setting appropriate width. turn behaviour , set options(huxtable.knit_print_df = FALSE). change theme, set options(\"huxtable.knit_print_df_theme\") one-argument function return huxtable.","code":""},{"path":[]},{"path":"/reference/knit_print.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print data frames in knitr using huxtable — knit_print.data.frame","text":"","code":"if (FALSE) { # \\dontrun{ # in your knitr document mytheme <- function(ht) {   ht <- set_all_borders(ht, 0.4)   ht <- set_all_border_colors(     ht,     \"darkgreen\"   )   ht <- set_background_color(     ht,     evens, odds, \"salmon\"   )   ht }  options(   huxtable.knit_print_df_theme = mytheme ) # groovy! data.frame(   a = 1:5,   b = 1:5 ) } # }"},{"path":"/reference/knit_print.huxtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a huxtable within knitr — knit_print.huxtable","title":"Print a huxtable within knitr — knit_print.huxtable","text":"Print huxtable within knitr","code":""},{"path":"/reference/knit_print.huxtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a huxtable within knitr — knit_print.huxtable","text":"","code":"knit_print.huxtable(x, options, ...)"},{"path":"/reference/knit_print.huxtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a huxtable within knitr — knit_print.huxtable","text":"x huxtable. options used. ... used.","code":""},{"path":"/reference/knit_print.huxtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a huxtable within knitr — knit_print.huxtable","text":"knitr calls knitr::knit_print() objects printed knitr (RMarkdown) document. method huxtable objects guesses appropriate output format (including Typst documents using typst package) prints appropriately. can override output format setting options(\"huxtable.knitr_output_format\").","code":""},{"path":[]},{"path":"/reference/label.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a table label for external referencing — label","title":"Set a table label for external referencing — label","text":"label used table's label LaTeX, \"id\" property table element HTML.","code":""},{"path":"/reference/label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a table label for external referencing — label","text":"","code":"label(ht)  label(ht) <- value  set_label(ht, value)"},{"path":"/reference/label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a table label for external referencing — label","text":"ht huxtable. value string. Set NA reset default, NA_character_.","code":""},{"path":"/reference/label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a table label for external referencing — label","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":"/reference/label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set a table label for external referencing — label","text":"LaTeX table labels typically start \"tab:\". Within knitr, huxtable labels default knitr chunk label. turn behaviour, set options(huxtable.autolabel = FALSE). use bookdown, set label table, table caption() automatically prefixed (#label). can refer table using @ref(label). label needs start \"tab:\"; , \"tab:\" prefix added automatically. turn behaviour, set options(huxtable.bookdown = FALSE).","code":""},{"path":[]},{"path":"/reference/label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a table label for external referencing — label","text":"","code":"set_label(jams, \"tab:mytable\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/latex_float.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the position of the table float in LaTeX — latex_float","title":"Set the position of the table float in LaTeX — latex_float","text":"Possible values include: \"h\": \"h!\" definitely \"t\" top page \"ht\" top page \"b\" bottom page \"p\" page floats","code":""},{"path":"/reference/latex_float.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the position of the table float in LaTeX — latex_float","text":"","code":"latex_float(ht)  latex_float(ht) <- value  set_latex_float(ht, value)"},{"path":"/reference/latex_float.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the position of the table float in LaTeX — latex_float","text":"ht huxtable. value string. Set NA reset default, \"ht\".","code":""},{"path":"/reference/latex_float.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the position of the table float in LaTeX — latex_float","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":"/reference/latex_float.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the position of the table float in LaTeX — latex_float","text":"See LaTeX documentation details.","code":""},{"path":"/reference/latex_float.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the position of the table float in LaTeX — latex_float","text":"","code":"set_latex_float(jams, \"b\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/mapping-functions.html","id":null,"dir":"Reference","previous_headings":"","what":"How to set cell properties variably by cell contents — mapping-functions","title":"How to set cell properties variably by cell contents — mapping-functions","text":"help page explains set properties differently cells, depending contents. example, table p-values, bold cells p < 0.05:   can use red text particular value:   map_... function huxtable cell property. syntax :   property property name. row col specify ranges rows columns. See rowspecs details. set properties whole table, omit row col:   fn argument mapping function maps cell contents property values. set property values \"stripes\" rows columns, use by_rows() by_cols(). set property values cells specific contents, use by_values(). set property values cells within numeric range, use by_ranges(). set property values cells quantiles, use by_quantiles() by_equal_groups(). set property values cells match string regular expression, use by_regex(). map numeric values colorspace, use by_colorspace(). general solution, use by_function() by_cases().","code":"map_bold(pval_hux, by_ranges(0.05, c(TRUE, FALSE))) hxtbl %>% map_text_color(by_values(\"Warning\" = \"red\")) map_property(ht, row, col, fn) map_property(ht, fn)"},{"path":"/reference/mapping-functions.html","id":"caveat","dir":"Reference","previous_headings":"","what":"Caveat","title":"How to set cell properties variably by cell contents — mapping-functions","text":"functions convert huxtable matrix using .matrix(). can unexpected results mix character numeric data. See example.","code":""},{"path":"/reference/mapping-functions.html","id":"technical-details","dir":"Reference","previous_headings":"","what":"Technical details","title":"How to set cell properties variably by cell contents — mapping-functions","text":"fn takes four arguments: entire original huxtable ht, numeric vector rows, numeric vector cols, current property values ht[rows, cols], matrix. return new property values ht[rows, cols], matrix.","code":""},{"path":"/reference/mapping-functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"How to set cell properties variably by cell contents — mapping-functions","text":"","code":"ht <- hux(Condition = c(\"OK\", \"Warning\", \"Error\")) ht <- map_text_color(ht, by_values(   OK      = \"green\",   Warning = \"orange\",   Error   = \"red\" )) ht #>                                  Condition        #>                                  OK               #>                                  Warning          #>                                  Error            #>  #> Column names: Condition  # Leaving NA values alone: map_text_color(ht, by_values(   \"OK\" = \"blue\", NA, ignore_na = TRUE )) #>                                  Condition        #>                                  OK               #>                                  Warning          #>                                  Error            #>  #> Column names: Condition  # Resetting values: map_text_color(ht, by_values(   \"OK\" = \"blue\", NA, ignore_na = FALSE )) #>                                  Condition        #>                                  OK               #>                                  Warning          #>                                  Error            #>  #> Column names: Condition  ht <- as_hux(matrix(rnorm(15), 5, 3)) map_background_color(ht, by_ranges(   c(-1, 1),   c(\"blue\", \"yellow\", \"red\") )) #>                             -1.06    -0.537    0.259   #>                             -0.796    0.227   -0.442   #>                             -1.76     0.978    0.569   #>                             -0.691   -0.209    2.13    #>                             -0.559   -1.4      0.425   #>  #> Column names: V1, V2, V3 map_background_color(   ht,   by_equal_groups(2, c(\"red\", \"green\")) ) #>                             -1.06    -0.537    0.259   #>                             -0.796    0.227   -0.442   #>                             -1.76     0.978    0.569   #>                             -0.691   -0.209    2.13    #>                             -0.559   -1.4      0.425   #>  #> Column names: V1, V2, V3  ht <- hux(   Coef = c(3.5, 2.4, 1.3),   Pval = c(0.04, 0.01, 0.07),   add_colnames = TRUE ) map_bold(   ht, everywhere, \"Pval\",   by_ranges(0.05, c(TRUE, FALSE)) ) #>                                   Coef      Pval   #>                                    3.5      0.04   #>                                    2.4      0.01   #>                                    1.3      0.07   #>  #> Column names: Coef, Pval  # Problems with as.matrix:  ht <- hux(c(-1, 1, 2), letters[1:3]) as.matrix(ht) # look at the spaces... #>               #> [1,] \"-1\" \"a\" #> [2,] \" 1\" \"b\" #> [3,] \" 2\" \"c\" as.matrix(ht) > 0 # uh oh #>                 #> [1,] FALSE TRUE #> [2,] FALSE TRUE #> [3,] FALSE TRUE map_text_color(   ht,   by_cases(. < 0 ~ \"red\", TRUE ~ \"blue\") ) #>                                     -1   a         #>                                      1   b         #>                                      2   c          # To avoid this, only look at the truly numeric columns: map_text_color(ht,   row = 1:3, col = 1,   by_cases(. < 0 ~ \"red\", TRUE ~ \"blue\") ) #>                                     -1   a         #>                                      1   b         #>                                      2   c"},{"path":"/reference/mapping-params.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapping parameters — mapping-params","title":"Mapping parameters — mapping-params","text":"Mapping parameters","code":""},{"path":"/reference/mapping-params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mapping parameters — mapping-params","text":"values vector property values. length(values) one greater length(breaks) extend = TRUE, one less extend = FALSE. right TRUE, intervals closed right, .e. values exactly equal break, go lower group. Otherwise, intervals closed left, equal values go higher group. FALSE default. extend Extend breaks c(-Inf, breaks, Inf), .e. include numbers outermost breaks. TRUE default. ignore_na TRUE, NA values result left unchanged previous values. Otherwise, NA normally resets default. colwise Logical. Calculate breaks separately within column?","code":""},{"path":"/reference/markdown-note.html","id":null,"dir":"Reference","previous_headings":"","what":"Note about markdown vs. print_md() — markdown-note","title":"Note about markdown vs. print_md() — markdown-note","text":"Note markdown vs. print_md()","code":""},{"path":"/reference/markdown-note.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Note about markdown vs. print_md() — markdown-note","text":"Markdown content cells completely separate printing whole table markdown using print_md(). set markdown TRUE, huxtable interprets cell contents markdown, spits HTML, TeX whatever.","code":""},{"path":"/reference/markdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret cell content as markdown — markdown","title":"Interpret cell content as markdown — markdown","text":"Cells markdown property TRUE interpreted markdown.","code":""},{"path":"/reference/markdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret cell content as markdown — markdown","text":"","code":"markdown(ht)  markdown(ht) <- value  set_markdown(ht, row, col, value = TRUE)  map_markdown(ht, row, col, fn)"},{"path":"/reference/markdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret cell content as markdown — markdown","text":"ht huxtable. value logical vector matrix. Set NA reset default, FALSE. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/markdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpret cell content as markdown — markdown","text":"Markdown currently implemented HTML, Word, Powerpoint, RTF, LaTeX -screen display. Word requires ftExtra package. formats use commonmark, \"strikethrough\" extension enabled. following features intended work: bold italic text strikethrough (write ~~text~~ strike text). hyperlinks quirks: Paragraph-level properties (e.g. lists) work Word. Strikethrough probably work Word. make lists work LaTeX, set width() ensure wrap() TRUE. Inline images RTF work using INCLUDEPICTURE field type. local images (urls) work typst. try use markdown tables within table cell, seek psychiatric help.","code":""},{"path":"/reference/markdown.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Interpret cell content as markdown — markdown","text":"Markdown content cells completely separate printing whole table markdown using print_md(). set markdown TRUE, huxtable interprets cell contents markdown, spits HTML, TeX whatever.","code":""},{"path":[]},{"path":"/reference/markdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret cell content as markdown — markdown","text":"","code":"jams[3, 2] <- \"~2.10~ **Sale!** 1.50\" set_markdown(jams, 3, 2) #>                          Type                     Price   #>                          Strawberry                1.90   #>                          Raspberry    ~2.10~ Sale! 1.50   #>                                                           #>                          Plum                      1.80   #>  #> Column names: Type, Price"},{"path":"/reference/merge_across.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge cells across rows or down columns — merge_across","title":"Merge cells across rows or down columns — merge_across","text":"merge_across() creates multicolumn cells within row. merge_down() creates multirow cells within column.","code":""},{"path":"/reference/merge_across.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge cells across rows or down columns — merge_across","text":"","code":"merge_across(ht, row, col)  merge_down(ht, row, col)"},{"path":"/reference/merge_across.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge cells across rows or down columns — merge_across","text":"ht huxtable. row row specifier. See rowspecs details. col optional column specifier.","code":""},{"path":"/reference/merge_across.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge cells across rows or down columns — merge_across","text":"ht object.","code":""},{"path":"/reference/merge_across.html","id":"cell-content","dir":"Reference","previous_headings":"","what":"Cell content","title":"Merge cells across rows or down columns — merge_across","text":"merged cell ranges, top left cell's content displayed. addition, merge cells (either setting colspan() rowspan(), using merge_cells() friends) content top left cell copied cells. prevents unexpected changes content reorder subset rows columns.","code":""},{"path":[]},{"path":"/reference/merge_across.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge cells across rows or down columns — merge_across","text":"","code":"ht <- as_hux(matrix(1:12, 4, 3, byrow = TRUE)) ht <- set_all_borders(ht, 1) merge_across(ht, 2:4, 2:3) #>                            ┌───────┬───────┬───────┐ #>                            │     1 │     2 │     3 │ #>                            ├───────┼───────┴───────┤ #>                            │     4 │          5    │ #>                            ├───────┼───────────────┤ #>                            │     7 │          8    │ #>                            ├───────┼───────────────┤ #>                            │    10 │         11    │ #>                            └───────┴───────────────┘ #>  #> Column names: V1, V2, V3 merge_down(ht, 2:4, 2:3) #>                            ┌───────┬───────┬───────┐ #>                            │     1 │     2 │     3 │ #>                            ├───────┼───────┼───────┤ #>                            │     4 │     5 │     6 │ #>                            ├───────┤       │       │ #>                            │     7 │       │       │ #>                            ├───────┤       │       │ #>                            │    10 │       │       │ #>                            └───────┴───────┴───────┘ #>  #> Column names: V1, V2, V3"},{"path":"/reference/merge_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge a range of cells — merge_cells","title":"Merge a range of cells — merge_cells","text":"merge_cells() merges rectangle cells single displayed cell, setting colspan() rowspan().","code":""},{"path":"/reference/merge_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge a range of cells — merge_cells","text":"","code":"merge_cells(ht, row, col)"},{"path":"/reference/merge_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge a range of cells — merge_cells","text":"ht huxtable. row row specifier. See rowspecs details. col optional column specifier.","code":""},{"path":"/reference/merge_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge a range of cells — merge_cells","text":"ht object.","code":""},{"path":"/reference/merge_cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge a range of cells — merge_cells","text":"merge_cells(ht, c(min_row, max_row), c(min_col, max_col)) equivalent ","code":"colspan(ht)[min_row, min_col] <- max_col - min_col + 1   rowspan(ht)[min_row, min_col] <- max_row - min_row + 1"},{"path":"/reference/merge_cells.html","id":"cell-content","dir":"Reference","previous_headings":"","what":"Cell content","title":"Merge a range of cells — merge_cells","text":"merged cell ranges, top left cell's content displayed. addition, merge cells (either setting colspan() rowspan(), using merge_cells() friends) content top left cell copied cells. prevents unexpected changes content reorder subset rows columns.","code":""},{"path":[]},{"path":"/reference/merge_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge a range of cells — merge_cells","text":"","code":"ht <- hux(a = 1:3, b = 1:3) ht <- set_all_borders(ht, 1) merge_cells(ht, 2:3, 1:2) #>                              ┌─────────┬─────────┐ #>                              │       a │       b │ #>                              ├─────────┴─────────┤ #>                              │              1    │ #>                              │                   │ #>                              ├─────────┬─────────┤ #>                              │       3 │       3 │ #>                              └─────────┴─────────┘ #>  #> Column names: a, b"},{"path":"/reference/merge_repeated_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge repeated rows into multirow cells — merge_repeated_rows","title":"Merge repeated rows into multirow cells — merge_repeated_rows","text":"merge_repeated_rows() looks within column contiguous groups identical cells. merged setting rowspan(). helps remove redundant information table.","code":""},{"path":"/reference/merge_repeated_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge repeated rows into multirow cells — merge_repeated_rows","text":"","code":"merge_repeated_rows(ht, row, col)"},{"path":"/reference/merge_repeated_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge repeated rows into multirow cells — merge_repeated_rows","text":"ht huxtable. row row specifier. See rowspecs details. col optional column specifier.","code":""},{"path":"/reference/merge_repeated_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge repeated rows into multirow cells — merge_repeated_rows","text":"ht object.","code":""},{"path":"/reference/merge_repeated_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge repeated rows into multirow cells — merge_repeated_rows","text":"row contains gaps, results may unexpected (warning given).","code":""},{"path":"/reference/merge_repeated_rows.html","id":"cell-content","dir":"Reference","previous_headings":"","what":"Cell content","title":"Merge repeated rows into multirow cells — merge_repeated_rows","text":"merged cell ranges, top left cell's content displayed. addition, merge cells (either setting colspan() rowspan(), using merge_cells() friends) content top left cell copied cells. prevents unexpected changes content reorder subset rows columns.","code":""},{"path":[]},{"path":"/reference/merge_repeated_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge repeated rows into multirow cells — merge_repeated_rows","text":"","code":"ht <- as_hux(jams[c(1, 2, 2, 3, 3, 4), ]) ht <- add_columns(ht, c(\"Sugar\", \"30%\", \"40%\", \"30%\", \"40%\", \"30%\"),   after = 1 ) ht #>                            Type         Sugar   Price   #>                            Strawberry   30%      1.90   #>                            Strawberry   40%      1.90   #>                            Raspberry    30%      2.10   #>                            Raspberry    40%      2.10   #>                            Plum         30%      1.80   #>  #> Column names: Type, , Price merge_repeated_rows(ht) #>                            Type         Sugar   Price   #>                            Strawberry   30%      1.90   #>                                         40%             #>                            Raspberry    30%      2.10   #>                                         40%             #>                            Plum         30%      1.80   #>  #> Column names: Type, , Price merge_repeated_rows(ht, everywhere, \"Type\") #>                            Type         Sugar   Price   #>                            Strawberry   30%      1.90   #>                                         40%      1.90   #>                            Raspberry    30%      2.10   #>                                         40%      2.10   #>                            Plum         30%      1.80   #>  #> Column names: Type, , Price"},{"path":"/reference/na_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Change how NA values are printed — na_string","title":"Change how NA values are printed — na_string","text":"NA values huxtable printed value na_string.","code":""},{"path":"/reference/na_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change how NA values are printed — na_string","text":"","code":"na_string(ht)  na_string(ht) <- value  set_na_string(ht, row, col, value)  map_na_string(ht, row, col, fn)"},{"path":"/reference/na_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change how NA values are printed — na_string","text":"ht huxtable. value character vector matrix. Set NA reset default, \"\". row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":[]},{"path":"/reference/na_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change how NA values are printed — na_string","text":"","code":"jams[3, 2] <- NA jams #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry              #>                               Plum            1.80   #>  #> Column names: Type, Price set_na_string(jams, \"---\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry     ---      #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/number_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Set how numbers are formatted in cells — number_format","title":"Set how numbers are formatted in cells — number_format","text":"number_format : numeric, numbers rounded many decimal places; character, used argument sprintf(); function, function applied numbers; NA, numbers formatted (except conversion .character).","code":""},{"path":"/reference/number_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set how numbers are formatted in cells — number_format","text":"","code":"number_format(ht)  number_format(ht) <- value  set_number_format(ht, row, col, value)  map_number_format(ht, row, col, fn)"},{"path":"/reference/number_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set how numbers are formatted in cells — number_format","text":"ht huxtable. value character integer vector, list containing function, NA. Note setting NA reset default. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/number_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set how numbers are formatted in cells — number_format","text":"Number formatting applied parts cells look like numbers. exception exponents scientific notation; huxtable attempts detect ignore . default value \"%.3g\", rounds numbers 3 significant digits, may use scientific notation large numbers. Note cells type numeric, number format NA guarantee get back typed , since R's default conversion may apply scientific notation rounding. set number_format function, enclose function list. function take one argument return string. fmt_pretty() fmt_percent() useful shortcuts common formatting functions.","code":""},{"path":[]},{"path":"/reference/number_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set how numbers are formatted in cells — number_format","text":"","code":"ht <- huxtable(   number_format = c(     \"Default\",     \"NA\",     \"2\",     \"\\\"%5.2f\\\"\",     \"Pretty\",     \"Sign\"   ),   a = rep(1000, 6),   b = rep(1000.005, 6),   c = rep(0.0001, 6),   d = rep(-1, 6),   e = rep(\"3.2 (s.e. 1.4)\", 6) )  number_format(ht)[3, -1] <- NA number_format(ht)[4, -1] <- 2 number_format(ht)[5, -1] <- \"%5.2f\"  number_format(ht)[6, -1] <- fmt_pretty()  number_format(ht)[7, -1] <- list(   function(x) if (x > 0) \"+\" else \"-\" )  right_border(ht) <- 1 bottom_border(ht)[1, ] <- 1  ht #>       number_for │        a │         b │          c │     d │ e          │ #>       mat        │          │           │            │       │            │ #>     ─────────────┼──────────┼───────────┼────────────┼───────┼────────────┤ #>       Default    │ 1e+03    │ 1e+03     │     0.0001 │ -1    │ 3.2 (s.e.  │ #>                  │          │           │            │       │ 1.4)       │ #>       NA         │  1000    │  1000.005 │ 1e-04      │ -1    │ 3.2 (s.e.  │ #>                  │          │           │            │       │ 1.4)       │ #>       2          │  1000.00 │  1000.00  │     0.00   │ -1.00 │ 3.20 (s.e. │ #>                  │          │           │            │       │ 1.40)      │ #>       \"%5.2f\"    │  1000.00 │  1000.00  │     0.00   │ -1.00 │ 3.20 (s.e. │ #>                  │          │           │            │       │ 1.40)      │ #>       Pretty     │ 1,000    │ 1,000.005 │     0.0001 │ -1    │ 3.2 (s.e.  │ #>                  │          │           │            │       │ 1.4)       │ #>       Sign       │     +    │     +     │     +      │  -    │ + (s.e. +) │ #>  #> Column names: number_format, a, b, c, d, e  ht_bands <- huxtable(\"10000 Maniacs\", autoformat = FALSE) # probably not what you want: ht_bands #>                                  1e+04 Maniacs    # fixed: set_number_format(ht_bands, NA) #>                                  10000 Maniacs"},{"path":"/reference/padding.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell padding — padding","title":"Cell padding — padding","text":"Functions get set space around cell borders. Top, bottom, left right padding default 6 points.","code":""},{"path":"/reference/padding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell padding — padding","text":"","code":"left_padding(ht)  left_padding(ht) <- value  set_left_padding(ht, row, col, value)  map_left_padding(ht, row, col, fn)  right_padding(ht)  right_padding(ht) <- value  set_right_padding(ht, row, col, value)  map_right_padding(ht, row, col, fn)  top_padding(ht)  top_padding(ht) <- value  set_top_padding(ht, row, col, value)  map_top_padding(ht, row, col, fn)  bottom_padding(ht)  bottom_padding(ht) <- value  set_bottom_padding(ht, row, col, value)  map_bottom_padding(ht, row, col, fn)"},{"path":"/reference/padding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell padding — padding","text":"ht huxtable. value Numeric: padding width/height points. Set NA reset default, 6. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":[]},{"path":"/reference/padding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell padding — padding","text":"","code":"left_padding(jams) <- 2 left_padding(jams) #>     Type Price #> 1      2     2 #> 1.1    2     2 #> 2      2     2 #> 3      2     2  jams <- set_left_padding(jams, 2) left_padding(jams) #>     Type Price #> 1      2     2 #> 1.1    2     2 #> 2      2     2 #> 3      2     2"},{"path":"/reference/position.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the table's position with respect to surrounding content — position","title":"Set the table's position with respect to surrounding content — position","text":"Table position may \"left\", \"right\" \"center\". want text wrap around table, use \"wrapleft\" \"wrapright\".","code":""},{"path":"/reference/position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the table's position with respect to surrounding content — position","text":"","code":"position(ht)  position(ht) <- value  set_position(ht, value)"},{"path":"/reference/position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the table's position with respect to surrounding content — position","text":"ht huxtable. value String. \"left\", \"center\", \"right\", \"wrapleft\" \"wrapright\". Set NA reset default, \"center\".","code":""},{"path":"/reference/position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the table's position with respect to surrounding content — position","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":"/reference/position.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the table's position with respect to surrounding content — position","text":"\"wrapleft\" \"wrapright\" position table left right, allow text wrap around table.","code":""},{"path":"/reference/position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the table's position with respect to surrounding content — position","text":"","code":"set_position(jams, \"left\") #>   Type           Price   #>   Strawberry      1.90   #>   Raspberry       2.10   #>   Plum            1.80   #>  #> Column names: Type, Price set_position(jams, \"right\") #>                                                           Type           Price   #>                                                           Strawberry      1.90   #>                                                           Raspberry       2.10   #>                                                           Plum            1.80   #>  #> Column names: Type, Price set_position(jams, \"center\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/print.huxtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Format and print huxtables using a default method — print.huxtable","title":"Format and print huxtables using a default method — print.huxtable","text":"default huxtables printed using print_screen(). certain cases, example Sweave documents, may useful change . can setting options(\"huxtable.print\").","code":""},{"path":"/reference/print.huxtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format and print huxtables using a default method — print.huxtable","text":"","code":"# S3 method for class 'huxtable' print(x, ...)  # S3 method for class 'huxtable' format(x, ..., output = c(\"latex\", \"html\", \"md\", \"screen\", \"rtf\", \"typst\"))"},{"path":"/reference/print.huxtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format and print huxtables using a default method — print.huxtable","text":"x huxtable. ... Options passed methods. output Output format. One \"html\", \"latex\", \"md\", \"screen\", \"rtf\" \"typst\".","code":""},{"path":"/reference/print.huxtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format and print huxtables using a default method — print.huxtable","text":"print prints huxtable returns NULL invisibly. format returns string representation to_latex(), to_html() etc.","code":""},{"path":[]},{"path":"/reference/print.huxtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format and print huxtables using a default method — print.huxtable","text":"","code":"if (FALSE) { # \\dontrun{ # to print LaTeX output: options(huxtable.print = print_latex) # to print Typst output: options(huxtable.print = print_typst) } # }  format(jams, output = \"screen\") #> [1] \"                              Type           Price  \\n                              Strawberry      1.90  \\n                              Raspberry       2.10  \\n                              Plum            1.80  \\n\\nColumn names: Type, Price\\n\" format(jams, output = \"md\") #> [1] \"-----------------------\\n Type            Price \\n----------- -----------\\n Strawberry       1.90 \\n                       \\n Raspberry        2.10 \\n                       \\n Plum             1.80 \\n-----------------------\\n\\n\" format(jams, output = \"typst\") #> [1] \"#figure(\\ntable(\\n  columns: (auto, auto),\\n  stroke: none,\\n  table.header(\\n    table.cell(align: (left + top))[Type], table.cell(align: (right + top))[Price]\\n  ),\\n  table.cell(align: (left + top))[Strawberry], table.cell(align: (right + top))[1.90],\\n  table.cell(align: (left + top))[Raspberry], table.cell(align: (right + top))[2.10],\\n  table.cell(align: (left + top))[Plum], table.cell(align: (right + top))[1.80]\\n),\\ncaption: none\\n)\""},{"path":"/reference/quick-output.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly print objects to a PDF, TeX, Typst, HTML, Microsoft Office or RTF document, or PNG or SVG images — quick-output","title":"Quickly print objects to a PDF, TeX, Typst, HTML, Microsoft Office or RTF document, or PNG or SVG images — quick-output","text":"functions use huxtable print objects output document. useful one-liners data reporting.","code":""},{"path":"/reference/quick-output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly print objects to a PDF, TeX, Typst, HTML, Microsoft Office or RTF document, or PNG or SVG images — quick-output","text":"","code":"quick_latex(   ...,   file = confirm(\"huxtable-output.tex\"),   borders = 0.4,   open = interactive() )  quick_pdf(   ...,   file = confirm(\"huxtable-output.pdf\"),   borders = 0.4,   open = interactive(),   width = NULL,   height = NULL )  quick_typst(   ...,   file = confirm(\"huxtable-output.typ\"),   borders = 0.4,   open = interactive() )  quick_typst_pdf(   ...,   file = confirm(\"huxtable-output.pdf\"),   borders = 0.4,   open = interactive(),   width = NULL,   height = NULL )  quick_typst_png(   ...,   file = confirm_prefix(\"huxtable-output\"),   borders = 0.4,   open = interactive(),   width = NULL,   height = NULL,   ppi = NULL )  quick_typst_svg(   ...,   file = confirm_prefix(\"huxtable-output\"),   borders = 0.4,   open = interactive(),   width = NULL,   height = NULL )  quick_html(   ...,   file = confirm(\"huxtable-output.html\"),   borders = 0.4,   open = interactive() )  quick_docx(   ...,   file = confirm(\"huxtable-output.docx\"),   borders = 0.4,   open = interactive() )  quick_pptx(   ...,   file = confirm(\"huxtable-output.pptx\"),   borders = 0.4,   open = interactive() )  quick_xlsx(   ...,   file = confirm(\"huxtable-output.xlsx\"),   borders = 0.4,   open = interactive() )  quick_rtf(   ...,   file = confirm(\"huxtable-output.rtf\"),   borders = 0.4,   open = interactive() )"},{"path":"/reference/quick-output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly print objects to a PDF, TeX, Typst, HTML, Microsoft Office or RTF document, or PNG or SVG images — quick-output","text":"... One huxtables R objects as_huxtable method. file File path output. borders Border width members ... huxtables. open Logical. Automatically open resulting file? width String passed LaTeX geometry package's paperwidth option Typst's page width option. Use NULL default width. height String passed LaTeX geometry package's paperheight option Typst's page height option. Use NULL default height. ppi Pixels per inch PNG output.","code":""},{"path":"/reference/quick-output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly print objects to a PDF, TeX, Typst, HTML, Microsoft Office or RTF document, or PNG or SVG images — quick-output","text":"Invisible NULL.","code":""},{"path":"/reference/quick-output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quickly print objects to a PDF, TeX, Typst, HTML, Microsoft Office or RTF document, or PNG or SVG images — quick-output","text":"Objects ... converted huxtables, borders added. ‘file’ specified, command fail non-interactive sessions. interactive sessions, default file path \"huxtable-output.xxx\" working directory; already exists, asked confirm manually proceeding. create docx pptx files flextable officer must installed, xlsx needs openxlsx. quick_typst_pdf(), quick_typst_png(), quick_typst_svg() require typst command line tool. quick_typst_pdf() e.g. file = \"foo.pdf\" overwrite delete file foo.typ. quick_typst_png() quick_typst_svg() create one image per huxtable. one object ..., images numeric suffix like \"-1\", \"-2\" etc. Existing files file prefix overwritten confirmation interactive sessions.","code":""},{"path":"/reference/quick-output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly print objects to a PDF, TeX, Typst, HTML, Microsoft Office or RTF document, or PNG or SVG images — quick-output","text":"","code":"if (FALSE) { # \\dontrun{ m <- matrix(1:4, 2, 2)  quick_pdf(m, jams) quick_latex(m, jams) quick_typst(m, jams) quick_typst_pdf(m, jams) quick_typst_png(m, jams) quick_typst_svg(m, jams) quick_html(m, jams) quick_docx(m, jams) quick_xlsx(m, jams) quick_pptx(m, jams) quick_rtf(m, jams) } # }"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics glance, tidy","code":""},{"path":"/reference/report_latex_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage LaTeX dependencies for huxtables — report_latex_dependencies","title":"Manage LaTeX dependencies for huxtables — report_latex_dependencies","text":"report_latex_dependencies prints /returns list LaTeX dependencies adding LaTeX preamble. check_latex_dependencies checks whether required LaTeX packages installed. install_latex_dependencies utility function install /update LaTeX packages huxtable requires. calls tinytex::tlmgr_install() possible, tlmgr install directly.","code":""},{"path":"/reference/report_latex_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage LaTeX dependencies for huxtables — report_latex_dependencies","text":"","code":"report_latex_dependencies(quiet = FALSE, as_string = FALSE)  check_latex_dependencies(quiet = FALSE)  install_latex_dependencies()"},{"path":"/reference/report_latex_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage LaTeX dependencies for huxtables — report_latex_dependencies","text":"quiet Logical. report_latex_dependencies, suppress printing dependencies. check_latex_dependencies, suppress messages. as_string Logical: return dependencies string.","code":""},{"path":"/reference/report_latex_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage LaTeX dependencies for huxtables — report_latex_dependencies","text":"as_string TRUE, report_latex_dependencies returns string \"\\\\\\\\usepackage\\\\{...\\\\}\" statements; otherwise returns list rmarkdown::latex_dependency objects, invisibly. check_latex_dependencies() returns TRUE FALSE. install_latex_dependencies returns TRUE tlmgr returns 0.","code":""},{"path":"/reference/report_latex_dependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage LaTeX dependencies for huxtables — report_latex_dependencies","text":"","code":"report_latex_dependencies() #> \\usepackage{array} #> \\usepackage{caption} #> \\usepackage{graphicx} #> \\usepackage{siunitx} #> \\usepackage[normalem]{ulem} #> \\usepackage{colortbl} #> \\usepackage{multirow} #> \\usepackage{hhline} #> \\usepackage{calc} #> \\usepackage{tabularx} #> \\usepackage{threeparttable} #> \\usepackage{wrapfig} #> \\usepackage{adjustbox} #> \\usepackage{hyperref} #> % These are LaTeX packages. You can install them using your LaTex management software, #> % or by running `huxtable::install_latex_dependencies()` from within R. #> % Other packages may be required if you use non-standard tabulars (e.g. tabulary).  if (FALSE) { # \\dontrun{ check_latex_dependencies() } # } if (FALSE) { # \\dontrun{ install_latex_dependencies() } # }"},{"path":"/reference/restack-across-down.html","id":null,"dir":"Reference","previous_headings":"","what":"Restack huxtables across/down the page — restack-across-down","title":"Restack huxtables across/down the page — restack-across-down","text":"restack_across() splits huxtable horizontally, joins parts side side. restack_down() splits huxtable vertically, joins parts top bottom.","code":""},{"path":"/reference/restack-across-down.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restack huxtables across/down the page — restack-across-down","text":"","code":"restack_across(   ht,   rows,   headers = TRUE,   on_remainder = c(\"warn\", \"stop\", \"fill\") )  restack_down(   ht,   cols,   headers = TRUE,   on_remainder = c(\"warn\", \"stop\", \"fill\") )"},{"path":"/reference/restack-across-down.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restack huxtables across/down the page — restack-across-down","text":"ht huxtable rows, cols many rows/columns new result . headers Logical. Take account header rows/columns? on_remainder String. \"warn\", \"stop\" \"fill\". See .","code":""},{"path":"/reference/restack-across-down.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restack huxtables across/down the page — restack-across-down","text":"new huxtable.","code":""},{"path":"/reference/restack-across-down.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Restack huxtables across/down the page — restack-across-down","text":"headers TRUE, header rows/columns repeated across/restacked huxtable necessary. on_remainder determines happens huxtable evenly divided restacking: \"stop\": stop error. \"fill\": fill remainder empty cells. \"warn\" (default): issue warning, fill remainder empty cells.","code":""},{"path":[]},{"path":"/reference/restack-across-down.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restack huxtables across/down the page — restack-across-down","text":"","code":"ht <- as_hux(matrix(LETTERS[1:4], 2, 2)) ht <- set_all_borders(ht) ht #>                              ┌─────────┬─────────┐ #>                              │ A       │ C       │ #>                              ├─────────┼─────────┤ #>                              │ B       │ D       │ #>                              └─────────┴─────────┘ #>  #> Column names: V1, V2  restack_down(ht, 1) #>                                ┌────────────────┐ #>                                │ A              │ #>                                ├────────────────┤ #>                                │ B              │ #>                                ├────────────────┤ #>                                │ C              │ #>                                ├────────────────┤ #>                                │ D              │ #>                                └────────────────┘ #>  #> Column names: V1 restack_across(ht, 1) #>                          ┌──────┬──────┬──────┬──────┐ #>                          │ A    │ C    │ B    │ D    │ #>                          └──────┴──────┴──────┴──────┘ #>  #> Column names: V1, V2, V1.1, V2.1  # headers: restack_across(jams, 2) #>              Type         Price   Type        Price   Type   Price   #>              Strawberry    1.90   Raspberry    2.10   Plum    1.80   #>  #> Column names: Type, Price, Type.1, Price.1, Type.2, Price.2 restack_across(jams, 2,   headers = FALSE ) #>                      Type         Price   Raspberry   2.10   #>                      Strawberry    1.90   Plum        1.80   #>  #> Column names: Type, Price, Type.1, Price.1  # on_remainder: restack_across(jams, 3,   on_remainder = \"fill\" ) #>                        Type         Price   Type   Price   #>                        Strawberry    1.90   Plum    1.80   #>                        Raspberry     2.10                  #>  #> Column names: Type, Price, Type.1, Price.1"},{"path":"/reference/rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate text within cells — rotation","title":"Rotate text within cells — rotation","text":"Numbers represent degrees rotate text anti-clockwise:","code":""},{"path":"/reference/rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate text within cells — rotation","text":"","code":"rotation(ht)  rotation(ht) <- value  set_rotation(ht, row, col, value)  map_rotation(ht, row, col, fn)"},{"path":"/reference/rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate text within cells — rotation","text":"ht huxtable. value numeric vector matrix. Set NA reset default, 0. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/rotation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate text within cells — rotation","text":"0 default; 90 going upwards, left--right languages; 270 going downwards. probably need set col_width() row_height() explicitly achieve nice result, HTML LaTeX.","code":""},{"path":"/reference/rotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate text within cells — rotation","text":"","code":"rotation(jams) <- 90 rotation(jams) #>     Type Price #> 1     90    90 #> 1.1   90    90 #> 2     90    90 #> 3     90    90  jams2 <- set_rotation(   jams,   270 ) rotation(jams2) #>     Type Price #> 1    270   270 #> 1.1  270   270 #> 2    270   270 #> 3    270   270  jams3 <- set_rotation(   jams,   2:3, 1, 270 ) rotation(jams3) #>     Type Price #> 1     90    90 #> 1.1  270    90 #> 2    270    90 #> 3     90    90  jams4 <- map_rotation(   jams,   by_rows(     270,     90   ) ) rotation(jams4) #>     Type Price #> 1    270   270 #> 1.1   90    90 #> 2    270   270 #> 3     90    90"},{"path":"/reference/row_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the height of table rows — row_height","title":"Set the height of table rows — row_height","text":"Numeric heights scaled 1 treated proportions table height HTML, text height (\\textheight) LaTeX. Character row heights must valid CSS LaTeX dimensions.","code":""},{"path":"/reference/row_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the height of table rows — row_height","text":"","code":"row_height(ht)  row_height(ht) <- value  set_row_height(ht, row, value)"},{"path":"/reference/row_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the height of table rows — row_height","text":"ht huxtable. value Numeric character vector. Set NA reset default, NA. row row specifier. See rowspecs details.","code":""},{"path":"/reference/row_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the height of table rows — row_height","text":"row_height() returns row_height property. set_row_height() returns modified huxtable.","code":""},{"path":[]},{"path":"/reference/row_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the height of table rows — row_height","text":"","code":"row_height(jams) <- c(.4, .2, .2, .2) row_height(jams) #>   1 1.1   2   3  #> 0.4 0.2 0.2 0.2"},{"path":"/reference/rowspecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Different ways to select rows and columns — rowspecs","title":"Different ways to select rows and columns — rowspecs","text":"help page describes use row col arguments set_* functions.","code":""},{"path":"/reference/rowspecs.html","id":"the-basics","dir":"Reference","previous_headings":"","what":"The basics","title":"Different ways to select rows and columns — rowspecs","text":"set_* functions cell properties arguments like : set_property(ht, row, col, value). can treat row col arguments like arguments data frame subsetting. example, can use row = 1:3 get first three rows, col = \"salary\" specify column named \"salary\", row = ht$salary >= 50000 specify rows condition true. also extra tricks can use: Write set_property(ht, x), omitting row col, set property x cells. Use everywhere refer rows columns. Use final(n) refer last n rows columns. Use evens get even rows/columns odds odd ones. Use stripe(n, = m) get every nth row/column starting row/column m. Use dplyr functions like starts_with, contains matches specify columns (rows). See tidyselect::language full list.","code":""},{"path":"/reference/rowspecs.html","id":"the-gory-details","dir":"Reference","previous_headings":"","what":"The gory details","title":"Different ways to select rows and columns — rowspecs","text":"row col arguments parsed depends number arguments passed set_* function. two arguments second argument taken value set rows columns. four arguments: row col numeric, character logical, evaluated just standard subsetting. col evaluated special context provided tidyselect::with_vars() allow use dplyr functions. row col function,called two arguments: huxtable, dimension number evaluated, .e. 1 rows, 2 columns. must return vector column indices. evens(), odds(), stripe() final() return functions purpose.","code":""},{"path":"/reference/rowspecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Different ways to select rows and columns — rowspecs","text":"","code":"set_bold(jams, 2:4, 1:2, TRUE) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price set_background_color(   jams, evens, everywhere,   \"grey95\" ) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price set_bold(   jams, everywhere,   tidyselect::matches(\"yp\"), TRUE ) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price  set_text_color(   jams, 2:4, 1:2,   c(\"red\", \"violetred\", \"purple\") ) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/rtf_fc_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create RTF font and color tables — rtf_fc_tables","title":"Create RTF font and color tables — rtf_fc_tables","text":"Create RTF font color tables","code":""},{"path":"/reference/rtf_fc_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create RTF font and color tables — rtf_fc_tables","text":"","code":"rtf_fc_tables(..., extra_fonts = \"Times\", extra_colors = character(0))"},{"path":"/reference/rtf_fc_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create RTF font and color tables — rtf_fc_tables","text":"... One objects class huxtable. extra_fonts Extra fonts include. first fonts table. extra_colors Extra colors include, R color names.","code":""},{"path":"/reference/rtf_fc_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create RTF font and color tables — rtf_fc_tables","text":"object class rtfFCTables. list containing two items: \"fonts\" character vector unique font names; \"colors\" character vector unique color names.","code":""},{"path":"/reference/rtf_fc_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create RTF font and color tables — rtf_fc_tables","text":"RTF documents single table fonts, table colors, RTF header. create font color tables multiple huxtables, use command. can print returned object RTF header. Pass print_rtf() to_rtf() ensure huxtables print correct colour references.","code":""},{"path":"/reference/rtf_fc_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create RTF font and color tables — rtf_fc_tables","text":"","code":"# Printing multiple huxtables:  ht <- huxtable(\"Blue with red border\") ht <- set_all_borders(ht, 1) ht <- set_all_border_colors(ht, \"red\") background_color(ht) <- \"blue\"  ht2 <- huxtable(\"Dark green text\") text_color(ht2) <- \"darkgreen\"  fc_tbls <- rtf_fc_tables(ht, ht2)  # In the document header: print(fc_tbls) #> $fonts #> [1] \"Times\" #> attr(,\"na.action\") #> [1] 2 #> attr(,\"class\") #> [1] \"omit\" #>  #> $colors #> [1] \"blue\"      \"red\"       \"darkgreen\" #> attr(,\"na.action\") #> [1] 1 #> attr(,\"class\") #> [1] \"omit\" #>  #> attr(,\"class\") #> [1] \"rtfFCTables\"  # In the document body: print_rtf(ht, fc_tables = fc_tbls) #>  #> { #> \\trowd #> \\trqc \\clbrdrt\\brdrs\\brdrw20\\brdrcf2\\clbrdrl\\brdrs\\brdrw20\\brdrcf2\\clbrdrb\\brdrs\\brdrw20\\brdrcf2\\clbrdrr\\brdrs\\brdrw20\\brdrcf2\\clcbpat1\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx4320 \\pard\\intbl\\ql{Blue with red border}\\cell #> \\row #> } print_rtf(ht2, fc_tables = fc_tbls) #>  #> { #> \\trowd #> \\trqc \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx4320 \\pard\\intbl\\ql{\\cf3 {Dark green text}}\\cell #> \\row #> }"},{"path":"/reference/sanitize.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape text for various formats — sanitize","title":"Escape text for various formats — sanitize","text":"escapes string LaTeX, HTML, Typst RTF.","code":""},{"path":"/reference/sanitize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape text for various formats — sanitize","text":"","code":"sanitize(str, type = c(\"latex\", \"html\", \"typst\", \"rtf\"))"},{"path":"/reference/sanitize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape text for various formats — sanitize","text":"str character object. type \"latex\", \"html\", \"typst\" \"rtf\".","code":""},{"path":"/reference/sanitize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escape text for various formats — sanitize","text":"sanitized character object.","code":""},{"path":"/reference/sanitize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Escape text for various formats — sanitize","text":"HTML LaTeX code copied xtable::sanitize().","code":""},{"path":"/reference/sanitize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Escape text for various formats — sanitize","text":"","code":"txt <- \"Make $$$ with us\" sanitize(txt, type = \"latex\") #> [1] \"Make \\\\$\\\\$\\\\$ with us\""},{"path":"/reference/set-multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Set left, right, top and bottom properties — set-multiple","title":"Set left, right, top and bottom properties — set-multiple","text":"functions set left, right, top /bottom properties simultaneously specified cells.","code":""},{"path":"/reference/set-multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set left, right, top and bottom properties — set-multiple","text":"","code":"set_all_borders(ht, row, col, value = 0.4)  map_all_borders(ht, row, col, fn)  set_all_border_colors(ht, row, col, value)  map_all_border_colors(ht, row, col, fn)  set_all_border_styles(ht, row, col, value)  map_all_border_styles(ht, row, col, fn)  set_all_padding(ht, row, col, value)  map_all_padding(ht, row, col, fn)  set_tb_padding(ht, row, col, value)  map_tb_padding(ht, row, col, fn)  set_lr_padding(ht, row, col, value)  map_lr_padding(ht, row, col, fn)  set_tb_borders(ht, row, col, value)  map_tb_borders(ht, row, col, fn)  set_lr_borders(ht, row, col, value)  map_lr_borders(ht, row, col, fn)  set_tb_border_colors(ht, row, col, value)  map_tb_border_colors(ht, row, col, fn)  set_lr_border_colors(ht, row, col, value)  map_lr_border_colors(ht, row, col, fn)  set_tb_border_styles(ht, row, col, value)  map_tb_border_styles(ht, row, col, fn)  set_lr_border_styles(ht, row, col, value)  map_lr_border_styles(ht, row, col, fn)"},{"path":"/reference/set-multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set left, right, top and bottom properties — set-multiple","text":"ht huxtable. row row specifier. See rowspecs details. col optional column specifier. value Value(s) set. Set NA reset default. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/set-multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set left, right, top and bottom properties — set-multiple","text":"modified huxtable.","code":""},{"path":"/reference/set-multiple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set left, right, top and bottom properties — set-multiple","text":"set_all_* functions set top, bottom, left right properties. set_tb_* functions set top bottom properties. set_lr_* functions set left right properties.","code":""},{"path":[]},{"path":"/reference/set-multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set left, right, top and bottom properties — set-multiple","text":"","code":"ht <- as_hux(jams) ht <- set_all_borders(ht) ht #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price ht <- set_all_border_colors(ht, \"red\") ht #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price ht <- set_all_border_styles(ht, \"double\") ht <- set_all_padding(ht, 1:3, 1:2, \"20px\") ht <- set_tb_padding(ht, 10) ht <- set_tb_borders(ht) set_tb_border_colors(ht, \"red\") #>                             ╔════════════╦═════════╗ #>                             ║ Type       ║   Price ║ #>                             ╠════════════╬═════════╣ #>                             ║ Strawberry ║    1.90 ║ #>                             ╠════════════╬═════════╣ #>                             ║ Raspberry  ║    2.10 ║ #>                             ╠════════════╬═════════╣ #>                             ║ Plum       ║    1.80 ║ #>                             ╚════════════╩═════════╝ #>  #> Column names: Type, Price set_tb_border_styles(ht, \"double\") #>                             ╔════════════╦═════════╗ #>                             ║ Type       ║   Price ║ #>                             ╠════════════╬═════════╣ #>                             ║ Strawberry ║    1.90 ║ #>                             ╠════════════╬═════════╣ #>                             ║ Raspberry  ║    2.10 ║ #>                             ╠════════════╬═════════╣ #>                             ║ Plum       ║    1.80 ║ #>                             ╚════════════╩═════════╝ #>  #> Column names: Type, Price"},{"path":"/reference/set-outer.html","id":null,"dir":"Reference","previous_headings":"","what":"Set borders and padding around a rectangle of cells — set-outer","title":"Set borders and padding around a rectangle of cells — set-outer","text":"Set borders padding around rectangle cells","code":""},{"path":"/reference/set-outer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set borders and padding around a rectangle of cells — set-outer","text":"","code":"set_outer_borders(ht, row, col, value = 0.4)  set_outer_border_colors(ht, row, col, value)  set_outer_border_styles(ht, row, col, value)  set_outer_padding(ht, row, col, value)"},{"path":"/reference/set-outer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set borders and padding around a rectangle of cells — set-outer","text":"ht huxtable. row row specifier. See rowspecs details. col optional column specifier. value Border width, color, style brdr() object. See borders. padding, padding width points.","code":""},{"path":"/reference/set-outer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set borders and padding around a rectangle of cells — set-outer","text":"set_outer_borders sets borders round top, bottom, left right group cells. Behaviour undefined unless row col specify contiguous sequences. set_outer_border_colors set_outer_border_styles set border colors styles. set_outer_padding sets padding, .e. top padding top row cells, etc.","code":""},{"path":"/reference/set-outer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set borders and padding around a rectangle of cells — set-outer","text":"","code":"ht2 <- huxtable(a = 1:3, b = 1:3) set_outer_borders(ht2) #>                              ┌───────────────────┐ #>                              │       a         b │ #>                              │       1         1 │ #>                              │       2         2 │ #>                              │       3         3 │ #>                              └───────────────────┘ #>  #> Column names: a, b set_outer_borders(ht2, 2:3, 1:2) #>                                      a         b   #>                              ┌───────────────────┐ #>                              │       1         1 │ #>                              │       2         2 │ #>                              └───────────────────┘ #>                                      3         3   #>  #> Column names: a, b"},{"path":"/reference/set_contents.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cell contents — set_contents","title":"Set cell contents — set_contents","text":"set_contents() convenience function change cell contents huxtable within dplyr chain. set_contents(ht, x, y, foo) just calls ht[x, y] <- foo returns ht.","code":""},{"path":"/reference/set_contents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cell contents — set_contents","text":"","code":"contents(ht)  contents(ht) <- value  set_contents(ht, row, col, value)  map_contents(ht, row, col, fn)"},{"path":"/reference/set_contents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cell contents — set_contents","text":"ht huxtable. value Cell contents. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/set_contents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set cell contents — set_contents","text":"","code":"data(jams) set_contents(jams, 2, 1, \"Blackcurrant\") #>                              Type             Price   #>                              Blackcurrant      1.90   #>                              Raspberry         2.10   #>                              Plum              1.80   #>  #> Column names: Type, Price map_contents(jams, by_regex(\".*berry\" = \"Snodberry\")) #>                               Type          Price   #>                               Snodberry      1.90   #>                               Snodberry      2.10   #>                               Plum           1.80   #>  #> Column names: Type, Price"},{"path":"/reference/set_default_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Default huxtable properties — set_default_properties","title":"Default huxtable properties — set_default_properties","text":"Defaults used new huxtables, also property set NA.","code":""},{"path":"/reference/set_default_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default huxtable properties — set_default_properties","text":"","code":"set_default_properties(...)  get_default_properties(names = NULL)"},{"path":"/reference/set_default_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default huxtable properties — set_default_properties","text":"... Properties specified name, single named list. names Vector property names. NULL, properties returned.","code":""},{"path":"/reference/set_default_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default huxtable properties — set_default_properties","text":"set_default_properties, list previous property values, invisibly. get_default_properties, list current defaults.","code":""},{"path":"/reference/set_default_properties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default huxtable properties — set_default_properties","text":"Note autoformat = TRUE huxtable() overrides defaults. set default border styles, use pseudo-properties border/border_style/border_color. set defaults separately different sides.","code":""},{"path":[]},{"path":"/reference/set_default_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default huxtable properties — set_default_properties","text":"","code":"old <- set_default_properties(   text_color = \"red\",   border     = 0.4 ) hux(a = 1:2, b = 1:2) #>                              ┌─────────┬─────────┐ #>                              │       a │       b │ #>                              ├─────────┼─────────┤ #>                              │       1 │       1 │ #>                              ├─────────┼─────────┤ #>                              │       2 │       2 │ #>                              └─────────┴─────────┘ #>  #> Column names: a, b set_default_properties(old) get_default_properties(\"bold\") #> $bold #> [1] FALSE #>"},{"path":"/reference/set_markdown_contents.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cell contents, interpreting them as markdown — set_markdown_contents","title":"Set cell contents, interpreting them as markdown — set_markdown_contents","text":"convenience function calls set_contents() set_markdown().","code":""},{"path":"/reference/set_markdown_contents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cell contents, interpreting them as markdown — set_markdown_contents","text":"","code":"set_markdown_contents(ht, row, col, value)"},{"path":"/reference/set_markdown_contents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cell contents, interpreting them as markdown — set_markdown_contents","text":"ht huxtable. row row specifier. See rowspecs details. col optional column specifier. value Cell contents, markdown string.","code":""},{"path":"/reference/set_markdown_contents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set cell contents, interpreting them as markdown — set_markdown_contents","text":"modified huxtable.","code":""},{"path":"/reference/set_markdown_contents.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set cell contents, interpreting them as markdown — set_markdown_contents","text":"Markdown content cells completely separate printing whole table markdown using print_md(). set markdown TRUE, huxtable interprets cell contents markdown, spits HTML, TeX whatever.","code":""},{"path":[]},{"path":"/reference/set_markdown_contents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set cell contents, interpreting them as markdown — set_markdown_contents","text":"","code":"set_markdown_contents(   jams, 1, 1,   \"**Type** of jam\" ) #>                              Type of jam     Price   #>                              Strawberry       1.90   #>                              Raspberry        2.10   #>                              Plum             1.80   #>  #> Column names: Type, Price"},{"path":"/reference/span-overwrites-shadows.html","id":null,"dir":"Reference","previous_headings":"","what":"Section about colspan/rowspan — span-overwrites-shadows","title":"Section about colspan/rowspan — span-overwrites-shadows","text":"Section colspan/rowspan","code":""},{"path":"/reference/span-overwrites-shadows.html","id":"cell-content","dir":"Reference","previous_headings":"","what":"Cell content","title":"Section about colspan/rowspan — span-overwrites-shadows","text":"merged cell ranges, top left cell's content displayed. addition, merge cells (either setting colspan() rowspan(), using merge_cells() friends) content top left cell copied cells. prevents unexpected changes content reorder subset rows columns.","code":""},{"path":"/reference/spans.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend cells over multiple rows and/or columns — spans","title":"Extend cells over multiple rows and/or columns — spans","text":"cell rowspan 2 covers cell directly . cell colspan 2 covers cell directly right. cell rowspan 2 colspan 2 covers 2 x 2 square, hiding three cells.","code":""},{"path":"/reference/spans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend cells over multiple rows and/or columns — spans","text":"","code":"rowspan(ht)  rowspan(ht) <- value  set_rowspan(ht, row, col, value)  map_rowspan(ht, row, col, fn)  colspan(ht)  colspan(ht) <- value  set_colspan(ht, row, col, value)  map_colspan(ht, row, col, fn)"},{"path":"/reference/spans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend cells over multiple rows and/or columns — spans","text":"ht huxtable. value integer vector matrix. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/spans.html","id":"cell-content","dir":"Reference","previous_headings":"","what":"Cell content","title":"Extend cells over multiple rows and/or columns — spans","text":"merged cell ranges, top left cell's content displayed. addition, merge cells (either setting colspan() rowspan(), using merge_cells() friends) content top left cell copied cells. prevents unexpected changes content reorder subset rows columns.","code":""},{"path":[]},{"path":"/reference/spans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extend cells over multiple rows and/or columns — spans","text":"","code":"letter_hux <- as_hux(matrix(LETTERS[1:9], 3, 3)) letter_hux <- set_all_borders(letter_hux) letter_hux #>                            ┌───────┬───────┬───────┐ #>                            │ A     │ D     │ G     │ #>                            ├───────┼───────┼───────┤ #>                            │ B     │ E     │ H     │ #>                            ├───────┼───────┼───────┤ #>                            │ C     │ F     │ I     │ #>                            └───────┴───────┴───────┘ #>  #> Column names: V1, V2, V3 set_rowspan(letter_hux, 1, 1, 2) #>                            ┌───────┬───────┬───────┐ #>                            │ A     │ D     │ G     │ #>                            │       ├───────┼───────┤ #>                            │       │ E     │ H     │ #>                            ├───────┼───────┼───────┤ #>                            │ C     │ F     │ I     │ #>                            └───────┴───────┴───────┘ #>  #> Column names: V1, V2, V3 set_colspan(letter_hux, 1, 1, 2) #>                            ┌───────────────┬───────┐ #>                            │ A             │ G     │ #>                            ├───────┬───────┼───────┤ #>                            │ B     │ E     │ H     │ #>                            ├───────┼───────┼───────┤ #>                            │ C     │ F     │ I     │ #>                            └───────┴───────┴───────┘ #>  #> Column names: V1, V2, V3"},{"path":"/reference/split-across-down.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a huxtable into multiple huxtables — split-across-down","title":"Split a huxtable into multiple huxtables — split-across-down","text":"functions split huxtable horizontally vertically, return new sub-tables list.","code":""},{"path":"/reference/split-across-down.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a huxtable into multiple huxtables — split-across-down","text":"","code":"split_across(ht, after, height, headers = TRUE)  split_down(ht, after, width, headers = TRUE)"},{"path":"/reference/split-across-down.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a huxtable into multiple huxtables — split-across-down","text":"ht huxtable. Rows/columns split. See rowspecs details. Note tidyselect semantics allowed split_down() split_across(). height, width Maximum height/width result. headers Logical. Take account header rows/columns?","code":""},{"path":"/reference/split-across-down.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a huxtable into multiple huxtables — split-across-down","text":"list huxtables.","code":""},{"path":"/reference/split-across-down.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split a huxtable into multiple huxtables — split-across-down","text":"one width height must given. width height given, huxtable split col_width() row_height(), must numeric NA values. headers TRUE, previous headers added new table.","code":""},{"path":[]},{"path":"/reference/split-across-down.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a huxtable into multiple huxtables — split-across-down","text":"","code":"ht <- as_hux(matrix(LETTERS[1:16], 4, 4)) ht <- set_all_borders(ht) split_across(ht, after = 2) #> [[1]] #>                          ┌──────┬──────┬──────┬──────┐ #>                          │ A    │ E    │ I    │ M    │ #>                          ├──────┼──────┼──────┼──────┤ #>                          │ B    │ F    │ J    │ N    │ #>                          └──────┴──────┴──────┴──────┘ #>  #> Column names: V1, V2, V3, V4 #>  #> [[2]] #>                          ┌──────┬──────┬──────┬──────┐ #>                          │ C    │ G    │ K    │ O    │ #>                          ├──────┼──────┼──────┼──────┤ #>                          │ D    │ H    │ L    │ P    │ #>                          └──────┴──────┴──────┴──────┘ #>  #> Column names: V1, V2, V3, V4 #>  split_down(ht, after = c(1, 3)) #> [[1]] #>                                ┌────────────────┐ #>                                │ A              │ #>                                ├────────────────┤ #>                                │ B              │ #>                                ├────────────────┤ #>                                │ C              │ #>                                ├────────────────┤ #>                                │ D              │ #>                                └────────────────┘ #>  #> Column names: V1 #>  #> [[2]] #>                              ┌─────────┬─────────┐ #>                              │ E       │ I       │ #>                              ├─────────┼─────────┤ #>                              │ F       │ J       │ #>                              ├─────────┼─────────┤ #>                              │ G       │ K       │ #>                              ├─────────┼─────────┤ #>                              │ H       │ L       │ #>                              └─────────┴─────────┘ #>  #> Column names: V2, V3 #>  #> [[3]] #>                                ┌────────────────┐ #>                                │ M              │ #>                                ├────────────────┤ #>                                │ N              │ #>                                ├────────────────┤ #>                                │ O              │ #>                                ├────────────────┤ #>                                │ P              │ #>                                └────────────────┘ #>  #> Column names: V4 #>   col_width(ht) <- c(0.15, 0.1, 0.25, 0.3) split_down(ht, width = 0.3) #> [[1]] #>                              ┌───────────┬────────┐ #>                              │ A         │ E      │ #>                              ├───────────┼────────┤ #>                              │ B         │ F      │ #>                              ├───────────┼────────┤ #>                              │ C         │ G      │ #>                              ├───────────┼────────┤ #>                              │ D         │ H      │ #>                              └───────────┴────────┘ #>  #> Column names: V1, V2 #>  #> [[2]] #>                                ┌────────────────┐ #>                                │ I              │ #>                                ├────────────────┤ #>                                │ J              │ #>                                ├────────────────┤ #>                                │ K              │ #>                                ├────────────────┤ #>                                │ L              │ #>                                └────────────────┘ #>  #> Column names: V3 #>  #> [[3]] #>                                ┌────────────────┐ #>                                │ M              │ #>                                ├────────────────┤ #>                                │ N              │ #>                                ├────────────────┤ #>                                │ O              │ #>                                ├────────────────┤ #>                                │ P              │ #>                                └────────────────┘ #>  #> Column names: V4 #>   # split by column name: split_down(jams, \"Type\") #> [[1]] #>                                  Type             #>                                  Strawberry       #>                                  Raspberry        #>                                  Plum             #>  #> Column names: Type #>  #> [[2]] #>                                           Price   #>                                            1.90   #>                                            2.10   #>                                            1.80   #>  #> Column names: Price #>   # headers are repeated: split_across(jams, 3) #> [[1]] #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>  #> Column names: Type, Price #>  #> [[2]] #>                                Type        Price   #>                                Plum         1.80   #>  #> Column names: Type, Price #>"},{"path":"/reference/stripe.html","id":null,"dir":"Reference","previous_headings":"","what":"Return every n row or column numbers — stripe","title":"Return every n row or column numbers — stripe","text":"convenience function use row column specifications. context, stripe(n, ) return , + n, ..., number rows columns huxtable. evens odds return even odd numbers, .e. equivalent stripe(2, 2) stripe(2, 1) respectively. everywhere returns rows columns, equivalently stripe(1).","code":""},{"path":"/reference/stripe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return every n row or column numbers — stripe","text":"","code":"stripe(n = 1, from = n)  everywhere(ht, dimension)  evens(ht, dimension)  odds(ht, dimension)"},{"path":"/reference/stripe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return every n row or column numbers — stripe","text":"n number (least 1) number (least 1) ht object dim attribute like matrix data frame. dimension Number dimension use.","code":""},{"path":"/reference/stripe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return every n row or column numbers — stripe","text":"Technically, stripe returns 2-argument function can called like f(ht, dimension). See rowspecs details. huxtable 5.0.0, stripe called every. renamed avoid clash purrr::every.","code":""},{"path":"/reference/stripe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return every n row or column numbers — stripe","text":"","code":"ht <- huxtable(a = 1:10, b = 1:10) set_background_color(   ht,   evens, everywhere,   \"grey95\" ) #>                                      a         b   #>                                      1         1   #>                                      2         2   #>                                      3         3   #>                                      4         4   #>                                      5         5   #>                                      6         6   #>                                      7         7   #>                                      8         8   #>                                      9         9   #>                                     10        10   #>  #> Column names: a, b set_background_color(   ht,   stripe(3), everywhere,   \"grey95\" ) #>                                      a         b   #>                                      1         1   #>                                      2         2   #>                                      3         3   #>                                      4         4   #>                                      5         5   #>                                      6         6   #>                                      7         7   #>                                      8         8   #>                                      9         9   #>                                     10        10   #>  #> Column names: a, b"},{"path":"/reference/stripes.html","id":null,"dir":"Reference","previous_headings":"","what":"Set background color stripes — stripes","title":"Set background color stripes — stripes","text":"convenience functions call map_background_color by_rows by_cols.","code":""},{"path":"/reference/stripes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set background color stripes — stripes","text":"","code":"stripe_rows(ht, stripe1 = \"white\", stripe2 = \"grey90\")  stripe_columns(ht, stripe1 = \"white\", stripe2 = \"grey90\")"},{"path":"/reference/stripes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set background color stripes — stripes","text":"ht huxtable. stripe1 Color rows/columns 1, 3, 5, ... stripe2 Color rows/columns 2, 4, 6, ...","code":""},{"path":"/reference/stripes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set background color stripes — stripes","text":"","code":"stripe_rows(jams) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price stripe_columns(jams) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price stripe_rows(jams, \"red\", \"blue\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/style-functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Set multiple properties on headers — style-functions","title":"Set multiple properties on headers — style-functions","text":"functions set arbitrary cell properties cells header rows /columns.","code":""},{"path":"/reference/style-functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set multiple properties on headers — style-functions","text":"","code":"style_headers(ht, ...)  style_header_rows(ht, ...)  style_header_cols(ht, ...)  style_cells(ht, row, col, ...)  set_cell_properties(ht, row, col, ...)"},{"path":"/reference/style-functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set multiple properties on headers — style-functions","text":"ht huxtable. ... Named list cell properties. row row specifier. See rowspecs details. col optional column specifier.","code":""},{"path":"/reference/style-functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set multiple properties on headers — style-functions","text":"style_headers sets properties header cells. style_header_rows sets properties header rows. style_header_cols sets properties header columns. style_cells sets properties selected cells. set_cell_properties deprecated alias style_cells. use .","code":""},{"path":"/reference/style-functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set multiple properties on headers — style-functions","text":"","code":"style_headers(jams, text_color = \"red\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price jams <- set_header_cols(jams, 1, TRUE) style_header_cols(jams,   text_color = c(     NA, \"red\",     \"darkred\", \"purple\"   ) ) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price  style_cells(jams, everywhere, 2, bold = TRUE) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/subset-.brdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a subset of a brdr object — [<-.brdr","title":"Replace a subset of a brdr object — [<-.brdr","text":"Replace subset brdr object","code":""},{"path":"/reference/subset-.brdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a subset of a brdr object — [<-.brdr","text":"","code":"# S3 method for class 'brdr' x[...] <- value"},{"path":"/reference/subset-.brdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a subset of a brdr object — [<-.brdr","text":"x brdr object. ... Indices. value brdr() object, number matrix.","code":""},{"path":"/reference/subset-.brdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a subset of a brdr object — [<-.brdr","text":"brdr() object.","code":""},{"path":"/reference/subset-.brdr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace a subset of a brdr object — [<-.brdr","text":"probably need call directly. want access border thicknesses, e.g.   give matrix numbers.","code":"l_borders <- brdr_thickness(left_border(ht))"},{"path":"/reference/t.huxtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose a huxtable — t.huxtable","title":"Transpose a huxtable — t.huxtable","text":"t() switches huxtable rows become columns columns become rows.","code":""},{"path":"/reference/t.huxtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose a huxtable — t.huxtable","text":"","code":"# S3 method for class 'huxtable' t(x)"},{"path":"/reference/t.huxtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose a huxtable — t.huxtable","text":"x huxtable.","code":""},{"path":"/reference/t.huxtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose a huxtable — t.huxtable","text":"transposed huxtable.","code":""},{"path":"/reference/t.huxtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transpose a huxtable — t.huxtable","text":"Row column spans x swapped, column widths row heights, table width height, cell borders (bottom becomes right, etc.). properties - particular, alignment, vertical alignment rotation - preserved.","code":""},{"path":"/reference/t.huxtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transpose a huxtable — t.huxtable","text":"","code":"ht <- huxtable(   a = 1:3,   b = letters[1:3],   autoformat = FALSE ) bottom_border(ht)[3, ] <- 1 ht #>                                a         b         #>                                1         a         #>                                2         b         #>                              ───────────────────── #>                                3         c         #>  #> Column names: a, b t(ht) #>                            a      1      2    │ 3      #>                            b      a      b    │ c      #>  #> Column names: 1, 1.1, 2, 3"},{"path":"/reference/table_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the ","title":"Set the ","text":"default \"table\".","code":""},{"path":"/reference/table_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the ","text":"","code":"table_environment(ht)  table_environment(ht) <- value  set_table_environment(ht, value)"},{"path":"/reference/table_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the ","text":"ht huxtable. value string. Set NA reset default, \"table\".","code":""},{"path":"/reference/table_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the ","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":"/reference/table_environment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the ","text":"features guaranteed work set non-default value. Use risk! particular, may need set latex_float() non-default value. position() set \"wrapleft\" \"wrapright\", value overridden.","code":""},{"path":"/reference/table_environment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the ","text":"","code":"set_table_environment(jams, \"table*\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/tabular_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the table's tabular environment in LaTeX — tabular_environment","title":"Set the table's tabular environment in LaTeX — tabular_environment","text":"default either \"tabular\" \"tabularx\".","code":""},{"path":"/reference/tabular_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the table's tabular environment in LaTeX — tabular_environment","text":"","code":"tabular_environment(ht)  tabular_environment(ht) <- value  set_tabular_environment(ht, value)"},{"path":"/reference/tabular_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the table's tabular environment in LaTeX — tabular_environment","text":"ht huxtable. value string. Set NA reset default, NA_character_.","code":""},{"path":"/reference/tabular_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the table's tabular environment in LaTeX — tabular_environment","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":"/reference/tabular_environment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the table's tabular environment in LaTeX — tabular_environment","text":"features guaranteed work set non-default value. Use risk!","code":""},{"path":"/reference/tabular_environment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the table's tabular environment in LaTeX — tabular_environment","text":"","code":"set_tabular_environment(jams, \"longtable\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/text_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the color of text in cells — text_color","title":"Set the color of text in cells — text_color","text":"Colors can format understood R: color name like \"darkred\" HTML string like \"#FF0000\" result function like rgb(1, 0, 0) grey(0.5)","code":""},{"path":"/reference/text_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the color of text in cells — text_color","text":"","code":"text_color(ht)  text_color(ht) <- value  set_text_color(ht, row, col, value)  map_text_color(ht, row, col, fn)"},{"path":"/reference/text_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the color of text in cells — text_color","text":"ht huxtable. value character vector matrix. Set NA reset default, NA_character_. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":[]},{"path":"/reference/text_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the color of text in cells — text_color","text":"","code":"text_color(jams) <- \"blue\" text_color(jams) #>     Type   Price  #> 1   \"blue\" \"blue\" #> 1.1 \"blue\" \"blue\" #> 2   \"blue\" \"blue\" #> 3   \"blue\" \"blue\"  set_text_color(jams, \"red\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price set_text_color(jams, 2:3, 1, \"red\") #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price map_text_color(jams, by_rows(\"red\", \"blue\")) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/themes.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme a huxtable — themes","title":"Theme a huxtable — themes","text":"functions quickly set default styles huxtable.","code":""},{"path":"/reference/themes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme a huxtable — themes","text":"","code":"theme_plain(ht, header_rows = TRUE, position = \"center\")  theme_bright(   ht,   header_rows = TRUE,   header_cols = FALSE,   colors = c(\"#7eabf2\", \"#e376e3\", \"#fcbb03\", \"#7aba59\", \"#fc0356\") )  theme_basic(ht, header_rows = TRUE, header_cols = FALSE)  theme_compact(ht, header_rows = TRUE, header_cols = FALSE)  theme_striped(   ht,   stripe = \"grey90\",   stripe2 = \"grey95\",   header_rows = TRUE,   header_cols = TRUE )  theme_grey(ht, header_rows = TRUE, header_cols = TRUE)  theme_blue(ht, header_rows = TRUE, header_cols = TRUE)  theme_orange(ht, header_rows = TRUE, header_cols = TRUE)  theme_green(ht, header_rows = TRUE, header_cols = TRUE)  theme_article(ht, header_rows = TRUE, header_cols = TRUE)  theme_mondrian(ht, prop_colored = 0.1, font = NULL)"},{"path":"/reference/themes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme a huxtable — themes","text":"ht huxtable object. header_rows Logical: style header rows? position \"left\", \"center\" \"right\" header_cols Logical: style header columns? colors Colors header rows. Can also palette function. stripe Background colour odd rows stripe2 Background colour even rows prop_colored Roughly proportion cells primary-color background? font Font use. LaTeX, try \"cmss\".","code":""},{"path":"/reference/themes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme a huxtable — themes","text":"huxtable object, appropriately styled.","code":""},{"path":"/reference/themes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theme a huxtable — themes","text":"theme_plain simple theme bold header, grey striped background, outer border. theme_basic sets header rows/columns bold, adds border beneath . theme_compact like theme_basic minimal padding. theme_striped uses different backgrounds alternate rows, headers. theme_article similar style many scientific journals. sets horizontal lines table. theme_bright uses thick white borders colourful header. works nicely sans-serif fonts. theme_grey, theme_blue, theme_orange theme_green use white borders subtle horizontal stripes. theme_mondrian mimics style Mondrian painting, thick black borders randomized colors.","code":""},{"path":"/reference/themes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme a huxtable — themes","text":"","code":"theme_plain(jams) #>                             ┌──────────────────────┐ #>                             │ Type           Price │ #>                             ├──────────────────────┤ #>                             │ Strawberry      1.90 │ #>                             │ Raspberry       2.10 │ #>                             │ Plum            1.80 │ #>                             └──────────────────────┘ #>  #> Column names: Type, Price theme_basic(jams) #>                               Type           Price   #>                             ──────────────────────── #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price theme_compact(jams) #>                               Type           Price   #>                             ──────────────────────── #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price theme_striped(jams) #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price theme_article(jams) #>                             ──────────────────────── #>                               Type           Price   #>                             ──────────────────────── #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>                             ──────────────────────── #>  #> Column names: Type, Price theme_bright(jams) #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price theme_grey(jams) #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price theme_blue(jams) #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price theme_orange(jams) #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price theme_green(jams) #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price theme_mondrian(jams) #>                             ┌────────────┬─────────┐ #>                             │ Type       │   Price │ #>                             ├────────────┼─────────┤ #>                             │ Strawberry │    1.90 │ #>                             ├────────────┼─────────┤ #>                             │ Raspberry  │    2.10 │ #>                             ├────────────┼─────────┤ #>                             │ Plum       │    1.80 │ #>                             └────────────┴─────────┘ #>  #> Column names: Type, Price"},{"path":"/reference/tidy_override.html","id":null,"dir":"Reference","previous_headings":"","what":"Change a model's tidy output — tidy_override","title":"Change a model's tidy output — tidy_override","text":"Use tidy_override tidy_replace provide p values, confidence intervals etc. model.","code":""},{"path":"/reference/tidy_override.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change a model's tidy output — tidy_override","text":"","code":"tidy_override(x, ..., glance = list(), extend = FALSE)  tidy_replace(x, tidied, glance = list())  # S3 method for class 'tidy_override' tidy(x, ...)  # S3 method for class 'tidy_override' glance(x, ...)  # S3 method for class 'tidy_override' nobs(object, ...)"},{"path":"/reference/tidy_override.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change a model's tidy output — tidy_override","text":"x model methods defined generics::tidy() /generics::glance(). ... tidy_override, columns statistics replace tidy output. tidy glance methods, arguments passed underlying model. glance list summary statistics glance. extend Logical: allow adding new columns tidy(x) glance(x)? tidied Data frame replace result tidy(x). object tidy_override object.","code":""},{"path":"/reference/tidy_override.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change a model's tidy output — tidy_override","text":"object can passed huxreg.","code":""},{"path":"/reference/tidy_override.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change a model's tidy output — tidy_override","text":"tidy_override allows replace columns tidy(x) data. tidy_replace allows replace result tidy(x) entirely.","code":""},{"path":"/reference/tidy_override.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change a model's tidy output — tidy_override","text":"","code":"if (!requireNamespace(\"broom\", quietly = TRUE)) {   stop(\"Please install 'broom' to run this example.\") }  lm1 <- lm(mpg ~ cyl, mtcars) fixed_lm1 <- tidy_override(lm1,   p.value = c(.04, .12),   glance = list(r.squared = 0.99) ) huxreg(lm1, fixed_lm1) #>                ───────────────────────────────────────────────── #>                                       (1)             (2)        #>                                ───────────────────────────────── #>                  (Intercept)        37.885 ***        37.885 *   #>                                     (2.074)           (2.074)    #>                  cyl                -2.876 ***        -2.876     #>                                     (0.322)           (0.322)    #>                                ───────────────────────────────── #>                  N                  32                32         #>                  R2                  0.726             0.990     #>                  logLik            -81.653           -81.653     #>                  AIC               169.306           169.306     #>                ───────────────────────────────────────────────── #>                  *** p < 0.001; ** p < 0.01; * p < 0.05.         #>  #> Column names: names, model1, model2  if (requireNamespace(\"nnet\", quietly = TRUE)) {   mnl <- nnet::multinom(gear ~ mpg, mtcars)   tidied <- broom::tidy(mnl)   mnl4 <- tidy_replace(mnl, tidied[tidied$y.level == 4, ])   mnl5 <- tidy_replace(mnl, tidied[tidied$y.level == 5, ])   huxreg(mnl4, mnl5, statistics = \"nobs\") } #> # weights:  9 (4 variable) #> initial  value 35.155593  #> iter  10 value 23.131901 #> final  value 23.129234  #> converged #>                ───────────────────────────────────────────────── #>                                       (1)             (2)        #>                                ───────────────────────────────── #>                  (Intercept)         -9.502 **        -7.691 *   #>                                      (3.262)          (3.232)    #>                  mpg                  0.475 **         0.358 *   #>                                      (0.168)          (0.168)    #>                                ───────────────────────────────── #>                  nobs                32               32         #>                ───────────────────────────────────────────────── #>                  *** p < 0.001; ** p < 0.01; * p < 0.05.         #>  #> Column names: names, model1, model2"},{"path":"/reference/to_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Create HTML representing a huxtable — print_html","title":"Create HTML representing a huxtable — print_html","text":"functions print return HTML table. print_html also prepends <style> block defining basic CSS classes.","code":""},{"path":"/reference/to_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create HTML representing a huxtable — print_html","text":"","code":"print_html(ht, ...)  print_notebook(ht, ...)  to_html(ht, ...)  as_html(ht, ...)"},{"path":"/reference/to_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create HTML representing a huxtable — print_html","text":"ht huxtable. ... Arguments passed methods. currently used.","code":""},{"path":"/reference/to_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create HTML representing a huxtable — print_html","text":"to_html returns HTML string. as_html wraps to_html returns htmltools::HTML object. print_html prints string returns NULL. print_notebook prints HTML output suitable use RStudio interactive notebook.","code":""},{"path":[]},{"path":"/reference/to_html.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create HTML representing a huxtable — print_html","text":"","code":"ht <- hux(a = 1:3, b = letters[1:3]) to_html(ht) #> [1] \"<table class=\\\"huxtable\\\" data-quarto-disable-processing=\\\"true\\\"  style=\\\"margin-left: auto; margin-right: auto;\\\">\\n<col><col><thead>\\n<tr>\\n<th class=\\\"huxtable-cell huxtable-header\\\" style=\\\"text-align: right;  border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;      font-weight: normal;\\\">a<\/th><th class=\\\"huxtable-cell huxtable-header\\\" style=\\\"border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;      font-weight: normal;\\\">b<\/th><\/tr>\\n<\/thead>\\n<tbody>\\n<tr>\\n<td class=\\\"huxtable-cell\\\" style=\\\"text-align: right;  border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\\\">1<\/td><td class=\\\"huxtable-cell\\\" style=\\\"border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\\\">a<\/td><\/tr>\\n<tr>\\n<td class=\\\"huxtable-cell\\\" style=\\\"text-align: right;  border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\\\">2<\/td><td class=\\\"huxtable-cell\\\" style=\\\"border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\\\">b<\/td><\/tr>\\n<tr>\\n<td class=\\\"huxtable-cell\\\" style=\\\"text-align: right;  border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\\\">3<\/td><td class=\\\"huxtable-cell\\\" style=\\\"border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\\\">c<\/td><\/tr>\\n<\/tbody>\\n<\/table>\\n\" as_html(ht) #> <table class=\"huxtable\" data-quarto-disable-processing=\"true\"  style=\"margin-left: auto; margin-right: auto;\"> #> <col><col><thead> #> <tr> #> <th class=\"huxtable-cell huxtable-header\" style=\"text-align: right;  border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;      font-weight: normal;\">a<\/th><th class=\"huxtable-cell huxtable-header\" style=\"border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;      font-weight: normal;\">b<\/th><\/tr> #> <\/thead> #> <tbody> #> <tr> #> <td class=\"huxtable-cell\" style=\"text-align: right;  border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\">1<\/td><td class=\"huxtable-cell\" style=\"border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\">a<\/td><\/tr> #> <tr> #> <td class=\"huxtable-cell\" style=\"text-align: right;  border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\">2<\/td><td class=\"huxtable-cell\" style=\"border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\">b<\/td><\/tr> #> <tr> #> <td class=\"huxtable-cell\" style=\"text-align: right;  border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\">3<\/td><td class=\"huxtable-cell\" style=\"border-style: solid solid solid solid; border-width: 0pt 0pt 0pt 0pt;\">c<\/td><\/tr> #> <\/tbody> #> <\/table> #>"},{"path":"/reference/to_latex.html","id":null,"dir":"Reference","previous_headings":"","what":"Create LaTeX representing a huxtable — print_latex","title":"Create LaTeX representing a huxtable — print_latex","text":"Create LaTeX representing huxtable","code":""},{"path":"/reference/to_latex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create LaTeX representing a huxtable — print_latex","text":"","code":"print_latex(ht, ...)  to_latex(ht, tabular_only = FALSE, ...)"},{"path":"/reference/to_latex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create LaTeX representing a huxtable — print_latex","text":"ht huxtable. ... Arguments passed methods. tabular_only Return LaTeX tabular, surrounding float.","code":""},{"path":"/reference/to_latex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create LaTeX representing a huxtable — print_latex","text":"to_latex returns string. print_latex prints string returns NULL.","code":""},{"path":"/reference/to_latex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create LaTeX representing a huxtable — print_latex","text":"appear rmarkdown document Pandoc markdown +raw_attribute extension available, to_latex return LaTeX surrounded \"raw attribute code block\" (see https://pandoc.org/MANUAL.html#extension-raw_attribute). helps protect pandoc accidentally escaping TeX code.","code":""},{"path":[]},{"path":"/reference/to_latex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create LaTeX representing a huxtable — print_latex","text":"","code":"ht <- huxtable(   a = 1:3,   b = letters[1:3] ) print_latex(ht) #>  #>   \\providecommand{\\huxb}[2]{\\arrayrulecolor[RGB]{#1}\\global\\arrayrulewidth=#2pt} #>   \\providecommand{\\huxvb}[2]{\\color[RGB]{#1}\\vrule width #2pt} #>   \\providecommand{\\huxtpad}[1]{\\rule{0pt}{#1}} #>   \\providecommand{\\huxbpad}[1]{\\rule[-#1]{0pt}{#1}} #>  #> \\begin{table}[ht] #> \\begin{centerbox} #> \\begin{threeparttable} #>  \\setlength{\\tabcolsep}{0pt} #> \\begin{tabular}{l l} #>  #>  #> \\hhline{} #> \\arrayrulecolor{black} #>  #> \\multicolumn{1}{!{\\huxvb{0, 0, 0}{0}}r!{\\huxvb{0, 0, 0}{0}}}{\\huxtpad{6pt + 1em}\\raggedleft \\hspace{6pt} a \\hspace{6pt}\\huxbpad{6pt}} & #> \\multicolumn{1}{l!{\\huxvb{0, 0, 0}{0}}}{\\huxtpad{6pt + 1em}\\raggedright \\hspace{6pt} b \\hspace{6pt}\\huxbpad{6pt}} \\tabularnewline[-0.5pt] #>  #>  #> \\hhline{} #> \\arrayrulecolor{black} #>  #> \\multicolumn{1}{!{\\huxvb{0, 0, 0}{0}}r!{\\huxvb{0, 0, 0}{0}}}{\\huxtpad{6pt + 1em}\\raggedleft \\hspace{6pt} 1 \\hspace{6pt}\\huxbpad{6pt}} & #> \\multicolumn{1}{l!{\\huxvb{0, 0, 0}{0}}}{\\huxtpad{6pt + 1em}\\raggedright \\hspace{6pt} a \\hspace{6pt}\\huxbpad{6pt}} \\tabularnewline[-0.5pt] #>  #>  #> \\hhline{} #> \\arrayrulecolor{black} #>  #> \\multicolumn{1}{!{\\huxvb{0, 0, 0}{0}}r!{\\huxvb{0, 0, 0}{0}}}{\\huxtpad{6pt + 1em}\\raggedleft \\hspace{6pt} 2 \\hspace{6pt}\\huxbpad{6pt}} & #> \\multicolumn{1}{l!{\\huxvb{0, 0, 0}{0}}}{\\huxtpad{6pt + 1em}\\raggedright \\hspace{6pt} b \\hspace{6pt}\\huxbpad{6pt}} \\tabularnewline[-0.5pt] #>  #>  #> \\hhline{} #> \\arrayrulecolor{black} #>  #> \\multicolumn{1}{!{\\huxvb{0, 0, 0}{0}}r!{\\huxvb{0, 0, 0}{0}}}{\\huxtpad{6pt + 1em}\\raggedleft \\hspace{6pt} 3 \\hspace{6pt}\\huxbpad{6pt}} & #> \\multicolumn{1}{l!{\\huxvb{0, 0, 0}{0}}}{\\huxtpad{6pt + 1em}\\raggedright \\hspace{6pt} c \\hspace{6pt}\\huxbpad{6pt}} \\tabularnewline[-0.5pt] #>  #>  #> \\hhline{} #> \\arrayrulecolor{black} #> \\end{tabular} #> \\end{threeparttable}\\par\\end{centerbox} #>  #> \\end{table}"},{"path":"/reference/to_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Markdown representing a huxtable — print_md","title":"Create Markdown representing a huxtable — print_md","text":"Create Markdown representing huxtable","code":""},{"path":"/reference/to_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Markdown representing a huxtable — print_md","text":"","code":"print_md(ht, ...)  to_md(ht, header = TRUE, min_width = getOption(\"width\")/4, max_width = 80, ...)"},{"path":"/reference/to_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Markdown representing a huxtable — print_md","text":"ht huxtable. ... Arguments passed methods. header Logical. Print first row header? min_width Minimum width -screen characters result. max_width Maximum width -screen characters result. Overrides min_width.","code":""},{"path":"/reference/to_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Markdown representing a huxtable — print_md","text":"to_md() returns string. print_md() prints string returns NULL.","code":""},{"path":"/reference/to_md.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Markdown representing a huxtable — print_md","text":"align caption properties used. markdown format multiline_tables, see pandoc documentation.","code":""},{"path":[]},{"path":"/reference/to_md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Markdown representing a huxtable — print_md","text":"","code":"print_md(jams) #> ----------------------- #>  Type            Price  #> ----------- ----------- #>  Strawberry       1.90  #>                         #>  Raspberry        2.10  #>                         #>  Plum             1.80  #> ----------------------- #>"},{"path":"/reference/to_rtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create RTF representing a huxtable — print_rtf","title":"Create RTF representing a huxtable — print_rtf","text":"functions print return RTF character string.","code":""},{"path":"/reference/to_rtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create RTF representing a huxtable — print_rtf","text":"","code":"print_rtf(ht, fc_tables = rtf_fc_tables(ht), ...)  to_rtf(ht, fc_tables = rtf_fc_tables(ht), ...)"},{"path":"/reference/to_rtf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create RTF representing a huxtable — print_rtf","text":"ht huxtable. fc_tables See rtf_fc_tables(). ... Arguments passed methods.","code":""},{"path":"/reference/to_rtf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create RTF representing a huxtable — print_rtf","text":"to_rtf returns string representing RTF table. fc_tables attribute returned string contain fc_tables object passed (autocreated). print_rtf prints string returns NULL.","code":""},{"path":"/reference/to_rtf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create RTF representing a huxtable — print_rtf","text":"RTF files use single per-document table colors, one fonts. printing multiple huxtables document, need make sure font color table set correctly RTF tables refer back . See rtf_fc_tables(). Prepare huxtables; Call rtf_fc_tables(), passing huxtables; Print rtfFCTables object RTF document header; Pass rtfFCTables object call print_rtf.","code":""},{"path":"/reference/to_rtf.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Create RTF representing a huxtable — print_rtf","text":"rmarkdown\"s rtf_document can\"t yet print customized color tables, custom fonts colors won\"t work context. col_width() width() can numeric \"pt\". wrap() effect: cell contents always wrap. rotation() can 90 270, .e. text going .","code":""},{"path":[]},{"path":"/reference/to_rtf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create RTF representing a huxtable — print_rtf","text":"","code":"print_rtf(jams) #>  #> { #> \\trowd #> \\trqc \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx2160  #> \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx4320 \\pard\\intbl\\ql{Type}\\cell #> \\pard\\intbl\\qr{Price}\\cell #> \\row #> } #>  #> { #> \\trowd #> \\trqc \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx2160  #> \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx4320 \\pard\\intbl\\ql{Strawberry}\\cell #> \\pard\\intbl\\qr{1.90}\\cell #> \\row #> } #>  #> { #> \\trowd #> \\trqc \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx2160  #> \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx4320 \\pard\\intbl\\ql{Raspberry}\\cell #> \\pard\\intbl\\qr{2.10}\\cell #> \\row #> } #>  #> { #> \\trowd #> \\trqc \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx2160  #> \\clbrdrt\\clbrdrl\\clbrdrb\\clbrdrr\\clvertalt\\clpadfl3\\clpadl120 \\clpadft3\\clpadt120 \\clpadfb3\\clpadb120 \\clpadfr3\\clpadr120 \\cellx4320 \\pard\\intbl\\ql{Plum}\\cell #> \\pard\\intbl\\qr{1.80}\\cell #> \\row #> }"},{"path":"/reference/to_screen.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a huxtable on screen — print_screen","title":"Print a huxtable on screen — print_screen","text":"Print huxtable screen","code":""},{"path":"/reference/to_screen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a huxtable on screen — print_screen","text":"","code":"print_screen(ht, ...)  to_screen(   ht,   min_width = ceiling(getOption(\"width\")/6),   max_width = getOption(\"width\", Inf),   compact = TRUE,   colnames = TRUE,   color = getOption(\"huxtable.color_screen\", default = TRUE),   ... )"},{"path":"/reference/to_screen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a huxtable on screen — print_screen","text":"ht huxtable. ... Passed to_screen. min_width Minimum width -screen characters result. max_width Maximum width -screen characters result. Overrides min_width. compact Logical. save space, print lines empty horizontal borders. colnames Logical. Whether print colum names. color Logical. Whether print huxtable color (requires crayon package).","code":""},{"path":"/reference/to_screen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a huxtable on screen — print_screen","text":"to_screen returns string. print_screen prints string returns NULL.","code":""},{"path":"/reference/to_screen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a huxtable on screen — print_screen","text":"Screen display shows following features: Table caption positioning Merged cells Cell alignment Borders Cell background border color (\"crayon\" package installed) Text color, bold italic (\"crayon\" package installed) Cell padding, widths heights shown.","code":""},{"path":[]},{"path":"/reference/to_screen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a huxtable on screen — print_screen","text":"","code":"bottom_border(jams)[1, 1:2] <- 1 bold(jams)[1, 1:2] <- TRUE jams <- map_text_color(   jams,   by_regex(\"berry\" = \"red\") )  print_screen(jams) #>                               Type           Price   #>                             ──────────────────────── #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/to_typst.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Typst markup representing a huxtable — print_typst","title":"Create Typst markup representing a huxtable — print_typst","text":"functions print return Typst table.","code":""},{"path":"/reference/to_typst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Typst markup representing a huxtable — print_typst","text":"","code":"print_typst(ht, ...)  to_typst(ht, ...)"},{"path":"/reference/to_typst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Typst markup representing a huxtable — print_typst","text":"ht huxtable. ... Arguments passed methods. currently used.","code":""},{"path":"/reference/to_typst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Typst markup representing a huxtable — print_typst","text":"to_typst returns Typst string. print_typst prints string returns NULL.","code":""},{"path":[]},{"path":"/reference/to_typst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Typst markup representing a huxtable — print_typst","text":"","code":"ht <- huxtable(a = 1:3, b = letters[1:3]) to_typst(ht) #> [1] \"#figure(\\ntable(\\n  columns: (auto, auto),\\n  stroke: none,\\n  table.header(\\n    table.cell(align: (right + top))[a], table.cell(align: (left + top))[b]\\n  ),\\n  table.cell(align: (right + top))[1], table.cell(align: (left + top))[a],\\n  table.cell(align: (right + top))[2], table.cell(align: (left + top))[b],\\n  table.cell(align: (right + top))[3], table.cell(align: (left + top))[c]\\n),\\ncaption: none\\n)\""},{"path":"/reference/valign.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the vertical alignment of cell content — valign","title":"Set the vertical alignment of cell content — valign","text":"Allowed values \"top\", \"middle\", \"bottom\" NA.","code":""},{"path":"/reference/valign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the vertical alignment of cell content — valign","text":"","code":"valign(ht)  valign(ht) <- value  set_valign(ht, row, col, value)  map_valign(ht, row, col, fn)"},{"path":"/reference/valign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the vertical alignment of cell content — valign","text":"ht huxtable. value character vector matrix. Set NA reset default, \"top\". row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/valign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the vertical alignment of cell content — valign","text":"Vertical alignment may work short text LaTeX. Defining row heights row_height() may help.","code":""},{"path":"/reference/valign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the vertical alignment of cell content — valign","text":"","code":"valign(jams) <- \"top\" valign(jams) #>     Type  Price #> 1   \"top\" \"top\" #> 1.1 \"top\" \"top\" #> 2   \"top\" \"top\" #> 3   \"top\" \"top\"  jams2 <- set_valign(jams, \"bottom\") valign(jams2) #>     Type     Price    #> 1   \"bottom\" \"bottom\" #> 1.1 \"bottom\" \"bottom\" #> 2   \"bottom\" \"bottom\" #> 3   \"bottom\" \"bottom\"  jams3 <- set_valign(jams, 2:3, 1, \"bottom\") valign(jams3) #>     Type     Price #> 1   \"top\"    \"top\" #> 1.1 \"bottom\" \"top\" #> 2   \"bottom\" \"top\" #> 3   \"top\"    \"top\"  jams4 <- map_valign(jams, by_rows(   \"bottom\",   \"top\" )) valign(jams4) #>     Type     Price    #> 1   \"bottom\" \"bottom\" #> 1.1 \"top\"    \"top\"    #> 2   \"bottom\" \"bottom\" #> 3   \"top\"    \"top\""},{"path":"/reference/width.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the table width — width","title":"Set the table width — width","text":"width() sets width entire table, col_width() sets width individual columns. numeric width treated proportion f surrounding block width (HTML) text width (LaTeX). character width must valid CSS LaTeX dimension.","code":""},{"path":"/reference/width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the table width — width","text":"","code":"width(ht)  width(ht) <- value  set_width(ht, value)"},{"path":"/reference/width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the table width — width","text":"ht huxtable. value number string. Set NA reset default, NA_real_.","code":""},{"path":"/reference/width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the table width — width","text":"property() returns property value(s). set_property() map_property() return modified huxtable.","code":""},{"path":[]},{"path":"/reference/width.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the table width — width","text":"","code":"set_width(jams, 0.8) #>                               Type           Price   #>                               Strawberry      1.90   #>                               Raspberry       2.10   #>                               Plum            1.80   #>  #> Column names: Type, Price"},{"path":"/reference/wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap cell content over multiple lines — wrap","title":"Wrap cell content over multiple lines — wrap","text":"Text wrapping works table width() set. particular, want insert newlines cells, set value width() set wrap TRUE.","code":""},{"path":"/reference/wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap cell content over multiple lines — wrap","text":"","code":"wrap(ht)  wrap(ht) <- value  set_wrap(ht, row, col, value)  map_wrap(ht, row, col, fn)"},{"path":"/reference/wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap cell content over multiple lines — wrap","text":"ht huxtable. value logical vector matrix. Set NA reset default, TRUE. row row specifier. See rowspecs details. col optional column specifier. fn mapping function. See mapping-functions details.","code":""},{"path":"/reference/wrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap cell content over multiple lines — wrap","text":"","code":"long_text <- paste(   rep(\"Some long text.\", 10),   collapse = \" \" ) ht <- huxtable(Long = long_text) width(ht) <- 0.2 wrap(ht) <- TRUE  if (FALSE) { # \\dontrun{ quick_html(ht) } # }"},{"path":"/news/index.html","id":"huxtable-570","dir":"Changelog","previous_headings":"","what":"huxtable 5.7.0","title":"huxtable 5.7.0","text":"CRAN release: 2025-08-18","code":""},{"path":"/news/index.html","id":"breaking-changes-5-7-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"huxtable 5.7.0","text":"Functions longer generic, can’t subclass huxtable object. AFAIK nobody ever done ; ’m wrong, please tell . Reworked internals, help OpenAI Codex.","code":""},{"path":"/news/index.html","id":"other-changes-5-7-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"huxtable 5.7.0","text":"HTML tables now wrap header rows <thead> (using <th> cells) body rows <tbody> header rows top table. Added Typst export via to_typst() print_typst(). Quarto integration available well quick_typst(), quick_typst_pdf(), quick_typst_png(), quick_typst_svg() functions. HTML output now uses CSS classes shared <style> block instead long inline styles. Added as_html() obtaining table htmltools tags. to_screen() now displays double, dashed dotted border styles.","code":""},{"path":"/news/index.html","id":"huxtable-560","dir":"Changelog","previous_headings":"","what":"huxtable 5.6.0","title":"huxtable 5.6.0","text":"CRAN release: 2025-03-05","code":""},{"path":"/news/index.html","id":"breaking-changes-5-6-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"huxtable 5.6.0","text":"Removed underscore dplyr verbs (slice_, select_ etc.) long deprecated dplyr .","code":""},{"path":"/news/index.html","id":"other-changes-5-6-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"huxtable 5.6.0","text":"Bugfix: add newline end report_latex_dependencies() output. Thanks @ceresek. can now add multiple huxtables Excel worksheet as_Workbook(). Suggestion @oobd.","code":""},{"path":"/news/index.html","id":"huxtable-557","dir":"Changelog","previous_headings":"","what":"huxtable 5.5.7","title":"huxtable 5.5.7","text":"CRAN release: 2024-10-01 Bugfix: fix quarto referencing quarto 1.5 Bugfix: integer overflow large huxtables. Thanks @kpagacz.","code":""},{"path":"/news/index.html","id":"huxtable-556","dir":"Changelog","previous_headings":"","what":"huxtable 5.5.6","title":"huxtable 5.5.6","text":"CRAN release: 2024-02-15 Bugfix: quarto cross-referencing giving many warnings.","code":""},{"path":"/news/index.html","id":"huxtable-555","dir":"Changelog","previous_headings":"","what":"huxtable 5.5.5","title":"huxtable 5.5.5","text":"CRAN release: 2024-02-08 Bugfix: quarto cross-referencing doesn’t work PDF quarto version 1.4. See ?huxtable-FAQ workarounds. Bugfix: by_cases() wasn’t picking variables caller environment. huxtable 5.5.4 never released due failing reverse dependency check.","code":""},{"path":"/news/index.html","id":"huxtable-553","dir":"Changelog","previous_headings":"","what":"huxtable 5.5.3","title":"huxtable 5.5.3","text":"CRAN release: 2023-12-09 Bugfix: disable quarto styling HTML tables. can reenable quarto processing options(huxtable.quarto_process = TRUE). Bugfix: borders weren’t working merged cells Word documents.","code":""},{"path":"/news/index.html","id":"huxtable-552","dir":"Changelog","previous_headings":"","what":"huxtable 5.5.2","title":"huxtable 5.5.2","text":"CRAN release: 2022-12-16 Update by_cases() work dplyr 1.1.0. Within by_cases() formulas, . now vector rather matrix dplyr version 1.1.0 detected. Thanks @DavisVaughan. Add package checks quick_* functions. Thanks @reuning.","code":""},{"path":"/news/index.html","id":"huxtable-551","dir":"Changelog","previous_headings":"","what":"huxtable 5.5.1","title":"huxtable 5.5.1","text":"CRAN release: 2022-11-12 CSS borders now set explicitly even set 0. Bugfix: shell-quote files quick_* functions. Thanks @ceresek. Bugfix: cope adjustbox version “1.3a” among latex dependencies.","code":""},{"path":"/news/index.html","id":"huxtable-550","dir":"Changelog","previous_headings":"","what":"huxtable 5.5.0","title":"huxtable 5.5.0","text":"CRAN release: 2022-06-15 Quarto labels captions override huxtable-provided ones. Quarto style references like @table-label work quarto labels. Please report bugs! New column_to_header() function converts column header rows. New as_hux() method grouped_df objects optionally converts groups header rows. New convenience functions stripe_rows() stripe_columns(). Add format ... options fmt_percent() allow flexible formatting via formatC(). add_footnote() gets explicit number_format argument NA default. Bugfix: infinite loop wide characters to_screen(). Bugfix: duplicate colnames exporting huxreg(..., error_pos = \"right\") flextable. Bugfix: bookdown-style references weren’t working blogdown.","code":""},{"path":"/news/index.html","id":"huxtable-540","dir":"Changelog","previous_headings":"","what":"huxtable 5.4.0","title":"huxtable 5.4.0","text":"CRAN release: 2021-05-14 New behaviour: setting colspan() rowspan() overwrites content cells shadowed. New option huxtable.latex_siunitx_align allows use LaTeX siunitx package handle decimal point alignment. FALSE default. Bugfix: centre alignment working print_screen(). Bugfix: failure to_md() recent versions stringi package. Bugfix: repeating single row subset, like ht[c(1, 1, 2, 3), ], setting colspan = 2 repeated row. Bugfix: zero-argument subset replacement like ht[] <- ... wasn’t working.","code":"ht <- hux(c(1, 1), c(2, 2), c(3, 3)) ht <- set_all_borders(ht) colspan(ht)[1, 1] <- 3  # old behaviour                 ht[, c(2, 1, 3)] ##   +--------------------------+ ##   |                  2       | ##   +--------+--------+--------+ ##   |      2 |      1 |      3 | ##   +--------+--------+--------+  # new behaviour ht[, c(2, 1, 3)] ##   +--------------------------+ ##   |                  1       | ##   +--------+--------+--------+ ##   |      2 |      1 |      3 | ##   +--------+--------+--------+"},{"path":"/news/index.html","id":"huxtable-530","dir":"Changelog","previous_headings":"","what":"huxtable 5.3.0","title":"huxtable 5.3.0","text":"CRAN release: 2021-05-01 Improve decimal alignment LaTeX align(ht) == \".\". may change appearance documents. Allow tidy_override() extend columns tidy glance. Bugfix: #196 ^ giving errors LaTeX.","code":""},{"path":"/news/index.html","id":"huxtable-520","dir":"Changelog","previous_headings":"","what":"huxtable 5.2.0","title":"huxtable 5.2.0","text":"CRAN release: 2021-02-14 Add table_environment property can use e.g. \"table*\" TeX. Bugfix: print_screen(h, colnames = FALSE) didn’t print final newline. Bugfix: italic markdown printed underlined TeX. Minor test update compatibility broom.","code":""},{"path":"/news/index.html","id":"huxtable-511","dir":"Changelog","previous_headings":"","what":"huxtable 5.1.1","title":"huxtable 5.1.1","text":"CRAN release: 2020-10-27 Minor test update compatibility broom. Fixes R 4.1.0.","code":""},{"path":"/news/index.html","id":"huxtable-510","dir":"Changelog","previous_headings":"","what":"huxtable 5.1.0","title":"huxtable 5.1.0","text":"CRAN release: 2020-09-18 as_flextable() now exports markdown cells RTF, Word help optional ftExtra package. Thanks @atusy adding feature. Improvements markdown screen export. now uses optional fansi package. New feature: as_Workbook() gains start_row start_col arguments, write huxtable Excel worksheet starting particular row column. New feature: huxreg() gains glance_args argument pass arguments glance(). New feature: options(huxtable.long_minus = TRUE) try use long minus signs numbers. default FALSE. probably become TRUE future version. Bugfix: insert_row/column(..., = 0) unsetting table properties. Bugfix: unicode characters 32767 incorrectly represented RTF. Thanks @kaigu1990. Bugfix: columns collapsed as_Workbook(). Bugfix: style_cells didn’t work unless huxtable search path. Bugfix: merge_repeated_rows merged NA rows incorrectly. Bugfix: number format set correctly huxreg()’s note. Bugfix: huxreg(), tidy_args threw error first argument tidy() named list. Bugfix: tidy_replace() broken. Clearer error messages tidy_override() extend = FALSE. future, extend probably default TRUE.","code":""},{"path":"/news/index.html","id":"other-news-5-1-0","dir":"Changelog","previous_headings":"","what":"Other news:","title":"huxtable 5.1.0","text":"Huxtable received first Patreon sponsor! Thanks Ross Mattheis.","code":""},{"path":"/news/index.html","id":"huxtable-500","dir":"Changelog","previous_headings":"","what":"huxtable 5.0.0","title":"huxtable 5.0.0","text":"CRAN release: 2020-06-15 Huxtable 5.0.0 brings numerous changes. user-friendly introduction, see https://hughjonesd.github.io/whats-new--huxtable-5.0.0.html.","code":""},{"path":"/news/index.html","id":"breaking-changes-5-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"huxtable 5.0.0","text":"changes LaTeX output. LaTeX \\tabcolsep now set 0 within huxtable tables, left right padding now take effect even wrap FALSE. default LaTeX table environment now “tabular” unless width set. width set, “tabularx”. wrap matters width set. Otherwise, cell wrapping . \\centerbox macro LaTeX “adjustbox” package used centre tables. improve centring tables wide. may need update LaTeX “adjustbox” package recent version. check_latex_dependencies() can inform . previously signalled, add_colnames now become TRUE default huxtable() as_huxtable(). Set options(huxtable.add_colnames = FALSE) go back old behaviour. Newlines cell contents now respected (LaTeX, long wrap = TRUE width set). Huxtable borders reworked, fixing longstanding bugs adding new features. Borders now automatically collapsed. example: set border columns jams 0.4, overwriting previous value. line expect. example, following code now probably want: instead old behaviour: set_left_border(), set_all_borders() friends use default value 0.4. set default border, write e.g. new brdr() class encapsulates border thickness, style colour. can set properties writing, e.g.: left_border(ht) friends return brdr object. access border thickness, write brdr_thickness(left_border(ht)). Various deprecated items removed: 3-argument form set_*. Instead, use map_*. byrow argument set_*. Instead, use map_* by_cols(). error_style pad_decimal arguments huxreg. Use error_format align(hx) <- \".\". (), is_a_number() pad_decimal() functions. Use map_* functions, ! .na(.numeric(x)), align(ht) <- \".\". Default padding increased 6 points. default, width() now unset. default, wrap() now TRUE. every() renamed stripe(), avoid clash purrr::every(). everywhere, evens odds still . little-used ability set copy_cell_props character vector rbind.huxtable cbind.huxtable removed. can still set FALSE. add_rows() add_columns() now always call rbind.huxtable() cbind.huxtable() return huxtable. Huxtable longer supports dplyr versions less 0.7.0 (released mid-2017). set_cell_properties() renamed style_cells(). retained soft-deprecated alias. Various themes tweaked: theme_basic() now bold headers header column default. theme_plain() defaults position = \"centre\". theme_striped() uses grey stripes, white border, subtler headers. theme_article() thinner borders.","code":"jams %>%      set_right_border(everywhere, 1, 1) %>%      set_left_border(everywhere, 2, 0.4) jams %>%     set_rowspan(2, 1, 3) %>%     set_bottom_border(4, everywhere, 1) ##                 Type              Price ##                 Strawberry         1.90 ##                                    2.10 ##                                    1.80 ##               --------------------------- jams %>%     set_rowspan(2, 1, 3) %>%     set_bottom_border(4, everywhere, 1) ##                 Type           Price ##                 Strawberry      1.90 ##                                 2.10 ##                                 1.80 ##                            ----------- as_hux(head(iris)) %>%        set_bottom_border(1, everywhere) as_hux(jams) %>%        set_bottom_border(1, everywhere, brdr(1, \"dotted\", \"darkgreen\"))"},{"path":"/news/index.html","id":"other-changes-5-0-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"huxtable 5.0.0","text":"can now use markdown within table cells. Use set_markdown(ht, rows, cols) turn . use convenience function set_markdown_contents() set cell contents interpreted markdown. Markdown works HTML LaTeX. ’s basic support -screen display. Huxtable now concept header row columns. default, data frame column names headers. set rows headers, use set_header_rows(ht, row_numbers, TRUE). columns, use header_cols() set_header_cols(). New functions style_headers(), style_header_cols(), style_header_rows() set multiple properties headers. themes, header_row/col = TRUE set first row/col header, style header rows/cols. set_bold() set_italic() now use default value TRUE. can write e.g. Console output R now shows table position caption position. default, huxtable now sets labels current knitr chunk label, one. consistent kable(). bookdown, can e.g. Set options(huxtable.autolabel = FALSE) turn behaviour. one-argument form [ now works huxtables just data frames. example, ht[2:3] selects columns 2 3. New functions fmt_percent() fmt_pretty() passing number_format(): split_across() split_down() split huxtable list sub-tables. Headers can automatically included. restack_across() restack_down() split huxtable, join back . useful making table fit page. merge_across() merge_down() merge area cells horizontally across rows, vertically columns. New functions set_lr_borders()/_border_colors()/_border_styles()/_padding() set left right borders padding simultaneously. New functions set_tb_borders() etc. set top bottom properties simultaneously. map_ equivalents . set_outer_padding() sets padding around range cells, similarly set_outer_borders(). new table-level property, caption_width(), allows set width caption. default, NA, sets width equal table width. two new themes: theme_compact() theme_bright(). huxreg(), new function tidy_replace() allows replace output tidy(x) entirely. huxtable now sets options(huxtable.knit_print_df = TRUE) attached, loaded. huxtable supports dplyr::relocate(), new dplyr 1.0.0. Improvements as_flextable(). Improvements quick_pptx() (thanks @davidgohel). Bugfixes options(huxtable.use_fontspec = TRUE). Bugfix: add_rownames = \"string\" now works promised. Bugfix: non-ASCII characters now supported RTF.","code":"as_hux(head(iris)) %>%        set_bold(1, everywhere) Some iris species are shown in \\@ref(tab:mytable):  ```r as_hux(iris) ``` jams$Sugar <-c (\"Sugar content\", 0.4, 0.35, 0.45) set_number_format(jams, -1, \"Sugar\", fmt_percent(1))"},{"path":"/news/index.html","id":"other-news-5-0-0","dir":"Changelog","previous_headings":"","what":"Other news","title":"huxtable 5.0.0","text":"New versions gtsummary package as_huxtable() method. Package texreg CRAN includes huxtablereg() function creating table regression outputs.","code":""},{"path":"/news/index.html","id":"huxtable-471","dir":"Changelog","previous_headings":"","what":"huxtable 4.7.1","title":"huxtable 4.7.1","text":"CRAN release: 2020-01-08 expss package now supports export huxtables. by_quantiles(), by_equal_groups() by_colorspace() gained colwise argument, calculates quantiles colors separately column. Add caption support as_flextable() (thanks @sjewo).","code":""},{"path":"/news/index.html","id":"huxtable-470","dir":"Changelog","previous_headings":"","what":"huxtable 4.7.0","title":"huxtable 4.7.0","text":"CRAN release: 2019-10-03 Better error messages. New merge_repeated_rows() function: merge repeated rows single cell. insert_row(ht, \"blah\", \"\", \"\", \"\", \"\", ...) can written insert_row(ht, \"blah\", fill = \"\"). colspan/rowspan set colspan/rowspan first cell inserted row/column.","code":""},{"path":"/news/index.html","id":"huxtable-461","dir":"Changelog","previous_headings":"","what":"huxtable 4.6.1","title":"huxtable 4.6.1","text":"CRAN release: 2019-08-06 Bugfix: right borders wrong place cells merged. Bugfix: chinese characters displaying wrongly to_screen().","code":""},{"path":"/news/index.html","id":"huxtable-460","dir":"Changelog","previous_headings":"","what":"huxtable 4.6.0","title":"huxtable 4.6.0","text":"CRAN release: 2019-06-24 Set options('huxtable.latex_use_fontspec') TRUE use portable font names TeX documents, LaTeX “fontspec” package. Bugfix: attributes copied wrongly subset assignment huxtables. Bugfix: text colors hux_logo(). Bugfix: rbind huxtable matrix wasn’t setting row_height correctly.","code":""},{"path":"/news/index.html","id":"huxtable-450","dir":"Changelog","previous_headings":"","what":"huxtable 4.5.0","title":"huxtable 4.5.0","text":"CRAN release: 2019-03-19 Add quick_latex() function. texreg package now includes huxtablereg function, analogous huxreg, outputs huxtable list regressions. available next version texreg.","code":""},{"path":"/news/index.html","id":"huxtable-440","dir":"Changelog","previous_headings":"","what":"huxtable 4.4.0","title":"huxtable 4.4.0","text":"CRAN release: 2019-03-03 Huxtables can now printed directly Word documents Powerpoint presentations, thanks flextable package recent versions Pandoc. (Powerpoint printing requires Pandoc >= 2.4.0.) New “wrapleft” “wrapright” options position() allow text wrapping around tables. New set_outer_border_colors() set_outer_border_styles() functions, like set_outer_borders(). Huxtable longer requires broom package, instead using generics package. use huxreg(), still need e.g. broom broom.mixed provide tidy() glance() methods specific models. Bugfix: tidy.tidy_override() glance.tidy_override() work even underlying object tidy() glance() method. Bugfix: huxtables option clash echo = TRUE Rmd pdf_document format. Bugfix: caption() height() weren’t playing nicely. Bugfix: mutate(..., copy_cell_props = FALSE) adding column named copy_cell_props. Bugfix: check_latex_dependencies install_latex_dependencies gave misleading errors. Enhancement: stars NULL huxreg, don’t print note default. Enhancement: use tinytex available, allowing autoinstallation latex packages.","code":""},{"path":"/news/index.html","id":"huxtable-430","dir":"Changelog","previous_headings":"","what":"huxtable 4.3.0","title":"huxtable 4.3.0","text":"CRAN release: 2018-11-07 work TeX. Tables now compile raw_attributes set. New map_xxx functions set properties variably cell values. Functions mapping properties variably: by_rows, by_values, by_ranges, by_quantiles etc. Correct bookdown labels now automatically created. New grey, blue, green orange themes. New “themes” vignette. New tidy_override function override p values etc. huxreg. New set_contents function change huxtable contents within dplyr pipes. Enhancement: left- right-aligned captions now set table LaTeX, using “threeparttable” package. need install using e.g. install_latex_dependencies() tlmgr already system. Enhancement: huxtable() friends, add_rownames = \"Colname\" now sets name new column. Improvements vignettes help files. Bugfix: to_md hang bold/italic cells.","code":""},{"path":"/news/index.html","id":"deprecated-4-3-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"huxtable 4.3.0","text":"3 argument form set_xxx functions deprecated, function. Use map_xxx instead. Argument byrow soft-deprecated. Use by_cols() instead.","code":""},{"path":"/news/index.html","id":"huxtable-421","dir":"Changelog","previous_headings":"","what":"huxtable 4.2.1","title":"huxtable 4.2.1","text":"CRAN release: 2018-10-26 Bugfix: wrap=TRUE caused squeezed text RTF.","code":""},{"path":"/news/index.html","id":"important-4-2-1","dir":"Changelog","previous_headings":"","what":"Important","title":"huxtable 4.2.1","text":"TeX code getting escaped pandoc. avoid , possible, huxtable now adds fenced code blocks round latex tables (see https://pandoc.org/MANUAL.html#extension-raw_attribute). must add md_extensions: +raw_attribute YAML header work, need recent (> 2.0.0) version Pandoc.","code":""},{"path":"/news/index.html","id":"huxtable-420","dir":"Changelog","previous_headings":"","what":"huxtable 4.2.0","title":"huxtable 4.2.0","text":"CRAN release: 2018-10-03 speedups: LaTeX 2-3x faster, as_Workbook 2-3x faster. Simplify LaTeX output using LaTeX commands. RTF support: new print_rtf, to_rtf quick_rtf functions. New border_style properties set “solid”, “double”, “dotted” “dashed” borders. (present, LaTeX allows “solid” “double”.) New merge_cells function, alternative interface colspan rowspan. New quick_pptx function print data frames huxtables Powerpoint. New install_latex_dependencies check_latex_dependencies utility functions. add_rows add_columns now accept data frames arguments. New theme_mondrian theme :-D Enhancement: print_md now handles bold italic cells. Enhancement: quick_pdf new width height options change paper size. Use CSS writing-mode possible text rotation. Note may break non-LTR languages. affects , please file issue. Bugfix: LaTeX didn’t compile height caption set. Bugfix: print_screen print_md hang wide huxtable. Tweaks documentation.","code":""},{"path":"/news/index.html","id":"huxtable-410","dir":"Changelog","previous_headings":"","what":"huxtable 4.1.0","title":"huxtable 4.1.0","text":"CRAN release: 2018-07-31 dplyr, knitr, rmarkdown packages moved “Suggests:”, lowering dependency load considerably. functionality still present. huxtable gives informative warning needed package installed. Code rewrites better performance maintainability: HTML 10x faster, LaTeX 4x faster. Documentation improvements. New tribble_hux function wrapping tibble::tribble() readable data input. New add_rows add_columns functions insert one rows middle huxtable. New option “huxtable.knitr_output_format” override default output format knitr documents. Numeric row heights column widths rescaled 1 huxtables cbinded/rbinded. LaTeX: points borders cross, priority given horizontal border color. Bugfix: property accessors wrong environment. Thanks Iñaki Úcar. Bugfix: row heights column widths weren’t copied cbind/rbind. Output works, usually warning. cbind rbind work. Bugfix: HTML cols printed ‘width: NA’. (undocumented) ability mix numeric non-numeric values padding /border widths removed. want number, set number string. Bugfix: HTML tables position “right” weren’t right-aligned. Nicer error messages rbinding objects different numbers rows. Vignette improvements. is_a_number deprecated. … cool new randomized hux_logo() ;-)","code":""},{"path":"/news/index.html","id":"huxtable-401","dir":"Changelog","previous_headings":"","what":"huxtable 4.0.1","title":"huxtable 4.0.1","text":"CRAN release: 2018-07-03 Improved formatting Excel output. New format method returns result to_html, to_latex etc. appropriate. Bugfix: to_html printing e.g. “left-border: NA;” cell CSS. Bugfix: set_all_* working huxtable attached. Bugfix: as_Workbook failing non-numeric width. Bugfix: hux_logo using multiple fonts, fails Excel output. Bugfix: as_flextable borders working cells colspan > 1. Documentation bugfixes. Compatibility broom 5.0.0 - thanks @alexpghayes","code":""},{"path":"/news/index.html","id":"huxtable-400","dir":"Changelog","previous_headings":"","what":"huxtable 4.0.0","title":"huxtable 4.0.0","text":"CRAN release: 2018-06-02 New theme_plain theme. default value add_colnames going become TRUE. present remains FALSE. Set options(\"huxtable.add_colnames\") TRUE FALSE set default avoid warnings future. quick_* functions now automatically open documents used interactively. Use open = FALSE avoid. Tweak top bottom margins HTML tables. pad_decimal deprecated favour align(ht) <- \".\". huxreg continues warning statistics unavailable models.","code":""},{"path":"/news/index.html","id":"breaking-changes-4-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"huxtable 4.0.0","text":"Set options(\"huxtable.knit_print_df\") FALSE don’t want . default data frames printed using theme_plain theme. Set options(“huxtable.knit_print_df_theme”) different one-argument function want use different theme. new autoformat argument lets huxtable() as_huxtable() automatically choose alignment number format based column type. Set options(\"huxtable.autoformat\") FALSE turn feature default. default value number_format changed “%5.3g” “%.3g”, longer space-pads numbers. as_flextable now print column names header. matches standard huxtable behaviour whereby headers “just another row/column”. get old behaviour, use colnames_to_header = TRUE.","code":""},{"path":"/news/index.html","id":"bugfixes-4-0-0","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"huxtable 4.0.0","text":"Bugfix: Date datetime columns converted numbers add_colnames. LaTeX bugfix: background colors printing extra space. huxreg never using built-confidence intervals. set max_width screen width (thanks @jacob-long) misaligned decimal points Various bugfixes number_format, huxreg, as_hux.table, as_flextable.","code":""},{"path":"/news/index.html","id":"huxtable-300","dir":"Changelog","previous_headings":"","what":"huxtable 3.0.0","title":"huxtable 3.0.0","text":"CRAN release: 2018-02-23 Output Excel workbooks using openxlsx package. New quick_xlsx function. dplyr select helpers now work inside set_* column specifications: e.g. set_bold(ht, 1:3, matches(“ab”), TRUE) Column names can now used argument insert_column. quick_* functions: file argument explicitly specified, confirm overwrites manually, fail called non-interactively. Add pointless quote marks Description Title… don’t make rules. Don’t apply number_format negative exponents (e.g. 1.12e-3). New tidy_args argument huxreg allows per-model customization call tidy.","code":""},{"path":"/news/index.html","id":"breaking-changes-3-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"huxtable 3.0.0","text":"quick_xxx functions without explicit file argument throw error called non-interactively, prompt overwriting files called interactively.","code":""},{"path":"/news/index.html","id":"huxtable-202","dir":"Changelog","previous_headings":"","what":"huxtable 2.0.2","title":"huxtable 2.0.2","text":"CRAN release: 2018-02-08 Don’t apply number_format exponents scientific notation. Turn tests CRAN, fail elsewhere.","code":""},{"path":"/news/index.html","id":"huxtable-201","dir":"Changelog","previous_headings":"","what":"huxtable 2.0.1","title":"huxtable 2.0.1","text":"Fix quick_pdf error moving output across filesystems.","code":""},{"path":"/news/index.html","id":"huxtable-200","dir":"Changelog","previous_headings":"","what":"huxtable 2.0.0","title":"huxtable 2.0.0","text":"CRAN release: 2018-01-02 New quick_html, quick_pdf quick_docx functions print table-like objects new document. to_screen shows colnames non-zero-length column names.","code":""},{"path":"/news/index.html","id":"breaking-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"huxtable 2.0.0","text":"number_format now applies number-like substrings cells. means can include e.g. significance stars cell still use number_format format content. number_format NA, numbers unchanged. Default value number_format changed “%5.2f” “%5.3g”, plays nicer integers may surprise using scientific format large numbers.","code":""},{"path":"/news/index.html","id":"huxtable-120","dir":"Changelog","previous_headings":"","what":"huxtable 1.2.0","title":"huxtable 1.2.0","text":"CRAN release: 2017-12-17 New outer_borders argument huxreg. changes default behaviour slightly. New border argument add_footnote choose width footnote’s top border. Added guard assertions many exported functions. Bugfix: captions colnames wrapped to_screen respect max_width.","code":""},{"path":"/news/index.html","id":"huxtable-110","dir":"Changelog","previous_headings":"","what":"huxtable 1.1.0","title":"huxtable 1.1.0","text":"CRAN release: 2017-10-20 ugly autocreated column names. Allow huxtable invalid empty column names general. LaTeX now much faster large tables. set_outer_borders now accepts row/column arguments set_ functions. Better handling LaTeX horizontal borders don’t cross entire table. (varying positive border widths….) Bugfix: flextable didn’t like huxreg’s syntactically invalid column names. Accept, silently change, English spelling ‘centre’ align, position caption_pos.","code":""},{"path":"/news/index.html","id":"huxtable-100","dir":"Changelog","previous_headings":"","what":"huxtable 1.0.0","title":"huxtable 1.0.0","text":"CRAN release: 2017-10-07 LaTeX implements different thicknesses vertical horizontal borders (one horizontal thickness per row). LaTeX border colors now collapse nicely: set colors override unset ones. React gracefully lack p values huxreg. New set_outer_borders function set borders round rectangle cells. to_screen to_md now respect wrap col_widths properties. Screen markdown wrap respect word boundaries. to_screen to_md gain min_width argument; to_md gains logical header argument; to_screen gains compact argument replacing blank = NULL. screen colour bold support, crayon package installed. New huxtable.color_screen option. Move ReporteRs officer flextable. RJava horror. New error_format argument huxreg flexible control uncertainty estimates. Infrastructure improvements: slightly less ugly code screen.R LaTeX.R.","code":""},{"path":"/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"huxtable 1.0.0","text":"Removed options collapse, borders, blank colname_color to_screen/print_screen. as_FlexTable deprecated calls as_flextable warning. header_rows footer_rows arguments ignored. need feature, tell . HTML border sizes now set points, pixels. ci_level NULL default. Set number calculate confidence intervals. error_style deprecated warning favour error_format. Use stars %stars% display significance levels note argument. borders becomes number specifying border width. Set 0 borders.","code":""},{"path":"/news/index.html","id":"huxtable-031","dir":"Changelog","previous_headings":"","what":"huxtable 0.3.1","title":"huxtable 0.3.1","text":"CRAN release: 2017-09-12 New convenience functions insert_row insert_column. latex_float property allows change positioning LaTeX. (Semantic versioning fail: 0.4.0.)","code":""},{"path":"/news/index.html","id":"huxtable-030","dir":"Changelog","previous_headings":"","what":"huxtable 0.3.0","title":"huxtable 0.3.0","text":"CRAN release: 2017-05-18 New borders argument huxreg, gives borders sensible places. Allow flexible caption positioning caption_pos. New set_default_properties function set default properties new huxtables. Fix compatibility dplyr 0.6.0.","code":""},{"path":"/news/index.html","id":"huxtable-022","dir":"Changelog","previous_headings":"","what":"huxtable 0.2.2","title":"huxtable 0.2.2","text":"CRAN release: 2017-04-27 Fix bug lead wrong significance stars huxreg.","code":""},{"path":"/news/index.html","id":"huxtable-021","dir":"Changelog","previous_headings":"","what":"huxtable 0.2.1","title":"huxtable 0.2.1","text":"CRAN release: 2017-04-24 Compatibility dplyr 0.6.0. Use ~ decimal padding LaTeX.","code":""},{"path":"/news/index.html","id":"huxtable-020","dir":"Changelog","previous_headings":"","what":"huxtable 0.2.0","title":"huxtable 0.2.0","text":"CRAN release: 2017-04-21 New huxreg function convert list models huxtable. New set_* interface allowing column ranges, expressions la subset, filling values row. Replacement methods $<-, [<- [[<- now work better. New function set_cell_properties set multiple properties cells. evens, odds, everywhere, every(n, ), final(n), (cond): convenience functions select rows, columns cells. Export Word/Powerpoint via ReporteRs. Huxtable now supports dplyr verbs like filter select. Exported function guess_knitr_output_format. Ability set border colors. Prevent overlapping row/colspans. Expanded introduction new vignette huxreg. Numerous bugs fixed replaced new, advanced bugs.","code":""},{"path":"/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"huxtable 0.2.0","text":"theme_minimal renamed theme_basic avoid name clash ggplot2.","code":""},{"path":"/news/index.html","id":"huxtable-010","dir":"Changelog","previous_headings":"","what":"huxtable 0.1.0","title":"huxtable 0.1.0","text":"CRAN release: 2017-03-09 Added NEWS.md file track changes package. First CRAN release.","code":""}]
