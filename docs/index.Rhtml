<html>

<head>
<title>Huxtable - an R package for writing LaTeX and HTML tables</title>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
  $( function() {
    $("#example-container").tabs();
  } );
</script>

<style type="text/css">
p {
  margin-top: 24pt;
  margin-bottom: 12pt;
}

a {
  color: blue;
  font-weight: bold;
}

body {
  background-color: #F0EEEE;
  font-family: Arial, sans-serif;
}

body:after {
    content: ' ';
    display: block;
    background-attachment: fixed;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 500%;
    z-index: -1;
    background-image: url("assets/mondrian-composition-A.jpg");
}

main {
  background-color: white;
  border: 2px solid black;
  max-width: 1000px;
  margin-top: 40px;
  margin-bottom: 40px;
  margin-left: auto;
  margin-right: auto;
  padding: 5% 5% 5% 5%;
  /* box-shadow: 0px 0px 5px 2px black; */
}

.centred {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.source {
  /*background-color: #FFFA98;*/
  margin-bottom: 20px;
  margin-top: 0px;
  border: 2px solid black;
  margin-left: 10px;
  margin-right: 10px;
  /*border-radius: 5px;*/
}


.ui-tabs .source {
  position: relative;
  top: 15px;
}


pre.knitr {
  margin-top: 0px;
  padding-top: 13px;
  padding-bottom: 13px;
}

.ui-tabs {
  position: relative;
  top: 15px;
  width: 100%;
  padding-bottom: 20px;
  border-collapse: collapse;
}


.ui-tabs .ui-tabs-nav {
  list-style: none;
  overflow: hidden;
  z-index: 1000;
  padding: 0;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 0px;
  margin-top: 0px;
  background: white;
  width: 100%;
}


.ui-tabs .ui-tabs-nav li {
  position: relative;
  float: left;
  width: 20%;
  line-height: 30px;
  background: white;
  /* border-radius: 3px 3px 0px 0px; */
  border: 2px solid black;
  box-sizing: border-box;
}

.ui-tabs .ui-tabs-nav li a {
  margin-left: auto;
  margin-right: auto;
  text-decoration: none;
  text-align: center;
  color: black;
  font-weight: normal;
  padding: 5px 10px;
  font-size: 0.8em
}

.ui-tabs .ui-tabs-nav li.ui-tabs-active {
  /* border-bottom-width: 0; */
  background-color: red;
}

.ui-tabs .ui-tabs-panel {
  border-left: 2px solid black;
  border-right: 2px solid black;
  border-bottom: 2px solid black;
  border-collapse: collapse;
  height: 510px;
  overflow: scroll;
}

figure {
  border: 2px solid black;
  padding: 8px;
  width: 50%;
  margin-left: auto;
  margin-right: auto;
  font-size: 0.9em;
}

#ex-condformat table {
  font-size: 0.8em;
}


#ex-huxreg table {
  font-size: 0.75em;
}

#youtube {
  margin-left: auto;
  margin-right: auto;
  display: block;
}

</style>
</head>
<body>

<main>

<!--begin.rcode logo, echo = FALSE, results = 'asis'

suppressPackageStartupMessages(suppressWarnings(library(huxtable)))
knitr::knit_theme$set('edit-anjuta')
hux_logo(html = TRUE)

end.rcode-->

<p>&nbsp;</p>

<!-- Generated as a huxtable table, ignoring all rules of modern web design -->

<!--begin.rcode links, echo = FALSE, results = 'asis'

ht <- hux('<a href = "huxtable-html.html">Introduction</a>',
      '<a href = "design-principles-html.html">Design</a>',
      '<a href="reference/index.html">Documentation</a>',
      '<a href = "https://github.com/hughjonesd/huxtable">Github</a>',
      '<a href = "https://github.com/hughjonesd/huxtable/issues">Bugs</a>')
escape_contents(ht) <- FALSE
right_border(ht)[,1:4] <- 2
width(ht) <- .8
align(ht) <- 'center'
ht
end.rcode-->



<p>Huxtable is an R package to create LaTeX and HTML tables, with a friendly, modern interface.
Features include control over text styling,
number format, background color, borders, padding
and alignment. Cells can span multiple rows and/or columns.
Tables can be manipulated with standard R subsetting or
<code>dplyr</code> functions. Here are some quick examples:
</p>

<div id="example-container">
<ul>
  <li><a href="#ex-simple">Simple table</a></li>
  <li><a href="#ex-pipe">Pipe interface</a></li>
  <li><a href="#ex-condformat">Conditional formatting</a></li>
  <li><a href="#ex-huxreg">Table of regressions</a></li>
  <li><a href="#ex-quick">Quick document</a></li>
</ul>
<div class="example" id="ex-simple">
<!--begin.rcode echo = TRUE, results = 'asis'
ht <- hux(
        Employee = c("John Smith", "Jane Doe", "David Hugh-Jones"),
        Salary = c(50000, 50000, 40000),
        add_colnames = TRUE
      )

bold(ht)[1,]           <- TRUE
bottom_border(ht)[1,]  <- 0.4
align(ht)[,2]          <- "right"
right_padding(ht)      <- 10
left_padding(ht)       <- 10
width(ht)              <- 0.35
number_format(ht)      <- 2

ht
end.rcode-->
</div>

<div class="example" id="ex-pipe">
<!--begin.rcode echo = TRUE, results = 'asis'

library(magrittr)
ht <- hux(
        Employee = c("John Smith", "Jane Doe", "David Hugh-Jones"),
        Salary = c(50000, 50000, 40000)
      )

ht                                        |>
      set_bold(1, everywhere)             |>
      set_bottom_border(1, everywhere)    |>
      set_align(everywhere, 2, "right")   |>
      set_lr_padding(10)                  |>
      set_width(0.35)                     |>
      set_number_format(2)

end.rcode-->
</div>

<div class="example" id="ex-condformat">
<!--begin.rcode echo = TRUE, results = 'asis'

mtcars[1:5]                                                                           |>
      as_huxtable(add_rownames = "Model")                                             |>
      set_bold(1, everywhere, TRUE)                                                   |>
      set_all_borders(1)                                                              |>
      map_text_color(everywhere, "mpg",      by_colorspace("navy", "red", "yellow"))  |>
      map_background_color(everywhere, "hp", by_quantiles(0.8, c("white", "yellow"))) |>
      map_italic(everywhere, "Model",        by_regex("Merc.*" = TRUE))               |>
      head(12)

end.rcode-->
</div>

<div class="example" id="ex-huxreg">
<!--begin.rcode echo = TRUE, results = 'asis'

data(diamonds, package = "ggplot2")

lm1 <- lm(log(price) ~ carat, diamonds)
lm2 <- lm(log(price) ~ depth, diamonds)
lm3 <- lm(log(price) ~ carat + depth, diamonds)

huxreg(lm1, lm2, lm3, statistics = c("N" = "nobs", "R2" = "r.squared"))
end.rcode-->
</div>

<div class="example" id="ex-quick">
<!--begin.rcode echo = TRUE, eval = FALSE, results = 'asis'

quick_pdf(mtcars)
quick_docx(mtcars)
quick_html(mtcars)
quick_xlsx(mtcars)
# Files are produced in the current working directory.

end.rcode-->
<iframe width="560" height="315" src="https://www.youtube.com/embed/XzGabWGo6NE" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen id="youtube"></iframe>
</div>

</div>



<p>To learn more, check out the vignette in <a href="huxtable.html">HTML</a> or <a href="huxtable.pdf">PDF</a> format, or the original <a href="huxtable.Rmd">R Markdown</a>. Or,
read the <a href="design-principles.html">design principles</a> behind huxtable, including a comparison
with other R packages to create tables.</p>


<h3>Installation</h3>

<p>From R-Universe:</p>

<!--begin.rcode R-universe, echo = TRUE, eval = FALSE
install.packages("huxtable", repos = c("https://hughjonesd.r-universe.dev",
                                       "https://cloud.r-project.org"))
end.rcode-->

<p>From CRAN:</p>

<!--begin.rcode CRAN, echo = TRUE, eval = FALSE
install.packages("huxtable")
end.rcode-->

<p>Development version from github:</p>

<!--begin.rcode install, echo = TRUE, eval = FALSE

library(devtools)
install_github("hughjonesd/huxtable")
end.rcode-->

<h3>The name</h3>

<p>Huxtable could stand for "Happy User Xtable", or if you prefer, "Hyped Up Xtable", or for Germans maybe
"Html Und teX Table".</p>

<h3>Trivia</h3>
<p>The logo above was randomly generated by huxtable, using <code>hux_logo()</code>.
The web page background is <a href="https://en.wikipedia.org/wiki/Piet_Mondrian">Piet Mondrian</a>'s
<i>Composition A</i>.</p>

<h3>News</h3>


<h4>March 5, 2025: Huxtable 5.6.0 released</h4>

<p>This contains one bugfix, plus the ability to save multiple huxtables to
the same worksheet in <pre>as_Workbook()</pre>.</p>


<h4>October 1, 2024: Huxtable 5.5.7 released</h4>

<p>Bugfixes for quarto 1.5.</p>


<h4>February 8, 2024: Huxtable 5.5.5 released</h4>

<p>This contains bugfixes for quarto 1.4. Unfortunately, using
quarto references is no longer possible with TeX output and quarto 1.4.
Huxtable 5.5.4 was not released to CRAN due to a reverse dependency
issue.</p>

<h4>December 9, 2023: Huxtable 5.5.3 released</h4>

<p>This contains bugfixes for quarto and Word document output.</p>

<h4>December 16, 2022: Huxtable 5.5.2 released</h4>

<p>This contains one small change for compatibility with dplyr 1.1.0:
in <code>by_cases()</code>, when dplyr version 1.1.0 or above is detected,
the <code>.</code> variable is now shaped like a vector not a matrix.</p>

<h4>November 12, 2022: Huxtable 5.5.1 released</h4>

<p>This is a bugfix release.</p>

<h4>June 15, 2022: Huxtable 5.5.0 released</h4>

<p>This release makes sure huxtable plays nicely with <a href="https://quarto.org">quarto</a> documents. It adds some new convenience functions:</p>
<ul>
<li>
<code>stripe_rows()</code> and <code>stripe_columns()</code> add
a background color stripe to your table.</li>
<li>
<code>column_to_header()</code> converts one column to a set of headers.
</li>
</ul>

<h4>May 15, 2021: Huxtable 5.4.0 released</h4>

<p>This release fixes some bugs. It also contains one change that
may affect behaviour: when you merge cells (e.g. with <code>merge_cells()</code>
or by setting <code>colspan</code> or <code>rowspan</code>), cell contents
are copied from the top left cell to all the other "shadowed" cells. This
means that if you later subset or reorder the huxtable, the contents of
the merged cells won't change unexpectedly. Lastly, there is a new
option <code>"huxtable.latex_siunitx_align"</code>, which can be used to
align numbers on the decimal point using the TeX
<a href = "https://ctan.org/pkg/siunitx?lang=en">"siunitx"</a> package.</p>

<h4>May 1, 2021: Huxtable 5.3.0 released</h4>

<p>This release improves how cell alignment is handled in LaTeX when
<code>align(ht) == "."</code>. Regression tables and other numeric data
should now look much better!</p>


<h4>February 15, 2021: Huxtable 5.2.0 released</h4>

<p>This release fixes a bug in a test, and adds one new property,
<code>table_environment</code>, which sets the table environment to
use in LaTeX.</p>

<h4>October 28, 2020: Huxtable 5.1.1 released</h4>

<p>This release contains some small bugfixes for new versions of R.</p>

<h4>September 18, 2020: RStudio table contest</h4>

<p>RStudio is running a
<a href="https://blog.rstudio.com/2020/09/15/announcing-the-2020-rstudio-table-contest/">competition</a>
to produce nice tables from R. I will be
judging some of the entries. Download huxtable 5.1.0 (just released) and produce
something amazing!</p>

<h4>September 18, 2020: Huxtable 5.1.0 released</h4>

<p>This release contains several bugfixes, and some backwards-compatible
new features:</p>

<ul>
<li><code>as_flextable()</code> now exports markdown in cells to RTF, and to Word with the
  help of the optional "ftExtra" package.</li>
<li><code>options(huxtable.long_minus = TRUE)</code> will try to use long
  minus signs before negative numbers. The default is <code>FALSE</code>, for now.</li>
<li><code>as_Workbook()</code> gains <code>start_row</code> and <code>start_col</code>
  arguments, to write a huxtable into an Excel worksheet starting at a particular
  row or column.</li>
</ul>

<h4>June 16, 2020: Huxtable 5.0.0 released</h4>

<p>This release contains <i>many</i> changes and improvements. It also breaks
backwards compatibility.

<ul>
<li>Better LaTeX output.</li>
<li>Support for markdown in cells.</li>
<li>Easier borders.</li>
<li>New ways to split and reshape huxtables.</li>
<li>For full details, see the <a href="news/index.html">NEWS
file</a>.</li>
<li>For a friendly introduction, see
<a href="/whats-new-in-huxtable-5.0.0.html">this article</a>.</li>
</ul>

<h4>January 9, 2020: Huxtable 4.7.1 released</h4>

<p>This release added caption support for <code>as_flextable()</code>.
A new <code>colwise</code> argument for <code>by_quantiles()</code>,
<code>by_equal_groups()</code> and <code>by_colorspace()</code> allows
calculating quantiles or colors separately for
each column.</p>

<p>In other news, the <a href="https://github.com/gdemin/expss">expss</a> package now supports export to
huxtables.</p>


<h4>October 3, 2019: Huxtable 4.7.0 released</h4>

<p>This release improves error messages and adds some new functionality:</p>

<ul>
<li><code>merge_repeated_rows()</code> merges repeated rows in a huxtable
to create a single cell. This is useful for dealing with e.g. grouped
data frames.</li>
<li><code>insert_row()</code> and <code>insert_column()</code> gain two
new arguments, <code>fill</code> and <code>colspan/rowspan</code>. These
can be used to quickly create a header cell:</li>
</ul>

<!-- begin.rcode eval = FALSE
insert_row(ht, "Header Text", fill = "", colspan = ncol(ht))
end.rcode -->


<h4>August 6, 2019: Huxtable 4.6.1 released</h4>

<p>This release fixes two bugs, including one where cell borders around
merged cells were misplaced in LaTeX.</p>

<h4>June 12, 2019: Huxtable 4.6.0 released</h4>

<p>This release fixes a few bugs, and adds one new feature: the ability
to use portable font names across HTML and PDF, using the LaTeX
<code>fontspec</code> package. To switch this on, set
<code>options(huxtable.latex_use_fontspec = TRUE)</code>.

</p>

<h4>March 19, 2019: Huxtable 4.5.0 released</h4>

<p>This release fixes some CRAN bugs, and adds one new feature: a
<code>quick_latex()</code> function to export data to a .tex file.</p>



<h4>March 4, 2019: Huxtable 4.4.0 released</h4>

<p>This release contains some incremental improvements:</p>

<ul>
<li>Huxtables can now be printed directly in Word documents and Powerpoint presentations,
  thanks to the <code>flextable</code> package and recent versions of Pandoc. (Powerpoint printing
  requires Pandoc >= 2.4.0.)</li>
<li>New "wrapleft" and "wrapright" options to <code>position()</code> allow text wrapping around
  tables.</li>
<li>When possible, huxtable uses <code>tinytex</code> when available, allowing automatic
  installation of required latex packages.</li>
<li>New <code>set_outer_border_colors()</code> and <code>set_outer_border_styles()</code> functions,
  like <code>set_outer_borders()</code>.</li>
</ul>


<h4>November 7, 2018: Huxtable 4.3.0 released</h4>

<p>This release contains several improvements:</p>

<ul>
<li>New <code>map_xxx</code> functions to map values to properties.</li>
<li>New grey, blue, green and orange themes, and a new <a href="themes-html.html">"themes"</a> vignette.</li>
<li>Shorter, clearer vignettes and examples.</li>
<li>More work ensuring that TeX compiles OK.</li>
</ul>

<p>Here's an example of using <code>map_</code> functions to stripe a table, then pick out extreme
values:</o>

<!--begin.rcode echo = TRUE, results = 'asis'

data <- matrix(rnorm(25), 5, 5)
as_hux(data) |>
      set_outer_borders(0.4) |>
      map_background_color(by_rows("grey95", "white")) |>
      map_text_color(by_quantiles(c(0.1, 0.9), c("red", "black", "green3")))

end.rcode-->

<h4>October 26, 2018: Huxtable 4.2.1 released</h4>

<p>This patch release works around a bug with recent pandoc versions, which led to
  huxtable's TeX commands being escaped in some rmarkdown documents.</p>

<p>To apply the workaround, you will need to add:</p>
<p><code>
  md_extensions: +raw_attribute
</code></p>
to your YAML header.</p>

<p>If you still have problems, please <a href="https://github.com/hughjonesd/huxtable/issues">report
a bug</a>.</p>


<h4>October 3, 2018: Huxtable 4.2.0 released</h4>

<p>This minor point release adds a few features and bugfixes.</p>
<ul>
<li>LaTeX rendering should again be 2-3 times faster, <code>as_Workbook</code> should be faster too.</li>
<li>Simplify LaTeX output by creating and using our own LaTeX commands. Please report any bugs!</li>
<li>RTF support: new <code>print_rtf</code>, <code>to_rtf</code> and <code>quick_rtf</code> functions</li>
<li>New <code>border_style</code> properties to set "solid", "double", "dotted" or "dashed" borders.
  (At present, LaTeX only allows "solid" or "double".)</li>
<li>New <code>quick_pptx</code>function to print data frames and huxtables into Powerpoint.</li>
<li>There's a new <code>theme_mondrian</code> theme :-D</li>
</ul>

<h4>August 1, 2018: Huxtable 4.1.0 released</h4>

<p>This minor point release focuses on bugfixes, speed and maintainability.
<ul>
<li>HTML rendering should be up to 10 times faster, LaTeX should be up to 4 times faster.</li>
<li>Many packages have been moved to "Suggests:". You can now use huxtable without knitr,
rmarkdown or dplyr. All the functionality is still there - if a package is needed, huxtable
informs you with a warning message.</li>
<li>There are new <code>add_rows()</code> and <code>add_columns()</code> functions to easily insert
multiple rows and columns into a huxtable; and a new <code>tribble_hux()</code>, function based on
<code>tibble::tribble()</code>, for readable hand-written data.</li>
<li>Huxtable has a new, randomly generated logo :-)</li>
</ul>

<h4>June 2, 2018: Huxtable 4.0.0 released</h4>

<p>This release brings some changes. The most important are:</p>

<ul>
<li>Huxtable automatically pretty-prints data frames within <code>knitr</code> documents.</li>
<li>Column alignment and number format is assigned automatically for different data types.</li>
</ul>

<p>These are breaking changes, so you can set options to go back to the old behaviour.</p>

<p>One other change is being introduced gradually: <code>add_colnames</code> will be set to
<code>TRUE</code> by default in a future release. To future-proof your code, you can enable this
behaviour by setting <code>options(huxtable.add_colnames = TRUE)</code>.

<p>Other changes include a new <code>theme_plain</code> theme; automatically opening documents created by <code>quick_pdf</code> and
friends; and several bugfixes. Please
report any bugs in the <a href="https://github.com/hughjonesd/huxtable/issues">usual place</a>.</p>

<h4>February 23, 2018: Huxtable 3.0.0 released</h4>

<p>The major version bump marks a (small) change in the <code>quick_xxx</code> function
API: if called without an explicit <code>file</code> argument, these functions will
fail when called non-interactively, and will prompt before overwriting files if called
interactively. This prevents nasty surprises.</p>

<p>Excel output is now supported using the <a href="https://github.com/awalker89/openxlsx">openxlsx</a> package. Those working in a corporate environment can now create formatted spreadsheets to
make the pointy-haired boss happy.</p>

<p>You can now select columns using dplyr-style select helpers like <code>matches()</code> and
<code>starts_with()</code> in <code>set_*</code> functions.</p>


<figure>
<img src="assets/hux_logo-excel.png" alt="Huxtable logo in Excel" class="centred" style="margin-bottom: 8px; width: 400px;">
<figcaption style="text-align:center;">Printing the huxtable logo into an Excel spreadsheet</figcaption>
</figure>

<h4>January 3, 2018: Huxtable 2.0.0 released</h4>

<p>The major version bump marks a change in how numbers are shown. Numeric formatting
via <code>number_format</code>
now applies to any number found in a cell, even if there are non-numeric characters. This
means that e.g. cells like "2.71 (1.4) <sup>**</sup>" will have both numbers formatted.
</p>
<p>There are also new <code>quick_pdf</code>, <code>quick_html</code> and <code>quick_docx</code>
functions, for quick output of data frames or similar objects in different formats.</p>

<h4>October 2017: Huxtable 1.0.0 released!</h4>

<p>New features include:</p>
<ul>
<li>RJava-free export to Word and Powerpoint with <a href="https://davidgohel.github.io/officer/">officer</a></li>
<li>Variable border widths in LaTeX</li>
<li>On-screen color - works in R terminal or latest RStudio daily builds</li>
</ul>

<figure>
<img src="screen-color.png" alt="On-screen color" class="centred" style="margin-bottom: 8px;">
<figcaption style="text-align:center;">Going back to the 80s with on-screen color</figcaption>
</figure>

</main>

</body>
</html>
